/*
* generated by Xtext
*/
grammar InternalSearchDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.first8.elasticsearch.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.first8.elasticsearch.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.first8.elasticsearch.dsl.services.SearchDslGrammarAccess;

}

@parser::members {

 	private SearchDslGrammarAccess grammarAccess;
 	
    public InternalSearchDslParser(TokenStream input, SearchDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "SearchDSL";	
   	}
   	
   	@Override
   	protected SearchDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSearchDSL
entryRuleSearchDSL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSearchDSLRule()); }
	 iv_ruleSearchDSL=ruleSearchDSL 
	 { $current=$iv_ruleSearchDSL.current; } 
	 EOF 
;

// Rule SearchDSL
ruleSearchDSL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSearchDSLAccess().getLeftCurlyBracketKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getFieldsFieldsParserRuleCall_1_0_0()); 
	    }
		lv_fields_1_0=ruleFields		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"fields",
        		lv_fields_1_0, 
        		"Fields");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSearchDSLAccess().getCommaKeyword_1_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getFromFromParserRuleCall_2_0_0()); 
	    }
		lv_from_3_0=ruleFrom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"From");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSearchDSLAccess().getCommaKeyword_2_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getSizeSizeParserRuleCall_3_0_0()); 
	    }
		lv_size_5_0=ruleSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_5_0, 
        		"Size");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSearchDSLAccess().getCommaKeyword_3_1());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getSortSortParserRuleCall_4_0_0()); 
	    }
		lv_sort_7_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_7_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSearchDSLAccess().getCommaKeyword_4_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getQueryQueryParserRuleCall_5_0()); 
	    }
		lv_query_9_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_9_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSearchDSLAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getFacetsFacetsParserRuleCall_6_1_0()); 
	    }
		lv_facets_11_0=ruleFacets		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"facets",
        		lv_facets_11_0, 
        		"Facets");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSearchDSLAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSearchDSLAccess().getStatsStatsParserRuleCall_7_1_0()); 
	    }
		lv_stats_13_0=ruleStats		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSearchDSLRule());
	        }
       		set(
       			$current, 
       			"stats",
        		lv_stats_13_0, 
        		"Stats");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSearchDSLAccess().getRightCurlyBracketKeyword_8());
    }
)
;







// Entry rule entryRuleStats
entryRuleStats returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatsRule()); }
	 iv_ruleStats=ruleStats 
	 { $current=$iv_ruleStats.current; } 
	 EOF 
;

// Rule Stats
ruleStats returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"stats"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatsAccess().getStatsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStatsAccess().getColonKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStatsAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_groups_3_0=RULE_STRING
		{
			newLeafNode(lv_groups_3_0, grammarAccess.getStatsAccess().getGroupsSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"groups",
        		lv_groups_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStatsAccess().getCommaKeyword_4_0());
    }
(
(
		lv_groups_5_0=RULE_STRING
		{
			newLeafNode(lv_groups_5_0, grammarAccess.getStatsAccess().getGroupsSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"groups",
        		lv_groups_5_0, 
        		"STRING");
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStatsAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleFrom
entryRuleFrom returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFromRule()); } 
	 iv_ruleFrom=ruleFrom 
	 { $current=$iv_ruleFrom.current.getText(); }  
	 EOF 
;

// Rule From
ruleFrom returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"from"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFromAccess().getFromKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFromAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getFromAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleSize
entryRuleSize returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRule()); } 
	 iv_ruleSize=ruleSize 
	 { $current=$iv_ruleSize.current.getText(); }  
	 EOF 
;

// Rule Size
ruleSize returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"size"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSizeAccess().getSizeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSizeAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getSizeAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleSort
entryRuleSort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortRule()); }
	 iv_ruleSort=ruleSort 
	 { $current=$iv_ruleSort.current; } 
	 EOF 
;

// Rule Sort
ruleSort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"sort"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSortAccess().getSortKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSortAccess().getColonKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSortAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortAccess().getSortvaluesSortValueParserRuleCall_3_0()); 
	    }
		lv_sortvalues_3_0=ruleSortValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortRule());
	        }
       		add(
       			$current, 
       			"sortvalues",
        		lv_sortvalues_3_0, 
        		"SortValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSortAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortAccess().getSortvaluesSortValueParserRuleCall_4_1_0()); 
	    }
		lv_sortvalues_5_0=ruleSortValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortRule());
	        }
       		add(
       			$current, 
       			"sortvalues",
        		lv_sortvalues_5_0, 
        		"SortValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSortAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSortValue
entryRuleSortValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortValueRule()); }
	 iv_ruleSortValue=ruleSortValue 
	 { $current=$iv_ruleSortValue.current; } 
	 EOF 
;

// Rule SortValue
ruleSortValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sortFieldName_0_0=RULE_STRING
		{
			newLeafNode(lv_sortFieldName_0_0, grammarAccess.getSortValueAccess().getSortFieldNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSortValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sortFieldName",
        		lv_sortFieldName_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSortValueAccess().getSortShortObjectShortSortOjectParserRuleCall_1_0()); 
	    }
		lv_sortShortObject_1_0=ruleShortSortOject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortValueRule());
	        }
       		set(
       			$current, 
       			"sortShortObject",
        		lv_sortShortObject_1_0, 
        		"ShortSortOject");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSortValueAccess().getSortObjectSortObjectParserRuleCall_2_0()); 
	    }
		lv_sortObject_2_0=ruleSortObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortValueRule());
	        }
       		set(
       			$current, 
       			"sortObject",
        		lv_sortObject_2_0, 
        		"SortObject");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_sortByScore_3_0=	'"_score"' 
    {
        newLeafNode(lv_sortByScore_3_0, grammarAccess.getSortValueAccess().getSortByScore_scoreKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSortValueRule());
	        }
       		setWithLastConsumed($current, "sortByScore", lv_sortByScore_3_0, "\"_score\"");
	    }

)
))
;





// Entry rule entryRuleShortSortOject
entryRuleShortSortOject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortSortOjectRule()); }
	 iv_ruleShortSortOject=ruleShortSortOject 
	 { $current=$iv_ruleShortSortOject.current; } 
	 EOF 
;

// Rule ShortSortOject
ruleShortSortOject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShortSortOjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_sortFieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_sortFieldName_1_0, grammarAccess.getShortSortOjectAccess().getSortFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortSortOjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sortFieldName",
        		lv_sortFieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortSortOjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShortSortOjectAccess().getAscDescASC_DESCParserRuleCall_3_0()); 
	    }
		lv_ascDesc_3_0=ruleASC_DESC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShortSortOjectRule());
	        }
       		set(
       			$current, 
       			"ascDesc",
        		lv_ascDesc_3_0, 
        		"ASC_DESC");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortSortOjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSortObject
entryRuleSortObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortObjectRule()); }
	 iv_ruleSortObject=ruleSortObject 
	 { $current=$iv_ruleSortObject.current; } 
	 EOF 
;

// Rule SortObject
ruleSortObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSortObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_sortFieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_sortFieldName_1_0, grammarAccess.getSortObjectAccess().getSortFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSortObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sortFieldName",
        		lv_sortFieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSortObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortObjectAccess().getSortPropertiesSortObjectPropertiesObjectParserRuleCall_3_0()); 
	    }
		lv_sortProperties_3_0=ruleSortObjectPropertiesObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortObjectRule());
	        }
       		set(
       			$current, 
       			"sortProperties",
        		lv_sortProperties_3_0, 
        		"SortObjectPropertiesObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSortObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSortObjectPropertiesObject
entryRuleSortObjectPropertiesObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortObjectPropertiesObjectRule()); }
	 iv_ruleSortObjectPropertiesObject=ruleSortObjectPropertiesObject 
	 { $current=$iv_ruleSortObjectPropertiesObject.current; } 
	 EOF 
;

// Rule SortObjectPropertiesObject
ruleSortObjectPropertiesObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSortObjectPropertiesObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortObjectPropertiesObjectAccess().getSortSortObjectPropertyParserRuleCall_1_0()); 
	    }
		lv_sort_1_0=ruleSortObjectProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortObjectPropertiesObjectRule());
	        }
       		add(
       			$current, 
       			"sort",
        		lv_sort_1_0, 
        		"SortObjectProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSortObjectPropertiesObjectAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortObjectPropertiesObjectAccess().getSortSortObjectPropertyParserRuleCall_2_1_0()); 
	    }
		lv_sort_3_0=ruleSortObjectProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortObjectPropertiesObjectRule());
	        }
       		add(
       			$current, 
       			"sort",
        		lv_sort_3_0, 
        		"SortObjectProperty");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSortObjectPropertiesObjectAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSortObjectProperty
entryRuleSortObjectProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortObjectPropertyRule()); }
	 iv_ruleSortObjectProperty=ruleSortObjectProperty 
	 { $current=$iv_ruleSortObjectProperty.current; } 
	 EOF 
;

// Rule SortObjectProperty
ruleSortObjectProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"order"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSortObjectPropertyAccess().getOrderKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSortObjectPropertyAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortObjectPropertyAccess().getOrderASC_DESCParserRuleCall_0_2_0()); 
	    }
		lv_order_2_0=ruleASC_DESC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortObjectPropertyRule());
	        }
       		set(
       			$current, 
       			"order",
        		lv_order_2_0, 
        		"ASC_DESC");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='"mode"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSortObjectPropertyAccess().getModeKeyword_1_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSortObjectPropertyAccess().getColonKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortObjectPropertyAccess().getSortModeSORT_MODEParserRuleCall_1_2_0()); 
	    }
		lv_sortMode_5_0=ruleSORT_MODE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortObjectPropertyRule());
	        }
       		set(
       			$current, 
       			"sortMode",
        		lv_sortMode_5_0, 
        		"SORT_MODE");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6='"missing"' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSortObjectPropertyAccess().getMissingKeyword_2_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSortObjectPropertyAccess().getColonKeyword_2_1());
    }
(
(
		lv_missing_8_0=RULE_STRING
		{
			newLeafNode(lv_missing_8_0, grammarAccess.getSortObjectPropertyAccess().getMissingSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSortObjectPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"missing",
        		lv_missing_8_0, 
        		"STRING");
	    }

)
)))
;





// Entry rule entryRuleSORT_MODE
entryRuleSORT_MODE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSORT_MODERule()); }
	 iv_ruleSORT_MODE=ruleSORT_MODE 
	 { $current=$iv_ruleSORT_MODE.current; } 
	 EOF 
;

// Rule SORT_MODE
ruleSORT_MODE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_sortMode_0_1=	'"min"' 
    {
        newLeafNode(lv_sortMode_0_1, grammarAccess.getSORT_MODEAccess().getSortModeMinKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSORT_MODERule());
	        }
       		setWithLastConsumed($current, "sortMode", lv_sortMode_0_1, null);
	    }

    |		lv_sortMode_0_2=	'"max"' 
    {
        newLeafNode(lv_sortMode_0_2, grammarAccess.getSORT_MODEAccess().getSortModeMaxKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSORT_MODERule());
	        }
       		setWithLastConsumed($current, "sortMode", lv_sortMode_0_2, null);
	    }

    |		lv_sortMode_0_3=	'"avg"' 
    {
        newLeafNode(lv_sortMode_0_3, grammarAccess.getSORT_MODEAccess().getSortModeAvgKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSORT_MODERule());
	        }
       		setWithLastConsumed($current, "sortMode", lv_sortMode_0_3, null);
	    }

    |		lv_sortMode_0_4=	'\'sum\'' 
    {
        newLeafNode(lv_sortMode_0_4, grammarAccess.getSORT_MODEAccess().getSortModeSumKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSORT_MODERule());
	        }
       		setWithLastConsumed($current, "sortMode", lv_sortMode_0_4, null);
	    }

)

)
)
;





// Entry rule entryRuleASC_DESC
entryRuleASC_DESC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getASC_DESCRule()); }
	 iv_ruleASC_DESC=ruleASC_DESC 
	 { $current=$iv_ruleASC_DESC.current; } 
	 EOF 
;

// Rule ASC_DESC
ruleASC_DESC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_ascDesc_0_1=	'"asc"' 
    {
        newLeafNode(lv_ascDesc_0_1, grammarAccess.getASC_DESCAccess().getAscDescAscKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getASC_DESCRule());
	        }
       		setWithLastConsumed($current, "ascDesc", lv_ascDesc_0_1, null);
	    }

    |		lv_ascDesc_0_2=	'"desc"' 
    {
        newLeafNode(lv_ascDesc_0_2, grammarAccess.getASC_DESCAccess().getAscDescDescKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getASC_DESCRule());
	        }
       		setWithLastConsumed($current, "ascDesc", lv_ascDesc_0_2, null);
	    }

)

)
)
;





// Entry rule entryRuleFields
entryRuleFields returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldsRule()); }
	 iv_ruleFields=ruleFields 
	 { $current=$iv_ruleFields.current; } 
	 EOF 
;

// Rule Fields
ruleFields returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"fields"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldsAccess().getFieldsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldsAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldsAccess().getSelectfieldsArrayParserRuleCall_2_0()); 
	    }
		lv_selectfields_2_0=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldsRule());
	        }
       		set(
       			$current, 
       			"selectfields",
        		lv_selectfields_2_0, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	 iv_ruleQuery=ruleQuery 
	 { $current=$iv_ruleQuery.current; } 
	 EOF 
;

// Rule Query
ruleQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"query"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQueryAccess().getQueryKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQueryAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryAccess().getQueryQueryObjectParserRuleCall_2_0()); 
	    }
		lv_query_2_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_2_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFilter
entryRuleFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterRule()); }
	 iv_ruleFilter=ruleFilter 
	 { $current=$iv_ruleFilter.current; } 
	 EOF 
;

// Rule Filter
ruleFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"filter"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFilterAccess().getFilterKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFilterAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterAccess().getFilterFilterObjectParserRuleCall_2_0()); 
	    }
		lv_filter_2_0=ruleFilterObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_2_0, 
        		"FilterObject");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFilterObject
entryRuleFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterObjectRule()); }
	 iv_ruleFilterObject=ruleFilterObject 
	 { $current=$iv_ruleFilterObject.current; } 
	 EOF 
;

// Rule FilterObject
ruleFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getFilterObjectAccess().getFilterTypeParserRuleCall_1()); 
    }
    this_FilterType_1=ruleFilterType
    { 
        $current = $this_FilterType_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFilterObjectAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleFilterType
entryRuleFilterType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterTypeRule()); }
	 iv_ruleFilterType=ruleFilterType 
	 { $current=$iv_ruleFilterType.current; } 
	 EOF 
;

// Rule FilterType
ruleFilterType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getAndAndFilterParserRuleCall_0_0()); 
	    }
		lv_and_0_0=ruleAndFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"and",
        		lv_and_0_0, 
        		"AndFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getBoolBoolFilterParserRuleCall_1_0()); 
	    }
		lv_bool_1_0=ruleBoolFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"bool",
        		lv_bool_1_0, 
        		"BoolFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getExistsExistsFilterParserRuleCall_2_0()); 
	    }
		lv_exists_2_0=ruleExistsFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"exists",
        		lv_exists_2_0, 
        		"ExistsFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getGeoBoundingBoxGeoBoundingBoxFilterParserRuleCall_3_0()); 
	    }
		lv_geoBoundingBox_3_0=ruleGeoBoundingBoxFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"geoBoundingBox",
        		lv_geoBoundingBox_3_0, 
        		"GeoBoundingBoxFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getGeoDistanceGeoDistanceFilterParserRuleCall_4_0()); 
	    }
		lv_geoDistance_4_0=ruleGeoDistanceFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"geoDistance",
        		lv_geoDistance_4_0, 
        		"GeoDistanceFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getGeoDistanceRangeGeoDistanceRangeFilterParserRuleCall_5_0()); 
	    }
		lv_geoDistanceRange_5_0=ruleGeoDistanceRangeFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"geoDistanceRange",
        		lv_geoDistanceRange_5_0, 
        		"GeoDistanceRangeFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getGeoPolygonGeoPolygonFilterParserRuleCall_6_0()); 
	    }
		lv_geoPolygon_6_0=ruleGeoPolygonFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"geoPolygon",
        		lv_geoPolygon_6_0, 
        		"GeoPolygonFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getGeoShapeGeoShapeFilterParserRuleCall_7_0()); 
	    }
		lv_geoShape_7_0=ruleGeoShapeFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"geoShape",
        		lv_geoShape_7_0, 
        		"GeoShapeFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getGeoHashCellGeohashCellFilterParserRuleCall_8_0()); 
	    }
		lv_geoHashCell_8_0=ruleGeohashCellFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"geoHashCell",
        		lv_geoHashCell_8_0, 
        		"GeohashCellFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getHasChildHasChildFilterParserRuleCall_9_0()); 
	    }
		lv_hasChild_9_0=ruleHasChildFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"hasChild",
        		lv_hasChild_9_0, 
        		"HasChildFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getHasParentHasParentFilterParserRuleCall_10_0()); 
	    }
		lv_hasParent_10_0=ruleHasParentFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"hasParent",
        		lv_hasParent_10_0, 
        		"HasParentFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getIdsIdsFilterParserRuleCall_11_0()); 
	    }
		lv_ids_11_0=ruleIdsFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"ids",
        		lv_ids_11_0, 
        		"IdsFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getIndicesIndicesFilterParserRuleCall_12_0()); 
	    }
		lv_indices_12_0=ruleIndicesFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"indices",
        		lv_indices_12_0, 
        		"IndicesFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getLimitLimitFilterParserRuleCall_13_0()); 
	    }
		lv_limit_13_0=ruleLimitFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"limit",
        		lv_limit_13_0, 
        		"LimitFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getMatchAllMatchAllFilterParserRuleCall_14_0()); 
	    }
		lv_matchAll_14_0=ruleMatchAllFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"matchAll",
        		lv_matchAll_14_0, 
        		"MatchAllFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getMissingMissingFilterParserRuleCall_15_0()); 
	    }
		lv_missing_15_0=ruleMissingFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"missing",
        		lv_missing_15_0, 
        		"MissingFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getNestedNestedFilterParserRuleCall_16_0()); 
	    }
		lv_nested_16_0=ruleNestedFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"nested",
        		lv_nested_16_0, 
        		"NestedFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getNotNotFilterParserRuleCall_17_0()); 
	    }
		lv_not_17_0=ruleNotFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"not",
        		lv_not_17_0, 
        		"NotFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getOrOrFilterParserRuleCall_18_0()); 
	    }
		lv_or_18_0=ruleOrFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"or",
        		lv_or_18_0, 
        		"OrFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getPrefixPrefixFilterParserRuleCall_19_0()); 
	    }
		lv_prefix_19_0=rulePrefixFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_19_0, 
        		"PrefixFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getQueryQueryFilterParserRuleCall_20_0()); 
	    }
		lv_query_20_0=ruleQueryFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_20_0, 
        		"QueryFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getRegexpRegexpFilterParserRuleCall_21_0()); 
	    }
		lv_regexp_21_0=ruleRegexpFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"regexp",
        		lv_regexp_21_0, 
        		"RegexpFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getScriptScriptFilterParserRuleCall_22_0()); 
	    }
		lv_script_22_0=ruleScriptFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"script",
        		lv_script_22_0, 
        		"ScriptFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getTermTermFilterParserRuleCall_23_0()); 
	    }
		lv_term_23_0=ruleTermFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_23_0, 
        		"TermFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getTermsTermsFilterParserRuleCall_24_0()); 
	    }
		lv_terms_24_0=ruleTermsFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"terms",
        		lv_terms_24_0, 
        		"TermsFilter");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFilterTypeAccess().getTypeTypeFilterParserRuleCall_25_0()); 
	    }
		lv_type_25_0=ruleTypeFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilterTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_25_0, 
        		"TypeFilter");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQueryObject
entryRuleQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryObjectRule()); }
	 iv_ruleQueryObject=ruleQueryObject 
	 { $current=$iv_ruleQueryObject.current; } 
	 EOF 
;

// Rule QueryObject
ruleQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryObjectAccess().getQueryTypeQueryTypeParserRuleCall_1_0()); 
	    }
		lv_queryType_1_0=ruleQueryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryObjectRule());
	        }
       		set(
       			$current, 
       			"queryType",
        		lv_queryType_1_0, 
        		"QueryType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQueryObjectAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleQueryType
entryRuleQueryType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryTypeRule()); }
	 iv_ruleQueryType=ruleQueryType 
	 { $current=$iv_ruleQueryType.current; } 
	 EOF 
;

// Rule QueryType
ruleQueryType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getMatchMatchQueryParserRuleCall_0_0()); 
	    }
		lv_match_0_0=ruleMatchQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"match",
        		lv_match_0_0, 
        		"MatchQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getMultiMatchMultiMatchQueryParserRuleCall_1_0()); 
	    }
		lv_multiMatch_1_0=ruleMultiMatchQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"multiMatch",
        		lv_multiMatch_1_0, 
        		"MultiMatchQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getBoolBoolQueryParserRuleCall_2_0()); 
	    }
		lv_bool_2_0=ruleBoolQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"bool",
        		lv_bool_2_0, 
        		"BoolQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getCommonCommonQueryParserRuleCall_3_0()); 
	    }
		lv_common_3_0=ruleCommonQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"common",
        		lv_common_3_0, 
        		"CommonQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getConstantScoreConstantScoreQueryParserRuleCall_4_0()); 
	    }
		lv_constantScore_4_0=ruleConstantScoreQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"constantScore",
        		lv_constantScore_4_0, 
        		"ConstantScoreQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getDisMaxDisMaxQueryParserRuleCall_5_0()); 
	    }
		lv_disMax_5_0=ruleDisMaxQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"disMax",
        		lv_disMax_5_0, 
        		"DisMaxQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getFilteredFilteredQueryParserRuleCall_6_0()); 
	    }
		lv_filtered_6_0=ruleFilteredQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"filtered",
        		lv_filtered_6_0, 
        		"FilteredQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getFuzzyLikeThisFuzzyLikeThisQueryParserRuleCall_7_0()); 
	    }
		lv_fuzzyLikeThis_7_0=ruleFuzzyLikeThisQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"fuzzyLikeThis",
        		lv_fuzzyLikeThis_7_0, 
        		"FuzzyLikeThisQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getFuzzyLikeThisFieldFuzzyLikeThisFieldQueryParserRuleCall_8_0()); 
	    }
		lv_fuzzyLikeThisField_8_0=ruleFuzzyLikeThisFieldQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"fuzzyLikeThisField",
        		lv_fuzzyLikeThisField_8_0, 
        		"FuzzyLikeThisFieldQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getGeoshapeGeoshapeQueryParserRuleCall_9_0()); 
	    }
		lv_geoshape_9_0=ruleGeoshapeQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"geoshape",
        		lv_geoshape_9_0, 
        		"GeoshapeQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getHasChildHasChildQueryParserRuleCall_10_0()); 
	    }
		lv_hasChild_10_0=ruleHasChildQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"hasChild",
        		lv_hasChild_10_0, 
        		"HasChildQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getHasParentHasParentQueryParserRuleCall_11_0()); 
	    }
		lv_hasParent_11_0=ruleHasParentQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"hasParent",
        		lv_hasParent_11_0, 
        		"HasParentQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getIdsIdsQueryParserRuleCall_12_0()); 
	    }
		lv_ids_12_0=ruleIdsQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"ids",
        		lv_ids_12_0, 
        		"IdsQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getIndicesIndicesQueryParserRuleCall_13_0()); 
	    }
		lv_indices_13_0=ruleIndicesQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"indices",
        		lv_indices_13_0, 
        		"IndicesQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getMatchAllMatchAllQueryParserRuleCall_14_0()); 
	    }
		lv_matchAll_14_0=ruleMatchAllQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"matchAll",
        		lv_matchAll_14_0, 
        		"MatchAllQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getMoreLikeThisMoreLikeThisQueryParserRuleCall_15_0()); 
	    }
		lv_moreLikeThis_15_0=ruleMoreLikeThisQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"moreLikeThis",
        		lv_moreLikeThis_15_0, 
        		"MoreLikeThisQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getMoreLikeThisFieldMoreLikeThisFieldQueryParserRuleCall_16_0()); 
	    }
		lv_moreLikeThisField_16_0=ruleMoreLikeThisFieldQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"moreLikeThisField",
        		lv_moreLikeThisField_16_0, 
        		"MoreLikeThisFieldQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getNestedNestedQueryParserRuleCall_17_0()); 
	    }
		lv_nested_17_0=ruleNestedQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"nested",
        		lv_nested_17_0, 
        		"NestedQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getQueryStringQueryStringQueryParserRuleCall_18_0()); 
	    }
		lv_queryString_18_0=ruleQueryStringQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"queryString",
        		lv_queryString_18_0, 
        		"QueryStringQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSimpleQuerySimpleQueryStringQueryParserRuleCall_19_0()); 
	    }
		lv_simpleQuery_19_0=ruleSimpleQueryStringQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"simpleQuery",
        		lv_simpleQuery_19_0, 
        		"SimpleQueryStringQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSpanFirstSpanFirstQueryParserRuleCall_20_0()); 
	    }
		lv_spanFirst_20_0=ruleSpanFirstQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"spanFirst",
        		lv_spanFirst_20_0, 
        		"SpanFirstQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSpanMultiSpanMultiQueryParserRuleCall_21_0()); 
	    }
		lv_spanMulti_21_0=ruleSpanMultiQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"spanMulti",
        		lv_spanMulti_21_0, 
        		"SpanMultiQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSpanNearSpanNearQueryParserRuleCall_22_0()); 
	    }
		lv_spanNear_22_0=ruleSpanNearQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"spanNear",
        		lv_spanNear_22_0, 
        		"SpanNearQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSpanNotSpanNotQueryParserRuleCall_23_0()); 
	    }
		lv_spanNot_23_0=ruleSpanNotQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"spanNot",
        		lv_spanNot_23_0, 
        		"SpanNotQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSpanOrSpanOrQueryParserRuleCall_24_0()); 
	    }
		lv_spanOr_24_0=ruleSpanOrQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"spanOr",
        		lv_spanOr_24_0, 
        		"SpanOrQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getSpanTermSpanTermQueryParserRuleCall_25_0()); 
	    }
		lv_spanTerm_25_0=ruleSpanTermQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"spanTerm",
        		lv_spanTerm_25_0, 
        		"SpanTermQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getFuzzyFuzzyQueryParserRuleCall_26_0()); 
	    }
		lv_fuzzy_26_0=ruleFuzzyQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"fuzzy",
        		lv_fuzzy_26_0, 
        		"FuzzyQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getPrefixPrefixQueryParserRuleCall_27_0()); 
	    }
		lv_prefix_27_0=rulePrefixQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_27_0, 
        		"PrefixQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getTermTermQueryParserRuleCall_28_0()); 
	    }
		lv_term_28_0=ruleTermQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_28_0, 
        		"TermQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getRangeRangeQueryParserRuleCall_29_0()); 
	    }
		lv_range_29_0=ruleRangeQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_29_0, 
        		"RangeQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getRegexpRegexpQueryParserRuleCall_30_0()); 
	    }
		lv_regexp_30_0=ruleRegexpQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"regexp",
        		lv_regexp_30_0, 
        		"RegexpQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getWildcardWildcardQueryParserRuleCall_31_0()); 
	    }
		lv_wildcard_31_0=ruleWildcardQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"wildcard",
        		lv_wildcard_31_0, 
        		"WildcardQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getTermsTermsQueryParserRuleCall_32_0()); 
	    }
		lv_terms_32_0=ruleTermsQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"terms",
        		lv_terms_32_0, 
        		"TermsQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryTypeAccess().getTopChildrenTopChildrenQueryParserRuleCall_33_0()); 
	    }
		lv_topChildren_33_0=ruleTopChildrenQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryTypeRule());
	        }
       		set(
       			$current, 
       			"topChildren",
        		lv_topChildren_33_0, 
        		"TopChildrenQuery");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSpanQuery
entryRuleSpanQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanQueryRule()); }
	 iv_ruleSpanQuery=ruleSpanQuery 
	 { $current=$iv_ruleSpanQuery.current; } 
	 EOF 
;

// Rule SpanQuery
ruleSpanQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSpanQueryAccess().getSpanQuerySpanFirstQueryParserRuleCall_0_0()); 
	    }
		lv_spanQuery_0_0=ruleSpanFirstQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanQueryRule());
	        }
       		set(
       			$current, 
       			"spanQuery",
        		lv_spanQuery_0_0, 
        		"SpanFirstQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getSpanQueryAccess().getSpanMultiQueryParserRuleCall_1()); 
    }
    this_SpanMultiQuery_1=ruleSpanMultiQuery
    { 
        $current = $this_SpanMultiQuery_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpanQueryAccess().getSpanNearQueryParserRuleCall_2()); 
    }
    this_SpanNearQuery_2=ruleSpanNearQuery
    { 
        $current = $this_SpanNearQuery_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpanQueryAccess().getSpanNotQueryParserRuleCall_3()); 
    }
    this_SpanNotQuery_3=ruleSpanNotQuery
    { 
        $current = $this_SpanNotQuery_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpanQueryAccess().getSpanOrQueryParserRuleCall_4()); 
    }
    this_SpanOrQuery_4=ruleSpanOrQuery
    { 
        $current = $this_SpanOrQuery_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSpanQueryAccess().getSpanTermQueryParserRuleCall_5()); 
    }
    this_SpanTermQuery_5=ruleSpanTermQuery
    { 
        $current = $this_SpanTermQuery_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMultiTermQuery
entryRuleMultiTermQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiTermQueryRule()); }
	 iv_ruleMultiTermQuery=ruleMultiTermQuery 
	 { $current=$iv_ruleMultiTermQuery.current; } 
	 EOF 
;

// Rule MultiTermQuery
ruleMultiTermQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiTermQueryAccess().getMultiTermQueryFuzzyQueryParserRuleCall_0_0()); 
	    }
		lv_multiTermQuery_0_0=ruleFuzzyQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiTermQueryRule());
	        }
       		set(
       			$current, 
       			"multiTermQuery",
        		lv_multiTermQuery_0_0, 
        		"FuzzyQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getMultiTermQueryAccess().getPrefixQueryParserRuleCall_1()); 
    }
    this_PrefixQuery_1=rulePrefixQuery
    { 
        $current = $this_PrefixQuery_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMultiTermQueryAccess().getTermQueryParserRuleCall_2()); 
    }
    this_TermQuery_2=ruleTermQuery
    { 
        $current = $this_TermQuery_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMultiTermQueryAccess().getRangeQueryParserRuleCall_3()); 
    }
    this_RangeQuery_3=ruleRangeQuery
    { 
        $current = $this_RangeQuery_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMultiTermQueryAccess().getRegexpQueryParserRuleCall_4()); 
    }
    this_RegexpQuery_4=ruleRegexpQuery
    { 
        $current = $this_RegexpQuery_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMultiTermQueryAccess().getWildcardQueryParserRuleCall_5()); 
    }
    this_WildcardQuery_5=ruleWildcardQuery
    { 
        $current = $this_WildcardQuery_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFacets
entryRuleFacets returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetsRule()); }
	 iv_ruleFacets=ruleFacets 
	 { $current=$iv_ruleFacets.current; } 
	 EOF 
;

// Rule Facets
ruleFacets returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"facets"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFacetsAccess().getFacetsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFacetsAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getFacetsAccess().getFacetsObjectParserRuleCall_2()); 
    }
    this_FacetsObject_2=ruleFacetsObject
    { 
        $current = $this_FacetsObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFacetsObject
entryRuleFacetsObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetsObjectRule()); }
	 iv_ruleFacetsObject=ruleFacetsObject 
	 { $current=$iv_ruleFacetsObject.current; } 
	 EOF 
;

// Rule FacetsObject
ruleFacetsObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFacetsObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_facetName_1_0=RULE_STRING
		{
			newLeafNode(lv_facetName_1_0, grammarAccess.getFacetsObjectAccess().getFacetNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFacetsObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"facetName",
        		lv_facetName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFacetsObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsObjectAccess().getConfigFacetTypeObjectParserRuleCall_3_0()); 
	    }
		lv_config_3_0=ruleFacetTypeObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsObjectRule());
	        }
       		set(
       			$current, 
       			"config",
        		lv_config_3_0, 
        		"FacetTypeObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFacetsObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetsObjectAccess().getParamsFacetParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleFacetParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetsObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"FacetParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFacetsObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleFacetTypeObject
entryRuleFacetTypeObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetTypeObjectRule()); }
	 iv_ruleFacetTypeObject=ruleFacetTypeObject 
	 { $current=$iv_ruleFacetTypeObject.current; } 
	 EOF 
;

// Rule FacetTypeObject
ruleFacetTypeObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFacetTypeObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetTypeObjectAccess().getFacetTypeFacetTypeParserRuleCall_1_0()); 
	    }
		lv_facetType_1_0=ruleFacetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetTypeObjectRule());
	        }
       		set(
       			$current, 
       			"facetType",
        		lv_facetType_1_0, 
        		"FacetType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFacetTypeObjectAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleFacetType
entryRuleFacetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetTypeRule()); }
	 iv_ruleFacetType=ruleFacetType 
	 { $current=$iv_ruleFacetType.current; } 
	 EOF 
;

// Rule FacetType
ruleFacetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFacetTypeAccess().getFacetTypeTermsFacetParserRuleCall_0_0()); 
	    }
		lv_facetType_0_0=ruleTermsFacet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetTypeRule());
	        }
       		set(
       			$current, 
       			"facetType",
        		lv_facetType_0_0, 
        		"TermsFacet");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getRangeFacetParserRuleCall_1()); 
    }
    this_RangeFacet_1=ruleRangeFacet
    { 
        $current = $this_RangeFacet_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getHistogramFacetParserRuleCall_2()); 
    }
    this_HistogramFacet_2=ruleHistogramFacet
    { 
        $current = $this_HistogramFacet_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getDateHistogramFacetParserRuleCall_3()); 
    }
    this_DateHistogramFacet_3=ruleDateHistogramFacet
    { 
        $current = $this_DateHistogramFacet_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getFilterFacetParserRuleCall_4()); 
    }
    this_FilterFacet_4=ruleFilterFacet
    { 
        $current = $this_FilterFacet_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getQueryFacetParserRuleCall_5()); 
    }
    this_QueryFacet_5=ruleQueryFacet
    { 
        $current = $this_QueryFacet_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getStatisticalFacetParserRuleCall_6()); 
    }
    this_StatisticalFacet_6=ruleStatisticalFacet
    { 
        $current = $this_StatisticalFacet_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getTermsStatsFacetParserRuleCall_7()); 
    }
    this_TermsStatsFacet_7=ruleTermsStatsFacet
    { 
        $current = $this_TermsStatsFacet_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFacetTypeAccess().getGeoDistanceFacetParserRuleCall_8()); 
    }
    this_GeoDistanceFacet_8=ruleGeoDistanceFacet
    { 
        $current = $this_GeoDistanceFacet_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoDistanceFacet
entryRuleGeoDistanceFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceFacetRule()); }
	 iv_ruleGeoDistanceFacet=ruleGeoDistanceFacet 
	 { $current=$iv_ruleGeoDistanceFacet.current; } 
	 EOF 
;

// Rule GeoDistanceFacet
ruleGeoDistanceFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_distance"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoDistanceFacetAccess().getGeo_distanceKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoDistanceFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoDistanceFacetAccess().getGeoDistanceFacetObjectParserRuleCall_2()); 
    }
    this_GeoDistanceFacetObject_2=ruleGeoDistanceFacetObject
    { 
        $current = $this_GeoDistanceFacetObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoDistanceFacetObject
entryRuleGeoDistanceFacetObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceFacetObjectRule()); }
	 iv_ruleGeoDistanceFacetObject=ruleGeoDistanceFacetObject 
	 { $current=$iv_ruleGeoDistanceFacetObject.current; } 
	 EOF 
;

// Rule GeoDistanceFacetObject
ruleGeoDistanceFacetObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoDistanceFacetObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getGeoDistanceFacetObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoDistanceFacetObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoDistanceFacetObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoDistanceFacetObjectAccess().getPointLatLonParserRuleCall_3_0()); 
	    }
		lv_point_3_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoDistanceFacetObjectRule());
	        }
       		set(
       			$current, 
       			"point",
        		lv_point_3_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoDistanceFacetObjectAccess().getCommaKeyword_4());
    }

    { 
        newCompositeNode(grammarAccess.getGeoDistanceFacetObjectAccess().getRangesParamParserRuleCall_5()); 
    }
ruleRangesParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGeoDistanceFacetObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTermsStatsFacet
entryRuleTermsStatsFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsStatsFacetRule()); }
	 iv_ruleTermsStatsFacet=ruleTermsStatsFacet 
	 { $current=$iv_ruleTermsStatsFacet.current; } 
	 EOF 
;

// Rule TermsStatsFacet
ruleTermsStatsFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"terms_stats"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsStatsFacetAccess().getTerms_statsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermsStatsFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTermsStatsFacetAccess().getObjectParserRuleCall_2()); 
    }
    this_Object_2=ruleObject
    { 
        $current = $this_Object_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStatisticalFacet
entryRuleStatisticalFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatisticalFacetRule()); }
	 iv_ruleStatisticalFacet=ruleStatisticalFacet 
	 { $current=$iv_ruleStatisticalFacet.current; } 
	 EOF 
;

// Rule StatisticalFacet
ruleStatisticalFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"statistical"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatisticalFacetAccess().getStatisticalKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStatisticalFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getStatisticalFacetAccess().getStatisticalFacetObjectParserRuleCall_2()); 
    }
    this_StatisticalFacetObject_2=ruleStatisticalFacetObject
    { 
        $current = $this_StatisticalFacetObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStatisticalFacetObject
entryRuleStatisticalFacetObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatisticalFacetObjectRule()); }
	 iv_ruleStatisticalFacetObject=ruleStatisticalFacetObject 
	 { $current=$iv_ruleStatisticalFacetObject.current; } 
	 EOF 
;

// Rule StatisticalFacetObject
ruleStatisticalFacetObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatisticalFacetObjectAccess().getLeftCurlyBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatisticalFacetObjectAccess().getFieldFieldParamParserRuleCall_0_1_0()); 
	    }
		lv_field_1_0=ruleFieldParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatisticalFacetObjectRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_1_0, 
        		"FieldParam");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStatisticalFacetObjectAccess().getScriptScriptParamParserRuleCall_1_0()); 
	    }
		lv_script_2_0=ruleScriptParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatisticalFacetObjectRule());
	        }
       		set(
       			$current, 
       			"script",
        		lv_script_2_0, 
        		"ScriptParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getStatisticalFacetObjectAccess().getFieldsFieldsParamParserRuleCall_2_0_0()); 
	    }
		lv_fields_3_0=ruleFieldsParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatisticalFacetObjectRule());
	        }
       		set(
       			$current, 
       			"fields",
        		lv_fields_3_0, 
        		"FieldsParam");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStatisticalFacetObjectAccess().getRightCurlyBracketKeyword_2_1());
    }
))
;





// Entry rule entryRuleQueryFacet
entryRuleQueryFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryFacetRule()); }
	 iv_ruleQueryFacet=ruleQueryFacet 
	 { $current=$iv_ruleQueryFacet.current; } 
	 EOF 
;

// Rule QueryFacet
ruleQueryFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getQueryFacetAccess().getQueryParserRuleCall()); 
    }
    this_Query_0=ruleQuery
    { 
        $current = $this_Query_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleFilterFacet
entryRuleFilterFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterFacetRule()); }
	 iv_ruleFilterFacet=ruleFilterFacet 
	 { $current=$iv_ruleFilterFacet.current; } 
	 EOF 
;

// Rule FilterFacet
ruleFilterFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getFilterFacetAccess().getFilterParserRuleCall()); 
    }
    this_Filter_0=ruleFilter
    { 
        $current = $this_Filter_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleDateHistogramFacet
entryRuleDateHistogramFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateHistogramFacetRule()); }
	 iv_ruleDateHistogramFacet=ruleDateHistogramFacet 
	 { $current=$iv_ruleDateHistogramFacet.current; } 
	 EOF 
;

// Rule DateHistogramFacet
ruleDateHistogramFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"date_histogram"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateHistogramFacetAccess().getDate_histogramKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateHistogramFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getDateHistogramFacetAccess().getDateHistogramFacetObjectParserRuleCall_2()); 
    }
    this_DateHistogramFacetObject_2=ruleDateHistogramFacetObject
    { 
        $current = $this_DateHistogramFacetObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDateHistogramFacetObject
entryRuleDateHistogramFacetObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateHistogramFacetObjectRule()); }
	 iv_ruleDateHistogramFacetObject=ruleDateHistogramFacetObject 
	 { $current=$iv_ruleDateHistogramFacetObject.current; } 
	 EOF 
;

// Rule DateHistogramFacetObject
ruleDateHistogramFacetObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateHistogramFacetObjectAccess().getLeftCurlyBracketKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDateHistogramFacetObjectAccess().getFieldFieldParamParserRuleCall_1_0_0()); 
	    }
		lv_field_1_0=ruleFieldParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateHistogramFacetObjectRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_1_0, 
        		"FieldParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDateHistogramFacetObjectAccess().getKeyValueKeyValueFieldParserRuleCall_1_1_0()); 
	    }
		lv_keyValue_2_0=ruleKeyValueField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateHistogramFacetObjectRule());
	        }
       		set(
       			$current, 
       			"keyValue",
        		lv_keyValue_2_0, 
        		"KeyValueField");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDateHistogramFacetObjectAccess().getKeyValueScriptKeyValueScriptParserRuleCall_1_2_0()); 
	    }
		lv_keyValueScript_3_0=ruleKeyValueScript		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDateHistogramFacetObjectRule());
	        }
       		set(
       			$current, 
       			"keyValueScript",
        		lv_keyValueScript_3_0, 
        		"KeyValueScript");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDateHistogramFacetObjectAccess().getCommaKeyword_2());
    }
	otherlv_5='"interval"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDateHistogramFacetObjectAccess().getIntervalKeyword_3());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDateHistogramFacetObjectAccess().getColonKeyword_4());
    }
this_STRING_7=RULE_STRING
    { 
    newLeafNode(this_STRING_7, grammarAccess.getDateHistogramFacetObjectAccess().getSTRINGTerminalRuleCall_5()); 
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDateHistogramFacetObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleHistogramFacet
entryRuleHistogramFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHistogramFacetRule()); }
	 iv_ruleHistogramFacet=ruleHistogramFacet 
	 { $current=$iv_ruleHistogramFacet.current; } 
	 EOF 
;

// Rule HistogramFacet
ruleHistogramFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"histogram"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHistogramFacetAccess().getHistogramKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHistogramFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getHistogramFacetAccess().getHistogramFacetObjectParserRuleCall_2()); 
    }
    this_HistogramFacetObject_2=ruleHistogramFacetObject
    { 
        $current = $this_HistogramFacetObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHistogramFacetObject
entryRuleHistogramFacetObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHistogramFacetObjectRule()); }
	 iv_ruleHistogramFacetObject=ruleHistogramFacetObject 
	 { $current=$iv_ruleHistogramFacetObject.current; } 
	 EOF 
;

// Rule HistogramFacetObject
ruleHistogramFacetObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHistogramFacetObjectAccess().getLeftCurlyBracketKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getHistogramFacetObjectAccess().getFieldFieldParamParserRuleCall_1_0_0()); 
	    }
		lv_field_1_0=ruleFieldParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHistogramFacetObjectRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_1_0, 
        		"FieldParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHistogramFacetObjectAccess().getKeyValueKeyValueFieldParserRuleCall_1_1_0()); 
	    }
		lv_keyValue_2_0=ruleKeyValueField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHistogramFacetObjectRule());
	        }
       		set(
       			$current, 
       			"keyValue",
        		lv_keyValue_2_0, 
        		"KeyValueField");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHistogramFacetObjectAccess().getKeyValueScriptKeyValueScriptParserRuleCall_1_2_0()); 
	    }
		lv_keyValueScript_3_0=ruleKeyValueScript		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHistogramFacetObjectRule());
	        }
       		set(
       			$current, 
       			"keyValueScript",
        		lv_keyValueScript_3_0, 
        		"KeyValueScript");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHistogramFacetObjectAccess().getCommaKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getHistogramFacetObjectAccess().getHistogramFacetParameterParserRuleCall_3()); 
    }
ruleHistogramFacetParameter
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHistogramFacetObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleHistogramFacetParameter
entryRuleHistogramFacetParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getHistogramFacetParameterRule()); } 
	 iv_ruleHistogramFacetParameter=ruleHistogramFacetParameter 
	 { $current=$iv_ruleHistogramFacetParameter.current.getText(); }  
	 EOF 
;

// Rule HistogramFacetParameter
ruleHistogramFacetParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHistogramFacetParameterAccess().getIntervalParamParserRuleCall_0()); 
    }
    this_IntervalParam_0=ruleIntervalParam    {
		$current.merge(this_IntervalParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHistogramFacetParameterAccess().getTimeIntervalParamParserRuleCall_1()); 
    }
    this_TimeIntervalParam_1=ruleTimeIntervalParam    {
		$current.merge(this_TimeIntervalParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleRangeFacet
entryRuleRangeFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeFacetRule()); }
	 iv_ruleRangeFacet=ruleRangeFacet 
	 { $current=$iv_ruleRangeFacet.current; } 
	 EOF 
;

// Rule RangeFacet
ruleRangeFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"range"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeFacetAccess().getRangeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRangeFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getRangeFacetAccess().getRangeFacetObjectParserRuleCall_2()); 
    }
    this_RangeFacetObject_2=ruleRangeFacetObject
    { 
        $current = $this_RangeFacetObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRangeFacetObject
entryRuleRangeFacetObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeFacetObjectRule()); }
	 iv_ruleRangeFacetObject=ruleRangeFacetObject 
	 { $current=$iv_ruleRangeFacetObject.current; } 
	 EOF 
;

// Rule RangeFacetObject
ruleRangeFacetObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeFacetObjectAccess().getLeftCurlyBracketKeyword_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRangeFacetObjectAccess().getFieldFieldParamParserRuleCall_1_0_0()); 
	    }
		lv_field_1_0=ruleFieldParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeFacetObjectRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_1_0, 
        		"FieldParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeFacetObjectAccess().getKeyValueKeyValueFieldParserRuleCall_1_1_0()); 
	    }
		lv_keyValue_2_0=ruleKeyValueField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeFacetObjectRule());
	        }
       		set(
       			$current, 
       			"keyValue",
        		lv_keyValue_2_0, 
        		"KeyValueField");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeFacetObjectAccess().getKeyValueScriptKeyValueScriptParserRuleCall_1_2_0()); 
	    }
		lv_keyValueScript_3_0=ruleKeyValueScript		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeFacetObjectRule());
	        }
       		set(
       			$current, 
       			"keyValueScript",
        		lv_keyValueScript_3_0, 
        		"KeyValueScript");
	        afterParserOrEnumRuleCall();
	    }

)
))
    { 
        newCompositeNode(grammarAccess.getRangeFacetObjectAccess().getRangesParamParserRuleCall_2()); 
    }
ruleRangesParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRangeFacetObjectAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleRangesParam
entryRuleRangesParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangesParamRule()); } 
	 iv_ruleRangesParam=ruleRangesParam 
	 { $current=$iv_ruleRangesParam.current.getText(); }  
	 EOF 
;

// Rule RangesParam
ruleRangesParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"ranges"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangesParamAccess().getRangesKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangesParamAccess().getColonKeyword_1()); 
    }

	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangesParamAccess().getLeftSquareBracketKeyword_2()); 
    }

    { 
        newCompositeNode(grammarAccess.getRangesParamAccess().getRangeObjectParserRuleCall_3()); 
    }
    this_RangeObject_3=ruleRangeObject    {
		$current.merge(this_RangeObject_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangesParamAccess().getCommaKeyword_4_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getRangesParamAccess().getRangeObjectParserRuleCall_4_1()); 
    }
    this_RangeObject_5=ruleRangeObject    {
		$current.merge(this_RangeObject_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangesParamAccess().getRightSquareBracketKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleKeyValueField
entryRuleKeyValueField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeyValueFieldRule()); }
	 iv_ruleKeyValueField=ruleKeyValueField 
	 { $current=$iv_ruleKeyValueField.current; } 
	 EOF 
;

// Rule KeyValueField
ruleKeyValueField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"key_field"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKeyValueFieldAccess().getKey_fieldKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKeyValueFieldAccess().getColonKeyword_1());
    }
(
(
		lv_keyField_2_0=RULE_STRING
		{
			newLeafNode(lv_keyField_2_0, grammarAccess.getKeyValueFieldAccess().getKeyFieldSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyValueFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"keyField",
        		lv_keyField_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKeyValueFieldAccess().getCommaKeyword_3());
    }
	otherlv_4='"value_field"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKeyValueFieldAccess().getValue_fieldKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKeyValueFieldAccess().getColonKeyword_5());
    }
(
(
		lv_valueField_6_0=RULE_STRING
		{
			newLeafNode(lv_valueField_6_0, grammarAccess.getKeyValueFieldAccess().getValueFieldSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyValueFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueField",
        		lv_valueField_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleKeyValueScript
entryRuleKeyValueScript returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeyValueScriptRule()); }
	 iv_ruleKeyValueScript=ruleKeyValueScript 
	 { $current=$iv_ruleKeyValueScript.current; } 
	 EOF 
;

// Rule KeyValueScript
ruleKeyValueScript returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"key_script"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKeyValueScriptAccess().getKey_scriptKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKeyValueScriptAccess().getColonKeyword_1());
    }
(
(
		lv_keyScript_2_0=RULE_STRING
		{
			newLeafNode(lv_keyScript_2_0, grammarAccess.getKeyValueScriptAccess().getKeyScriptSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyValueScriptRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"keyScript",
        		lv_keyScript_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKeyValueScriptAccess().getCommaKeyword_3());
    }
	otherlv_4='"value_script"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKeyValueScriptAccess().getValue_scriptKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKeyValueScriptAccess().getColonKeyword_5());
    }
(
(
		lv_valueScript_6_0=RULE_STRING
		{
			newLeafNode(lv_valueScript_6_0, grammarAccess.getKeyValueScriptAccess().getValueScriptSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyValueScriptRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueScript",
        		lv_valueScript_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleRangeObject
entryRuleRangeObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeObjectRule()); } 
	 iv_ruleRangeObject=ruleRangeObject 
	 { $current=$iv_ruleRangeObject.current.getText(); }  
	 EOF 
;

// Rule RangeObject
ruleRangeObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeObjectAccess().getLeftCurlyBracketKeyword_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getRangeObjectAccess().getFromParamParserRuleCall_0_1()); 
    }
    this_FromParam_1=ruleFromParam    {
		$current.merge(this_FromParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getRangeObjectAccess().getFromParamParserRuleCall_1_0()); 
    }
    this_FromParam_2=ruleFromParam    {
		$current.merge(this_FromParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeObjectAccess().getCommaKeyword_1_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getRangeObjectAccess().getToParamParserRuleCall_1_2()); 
    }
    this_ToParam_4=ruleToParam    {
		$current.merge(this_ToParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getRangeObjectAccess().getToParamParserRuleCall_2_0()); 
    }
    this_ToParam_5=ruleToParam    {
		$current.merge(this_ToParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeObjectAccess().getRightCurlyBracketKeyword_2_1()); 
    }
))
    ;





// Entry rule entryRuleTermsFacet
entryRuleTermsFacet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsFacetRule()); }
	 iv_ruleTermsFacet=ruleTermsFacet 
	 { $current=$iv_ruleTermsFacet.current; } 
	 EOF 
;

// Rule TermsFacet
ruleTermsFacet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"terms"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsFacetAccess().getTermsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermsFacetAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTermsFacetAccess().getTermsFacetObjectParserRuleCall_2()); 
    }
    this_TermsFacetObject_2=ruleTermsFacetObject
    { 
        $current = $this_TermsFacetObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTermsFacetObject
entryRuleTermsFacetObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsFacetObjectRule()); }
	 iv_ruleTermsFacetObject=ruleTermsFacetObject 
	 { $current=$iv_ruleTermsFacetObject.current; } 
	 EOF 
;

// Rule TermsFacetObject
ruleTermsFacetObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsFacetObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetObjectAccess().getParamsTermsFacetParameterParserRuleCall_1_0()); 
	    }
		lv_params_1_0=ruleTermsFacetParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_1_0, 
        		"TermsFacetParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermsFacetObjectAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetObjectAccess().getParamsTermsFacetParameterParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleTermsFacetParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"TermsFacetParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTermsFacetObjectAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleTermsFacetParameter
entryRuleTermsFacetParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsFacetParameterRule()); }
	 iv_ruleTermsFacetParameter=ruleTermsFacetParameter 
	 { $current=$iv_ruleTermsFacetParameter.current; } 
	 EOF 
;

// Rule TermsFacetParameter
ruleTermsFacetParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getFieldFieldParamParserRuleCall_0_0()); 
	    }
		lv_field_0_0=ruleFieldParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_0_0, 
        		"FieldParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getFieldsFieldsParamParserRuleCall_1_0()); 
	    }
		lv_fields_1_0=ruleFieldsParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"fields",
        		lv_fields_1_0, 
        		"FieldsParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getSizeSizeParamParserRuleCall_2_0()); 
	    }
		lv_size_2_0=ruleSizeParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_2_0, 
        		"SizeParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getOrderOrderParamParserRuleCall_3_0()); 
	    }
		lv_order_3_0=ruleOrderParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"order",
        		lv_order_3_0, 
        		"OrderParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getAllTermsAllTermsParamParserRuleCall_4_0()); 
	    }
		lv_allTerms_4_0=ruleAllTermsParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"allTerms",
        		lv_allTerms_4_0, 
        		"AllTermsParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getExcludeExcludeParamParserRuleCall_5_0()); 
	    }
		lv_exclude_5_0=ruleExcludeParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"exclude",
        		lv_exclude_5_0, 
        		"ExcludeParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getRegexRegexParamParserRuleCall_6_0()); 
	    }
		lv_regex_6_0=ruleRegexParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"regex",
        		lv_regex_6_0, 
        		"RegexParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getRegexFlagsRegexFlagsParamParserRuleCall_7_0()); 
	    }
		lv_regexFlags_7_0=ruleRegexFlagsParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"regexFlags",
        		lv_regexFlags_7_0, 
        		"RegexFlagsParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getScriptScriptParamParserRuleCall_8_0()); 
	    }
		lv_script_8_0=ruleScriptParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"script",
        		lv_script_8_0, 
        		"ScriptParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsFacetParameterAccess().getScriptFieldScriptFieldParamParserRuleCall_9_0()); 
	    }
		lv_scriptField_9_0=ruleScriptFieldParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsFacetParameterRule());
	        }
       		set(
       			$current, 
       			"scriptField",
        		lv_scriptField_9_0, 
        		"ScriptFieldParam");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFacetParameter
entryRuleFacetParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetParameterRule()); }
	 iv_ruleFacetParameter=ruleFacetParameter 
	 { $current=$iv_ruleFacetParameter.current; } 
	 EOF 
;

// Rule FacetParameter
ruleFacetParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFacetParameterAccess().getGlobalGlobalParamParserRuleCall_0_0()); 
	    }
		lv_global_0_0=ruleGlobalParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetParameterRule());
	        }
       		set(
       			$current, 
       			"global",
        		lv_global_0_0, 
        		"GlobalParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetParameterAccess().getFaceFilterFacetFilterParamParserRuleCall_1_0()); 
	    }
		lv_faceFilter_1_0=ruleFacetFilterParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetParameterRule());
	        }
       		set(
       			$current, 
       			"faceFilter",
        		lv_faceFilter_1_0, 
        		"FacetFilterParam");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFacetParameterAccess().getNestedNestedParamParserRuleCall_2_0()); 
	    }
		lv_nested_2_0=ruleNestedParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFacetParameterRule());
	        }
       		set(
       			$current, 
       			"nested",
        		lv_nested_2_0, 
        		"NestedParam");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFacetFilterParam
entryRuleFacetFilterParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFacetFilterParamRule()); }
	 iv_ruleFacetFilterParam=ruleFacetFilterParam 
	 { $current=$iv_ruleFacetFilterParam.current; } 
	 EOF 
;

// Rule FacetFilterParam
ruleFacetFilterParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"facet_filter"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFacetFilterParamAccess().getFacet_filterKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFacetFilterParamAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getFacetFilterParamAccess().getFilterObjectParserRuleCall_2()); 
    }
    this_FilterObject_2=ruleFilterObject
    { 
        $current = $this_FilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIntervalParam
entryRuleIntervalParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntervalParamRule()); } 
	 iv_ruleIntervalParam=ruleIntervalParam 
	 { $current=$iv_ruleIntervalParam.current.getText(); }  
	 EOF 
;

// Rule IntervalParam
ruleIntervalParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"interval"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntervalParamAccess().getIntervalKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntervalParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getIntervalParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleNestedParam
entryRuleNestedParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedParamRule()); } 
	 iv_ruleNestedParam=ruleNestedParam 
	 { $current=$iv_ruleNestedParam.current.getText(); }  
	 EOF 
;

// Rule NestedParam
ruleNestedParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"nested"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNestedParamAccess().getNestedKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNestedParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getNestedParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTimeIntervalParam
entryRuleTimeIntervalParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeIntervalParamRule()); } 
	 iv_ruleTimeIntervalParam=ruleTimeIntervalParam 
	 { $current=$iv_ruleTimeIntervalParam.current.getText(); }  
	 EOF 
;

// Rule TimeIntervalParam
ruleTimeIntervalParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"time_interval"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeIntervalParamAccess().getTime_intervalKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeIntervalParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getTimeIntervalParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFromParam
entryRuleFromParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFromParamRule()); } 
	 iv_ruleFromParam=ruleFromParam 
	 { $current=$iv_ruleFromParam.current.getText(); }  
	 EOF 
;

// Rule FromParam
ruleFromParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"from"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFromParamAccess().getFromKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFromParamAccess().getColonKeyword_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getFromParamAccess().getNUMBERParserRuleCall_2_0()); 
    }
    this_NUMBER_2=ruleNUMBER    {
		$current.merge(this_NUMBER_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getFromParamAccess().getSTRINGTerminalRuleCall_2_1()); 
    }
))
    ;





// Entry rule entryRuleToParam
entryRuleToParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getToParamRule()); } 
	 iv_ruleToParam=ruleToParam 
	 { $current=$iv_ruleToParam.current.getText(); }  
	 EOF 
;

// Rule ToParam
ruleToParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"to"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getToParamAccess().getToKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getToParamAccess().getColonKeyword_1()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getToParamAccess().getNUMBERParserRuleCall_2_0()); 
    }
    this_NUMBER_2=ruleNUMBER    {
		$current.merge(this_NUMBER_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getToParamAccess().getSTRINGTerminalRuleCall_2_1()); 
    }
))
    ;





// Entry rule entryRuleSizeParam
entryRuleSizeParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeParamRule()); } 
	 iv_ruleSizeParam=ruleSizeParam 
	 { $current=$iv_ruleSizeParam.current.getText(); }  
	 EOF 
;

// Rule SizeParam
ruleSizeParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"size"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSizeParamAccess().getSizeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSizeParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getSizeParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleOrderParam
entryRuleOrderParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderParamRule()); } 
	 iv_ruleOrderParam=ruleOrderParam 
	 { $current=$iv_ruleOrderParam.current.getText(); }  
	 EOF 
;

// Rule OrderParam
ruleOrderParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"order"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderParamAccess().getOrderKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderParamAccess().getColonKeyword_1()); 
    }
(
	kw='"count"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderParamAccess().getCountKeyword_2_0()); 
    }

    |
	kw='"term"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderParamAccess().getTermKeyword_2_1()); 
    }

    |
	kw='"reverse_count"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderParamAccess().getReverse_countKeyword_2_2()); 
    }

    |
	kw='"reverse_term"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOrderParamAccess().getReverse_termKeyword_2_3()); 
    }
))
    ;





// Entry rule entryRuleAllTermsParam
entryRuleAllTermsParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllTermsParamRule()); }
	 iv_ruleAllTermsParam=ruleAllTermsParam 
	 { $current=$iv_ruleAllTermsParam.current; } 
	 EOF 
;

// Rule AllTermsParam
ruleAllTermsParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"all_terms"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAllTermsParamAccess().getAll_termsKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAllTermsParamAccess().getColonKeyword_1());
    }
(
(
		lv_allTerms_2_0=RULE_BOOLEAN
		{
			newLeafNode(lv_allTerms_2_0, grammarAccess.getAllTermsParamAccess().getAllTermsBOOLEANTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAllTermsParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"allTerms",
        		lv_allTerms_2_0, 
        		"BOOLEAN");
	    }

)
))
;





// Entry rule entryRuleExcludeParam
entryRuleExcludeParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExcludeParamRule()); }
	 iv_ruleExcludeParam=ruleExcludeParam 
	 { $current=$iv_ruleExcludeParam.current; } 
	 EOF 
;

// Rule ExcludeParam
ruleExcludeParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"exclude"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExcludeParamAccess().getExcludeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExcludeParamAccess().getColonKeyword_1());
    }
	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExcludeParamAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_excludeFieldNames_3_0=RULE_STRING
		{
			newLeafNode(lv_excludeFieldNames_3_0, grammarAccess.getExcludeParamAccess().getExcludeFieldNamesSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExcludeParamRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"excludeFieldNames",
        		lv_excludeFieldNames_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExcludeParamAccess().getCommaKeyword_4_0());
    }
(
(
		lv_excludeFieldNames_5_0=RULE_STRING
		{
			newLeafNode(lv_excludeFieldNames_5_0, grammarAccess.getExcludeParamAccess().getExcludeFieldNamesSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExcludeParamRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"excludeFieldNames",
        		lv_excludeFieldNames_5_0, 
        		"STRING");
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExcludeParamAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleScriptParam
entryRuleScriptParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptParamRule()); }
	 iv_ruleScriptParam=ruleScriptParam 
	 { $current=$iv_ruleScriptParam.current; } 
	 EOF 
;

// Rule ScriptParam
ruleScriptParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"script"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptParamAccess().getScriptKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScriptParamAccess().getColonKeyword_1());
    }
(
(
		lv_script_2_0=RULE_STRING
		{
			newLeafNode(lv_script_2_0, grammarAccess.getScriptParamAccess().getScriptSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"script",
        		lv_script_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleScriptFieldParam
entryRuleScriptFieldParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptFieldParamRule()); }
	 iv_ruleScriptFieldParam=ruleScriptFieldParam 
	 { $current=$iv_ruleScriptFieldParam.current; } 
	 EOF 
;

// Rule ScriptFieldParam
ruleScriptFieldParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"script_field"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptFieldParamAccess().getScript_fieldKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScriptFieldParamAccess().getColonKeyword_1());
    }
(
(
		lv_fieldName_2_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_2_0, grammarAccess.getScriptFieldParamAccess().getFieldNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptFieldParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleRegexParam
entryRuleRegexParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexParamRule()); } 
	 iv_ruleRegexParam=ruleRegexParam 
	 { $current=$iv_ruleRegexParam.current.getText(); }  
	 EOF 
;

// Rule RegexParam
ruleRegexParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"regex"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRegexParamAccess().getRegexKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRegexParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getRegexParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleRegexFlagsParam
entryRuleRegexFlagsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexFlagsParamRule()); } 
	 iv_ruleRegexFlagsParam=ruleRegexFlagsParam 
	 { $current=$iv_ruleRegexFlagsParam.current.getText(); }  
	 EOF 
;

// Rule RegexFlagsParam
ruleRegexFlagsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"regex_flags"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRegexFlagsParamAccess().getRegex_flagsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRegexFlagsParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getRegexFlagsParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleGlobalParam
entryRuleGlobalParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalParamRule()); } 
	 iv_ruleGlobalParam=ruleGlobalParam 
	 { $current=$iv_ruleGlobalParam.current.getText(); }  
	 EOF 
;

// Rule GlobalParam
ruleGlobalParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"global"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGlobalParamAccess().getGlobalKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGlobalParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getGlobalParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleCutoffFrequenceParam
entryRuleCutoffFrequenceParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCutoffFrequenceParamRule()); } 
	 iv_ruleCutoffFrequenceParam=ruleCutoffFrequenceParam 
	 { $current=$iv_ruleCutoffFrequenceParam.current.getText(); }  
	 EOF 
;

// Rule CutoffFrequenceParam
ruleCutoffFrequenceParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"cutoff_frequency"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCutoffFrequenceParamAccess().getCutoff_frequencyKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCutoffFrequenceParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getCutoffFrequenceParamAccess().getFLOATParserRuleCall_2()); 
    }
    this_FLOAT_2=ruleFLOAT    {
		$current.merge(this_FLOAT_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleZeroTermsQueryParam
entryRuleZeroTermsQueryParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getZeroTermsQueryParamRule()); } 
	 iv_ruleZeroTermsQueryParam=ruleZeroTermsQueryParam 
	 { $current=$iv_ruleZeroTermsQueryParam.current.getText(); }  
	 EOF 
;

// Rule ZeroTermsQueryParam
ruleZeroTermsQueryParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"zero_terms_query"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getZeroTermsQueryParamAccess().getZero_terms_queryKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getZeroTermsQueryParamAccess().getColonKeyword_1()); 
    }
    this_NONE_ALL_2=RULE_NONE_ALL    {
		$current.merge(this_NONE_ALL_2);
    }

    { 
    newLeafNode(this_NONE_ALL_2, grammarAccess.getZeroTermsQueryParamAccess().getNONE_ALLTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMinimumShouldMatchParam
entryRuleMinimumShouldMatchParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinimumShouldMatchParamRule()); } 
	 iv_ruleMinimumShouldMatchParam=ruleMinimumShouldMatchParam 
	 { $current=$iv_ruleMinimumShouldMatchParam.current.getText(); }  
	 EOF 
;

// Rule MinimumShouldMatchParam
ruleMinimumShouldMatchParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"minimum_should_match"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinimumShouldMatchParamAccess().getMinimum_should_matchKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinimumShouldMatchParamAccess().getColonKeyword_1()); 
    }
(    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMinimumShouldMatchParamAccess().getINTTerminalRuleCall_2_0()); 
    }

    |    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getMinimumShouldMatchParamAccess().getSTRINGTerminalRuleCall_2_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getMinimumShouldMatchParamAccess().getComplexMinimumShouldMatchParserRuleCall_2_2()); 
    }
    this_ComplexMinimumShouldMatch_4=ruleComplexMinimumShouldMatch    {
		$current.merge(this_ComplexMinimumShouldMatch_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleComplexMinimumShouldMatch
entryRuleComplexMinimumShouldMatch returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexMinimumShouldMatchRule()); } 
	 iv_ruleComplexMinimumShouldMatch=ruleComplexMinimumShouldMatch 
	 { $current=$iv_ruleComplexMinimumShouldMatch.current.getText(); }  
	 EOF 
;

// Rule ComplexMinimumShouldMatch
ruleComplexMinimumShouldMatch returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getLeftCurlyBracketKeyword_0()); 
    }

	kw='"low_freq"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getLow_freqKeyword_1()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getColonKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getComplexMinimumShouldMatchAccess().getINTTerminalRuleCall_3()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getCommaKeyword_4_0()); 
    }

	kw='"high_freq"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getHigh_freqKeyword_4_1()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getColonKeyword_4_2()); 
    }
    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getComplexMinimumShouldMatchAccess().getINTTerminalRuleCall_4_3()); 
    }
)?
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getComplexMinimumShouldMatchAccess().getRightCurlyBracketKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleExistenceParam
entryRuleExistenceParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistenceParamRule()); } 
	 iv_ruleExistenceParam=ruleExistenceParam 
	 { $current=$iv_ruleExistenceParam.current.getText(); }  
	 EOF 
;

// Rule ExistenceParam
ruleExistenceParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"existence"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExistenceParamAccess().getExistenceKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExistenceParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getExistenceParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleNullValueParam
entryRuleNullValueParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNullValueParamRule()); } 
	 iv_ruleNullValueParam=ruleNullValueParam 
	 { $current=$iv_ruleNullValueParam.current.getText(); }  
	 EOF 
;

// Rule NullValueParam
ruleNullValueParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"null_value"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNullValueParamAccess().getNull_valueKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNullValueParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getNullValueParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMinTermFreqParam
entryRuleMinTermFreqParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinTermFreqParamRule()); } 
	 iv_ruleMinTermFreqParam=ruleMinTermFreqParam 
	 { $current=$iv_ruleMinTermFreqParam.current.getText(); }  
	 EOF 
;

// Rule MinTermFreqParam
ruleMinTermFreqParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"min_term_freq"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinTermFreqParamAccess().getMin_term_freqKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinTermFreqParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMinTermFreqParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLowFreqOperatorParam
entryRuleLowFreqOperatorParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLowFreqOperatorParamRule()); } 
	 iv_ruleLowFreqOperatorParam=ruleLowFreqOperatorParam 
	 { $current=$iv_ruleLowFreqOperatorParam.current.getText(); }  
	 EOF 
;

// Rule LowFreqOperatorParam
ruleLowFreqOperatorParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"low_freq_operator"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLowFreqOperatorParamAccess().getLow_freq_operatorKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLowFreqOperatorParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getLowFreqOperatorParamAccess().getAND_ORParserRuleCall_2()); 
    }
    this_AND_OR_2=ruleAND_OR    {
		$current.merge(this_AND_OR_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleOperatorParam
entryRuleOperatorParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorParamRule()); } 
	 iv_ruleOperatorParam=ruleOperatorParam 
	 { $current=$iv_ruleOperatorParam.current.getText(); }  
	 EOF 
;

// Rule OperatorParam
ruleOperatorParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"operator"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorParamAccess().getOperatorKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOperatorParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getOperatorParamAccess().getAND_ORParserRuleCall_2()); 
    }
    this_AND_OR_2=ruleAND_OR    {
		$current.merge(this_AND_OR_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleBoostParam
entryRuleBoostParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoostParamRule()); } 
	 iv_ruleBoostParam=ruleBoostParam 
	 { $current=$iv_ruleBoostParam.current.getText(); }  
	 EOF 
;

// Rule BoostParam
ruleBoostParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"boost"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoostParamAccess().getBoostKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoostParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getBoostParamAccess().getFLOATParserRuleCall_2()); 
    }
    this_FLOAT_2=ruleFLOAT    {
		$current.merge(this_FLOAT_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleAnalyzerParam
entryRuleAnalyzerParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnalyzerParamRule()); } 
	 iv_ruleAnalyzerParam=ruleAnalyzerParam 
	 { $current=$iv_ruleAnalyzerParam.current.getText(); }  
	 EOF 
;

// Rule AnalyzerParam
ruleAnalyzerParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"analyzer"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnalyzerParamAccess().getAnalyzerKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnalyzerParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getAnalyzerParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFlagsParam
entryRuleFlagsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFlagsParamRule()); } 
	 iv_ruleFlagsParam=ruleFlagsParam 
	 { $current=$iv_ruleFlagsParam.current.getText(); }  
	 EOF 
;

// Rule FlagsParam
ruleFlagsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"flags"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFlagsParamAccess().getFlagsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFlagsParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getFlagsParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleDisableCoordParam
entryRuleDisableCoordParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisableCoordParamRule()); } 
	 iv_ruleDisableCoordParam=ruleDisableCoordParam 
	 { $current=$iv_ruleDisableCoordParam.current.getText(); }  
	 EOF 
;

// Rule DisableCoordParam
ruleDisableCoordParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"disable_coord"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDisableCoordParamAccess().getDisable_coordKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDisableCoordParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getDisableCoordParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTieBreakerParam
entryRuleTieBreakerParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTieBreakerParamRule()); } 
	 iv_ruleTieBreakerParam=ruleTieBreakerParam 
	 { $current=$iv_ruleTieBreakerParam.current.getText(); }  
	 EOF 
;

// Rule TieBreakerParam
ruleTieBreakerParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"tie_breaker"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTieBreakerParamAccess().getTie_breakerKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTieBreakerParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getTieBreakerParamAccess().getFLOATParserRuleCall_2()); 
    }
    this_FLOAT_2=ruleFLOAT    {
		$current.merge(this_FLOAT_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRulePercentTermsToMatchParam
entryRulePercentTermsToMatchParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPercentTermsToMatchParamRule()); } 
	 iv_rulePercentTermsToMatchParam=rulePercentTermsToMatchParam 
	 { $current=$iv_rulePercentTermsToMatchParam.current.getText(); }  
	 EOF 
;

// Rule PercentTermsToMatchParam
rulePercentTermsToMatchParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"percent_terms_to_match"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPercentTermsToMatchParamAccess().getPercent_terms_to_matchKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPercentTermsToMatchParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getPercentTermsToMatchParamAccess().getFLOATParserRuleCall_2()); 
    }
    this_FLOAT_2=ruleFLOAT    {
		$current.merge(this_FLOAT_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleStopWordsParam
entryRuleStopWordsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStopWordsParamRule()); } 
	 iv_ruleStopWordsParam=ruleStopWordsParam 
	 { $current=$iv_ruleStopWordsParam.current.getText(); }  
	 EOF 
;

// Rule StopWordsParam
ruleStopWordsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"stop_words"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStopWordsParamAccess().getStop_wordsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStopWordsParamAccess().getColonKeyword_1()); 
    }

	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStopWordsParamAccess().getLeftSquareBracketKeyword_2()); 
    }
    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getStopWordsParamAccess().getSTRINGTerminalRuleCall_3()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStopWordsParamAccess().getCommaKeyword_4_0()); 
    }
    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getStopWordsParamAccess().getSTRINGTerminalRuleCall_4_1()); 
    }
)*
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStopWordsParamAccess().getRightSquareBracketKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleMinDocFreqParam
entryRuleMinDocFreqParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinDocFreqParamRule()); } 
	 iv_ruleMinDocFreqParam=ruleMinDocFreqParam 
	 { $current=$iv_ruleMinDocFreqParam.current.getText(); }  
	 EOF 
;

// Rule MinDocFreqParam
ruleMinDocFreqParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"min_doc_freq"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinDocFreqParamAccess().getMin_doc_freqKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinDocFreqParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMinDocFreqParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMaxDocFreqParam
entryRuleMaxDocFreqParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxDocFreqParamRule()); } 
	 iv_ruleMaxDocFreqParam=ruleMaxDocFreqParam 
	 { $current=$iv_ruleMaxDocFreqParam.current.getText(); }  
	 EOF 
;

// Rule MaxDocFreqParam
ruleMaxDocFreqParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"max_doc_freq"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxDocFreqParamAccess().getMax_doc_freqKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxDocFreqParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMaxDocFreqParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMinWordLengthParam
entryRuleMinWordLengthParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMinWordLengthParamRule()); } 
	 iv_ruleMinWordLengthParam=ruleMinWordLengthParam 
	 { $current=$iv_ruleMinWordLengthParam.current.getText(); }  
	 EOF 
;

// Rule MinWordLengthParam
ruleMinWordLengthParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"min_word_length"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinWordLengthParamAccess().getMin_word_lengthKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMinWordLengthParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMinWordLengthParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMaxWordLengthParam
entryRuleMaxWordLengthParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxWordLengthParamRule()); } 
	 iv_ruleMaxWordLengthParam=ruleMaxWordLengthParam 
	 { $current=$iv_ruleMaxWordLengthParam.current.getText(); }  
	 EOF 
;

// Rule MaxWordLengthParam
ruleMaxWordLengthParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"max_word_length"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxWordLengthParamAccess().getMax_word_lengthKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxWordLengthParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMaxWordLengthParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleBoostTermsParam
entryRuleBoostTermsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoostTermsParamRule()); } 
	 iv_ruleBoostTermsParam=ruleBoostTermsParam 
	 { $current=$iv_ruleBoostTermsParam.current.getText(); }  
	 EOF 
;

// Rule BoostTermsParam
ruleBoostTermsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"boost_terms"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoostTermsParamAccess().getBoost_termsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBoostTermsParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getBoostTermsParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleGteParam
entryRuleGteParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGteParamRule()); } 
	 iv_ruleGteParam=ruleGteParam 
	 { $current=$iv_ruleGteParam.current.getText(); }  
	 EOF 
;

// Rule GteParam
ruleGteParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"gte"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGteParamAccess().getGteKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGteParamAccess().getColonKeyword_1()); 
    }
(    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getGteParamAccess().getSTRINGTerminalRuleCall_2_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getGteParamAccess().getNUMBERParserRuleCall_2_1()); 
    }
    this_NUMBER_3=ruleNUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleGtParam
entryRuleGtParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGtParamRule()); } 
	 iv_ruleGtParam=ruleGtParam 
	 { $current=$iv_ruleGtParam.current.getText(); }  
	 EOF 
;

// Rule GtParam
ruleGtParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"gt"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGtParamAccess().getGtKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getGtParamAccess().getColonKeyword_1()); 
    }
(    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getGtParamAccess().getSTRINGTerminalRuleCall_2_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getGtParamAccess().getNUMBERParserRuleCall_2_1()); 
    }
    this_NUMBER_3=ruleNUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleLtParam
entryRuleLtParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLtParamRule()); } 
	 iv_ruleLtParam=ruleLtParam 
	 { $current=$iv_ruleLtParam.current.getText(); }  
	 EOF 
;

// Rule LtParam
ruleLtParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"lt"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLtParamAccess().getLtKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLtParamAccess().getColonKeyword_1()); 
    }
(    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getLtParamAccess().getSTRINGTerminalRuleCall_2_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getLtParamAccess().getNUMBERParserRuleCall_2_1()); 
    }
    this_NUMBER_3=ruleNUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleLteParam
entryRuleLteParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLteParamRule()); } 
	 iv_ruleLteParam=ruleLteParam 
	 { $current=$iv_ruleLteParam.current.getText(); }  
	 EOF 
;

// Rule LteParam
ruleLteParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"lte"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLteParamAccess().getLteKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLteParamAccess().getColonKeyword_1()); 
    }
(    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getLteParamAccess().getSTRINGTerminalRuleCall_2_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getLteParamAccess().getNUMBERParserRuleCall_2_1()); 
    }
    this_NUMBER_3=ruleNUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleTypeParam
entryRuleTypeParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeParamRule()); } 
	 iv_ruleTypeParam=ruleTypeParam 
	 { $current=$iv_ruleTypeParam.current.getText(); }  
	 EOF 
;

// Rule TypeParam
ruleTypeParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"type"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTypeParamAccess().getTypeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTypeParamAccess().getColonKeyword_1()); 
    }
(
	kw='"indexed"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTypeParamAccess().getIndexedKeyword_2_0()); 
    }

    |
	kw='"memory"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTypeParamAccess().getMemoryKeyword_2_1()); 
    }
))
    ;





// Entry rule entryRuleSlopParam
entryRuleSlopParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSlopParamRule()); } 
	 iv_ruleSlopParam=ruleSlopParam 
	 { $current=$iv_ruleSlopParam.current.getText(); }  
	 EOF 
;

// Rule SlopParam
ruleSlopParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"slop"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSlopParamAccess().getSlopKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSlopParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getSlopParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFieldParam
entryRuleFieldParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldParamRule()); } 
	 iv_ruleFieldParam=ruleFieldParam 
	 { $current=$iv_ruleFieldParam.current.getText(); }  
	 EOF 
;

// Rule FieldParam
ruleFieldParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"field"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldParamAccess().getFieldKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getFieldParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFieldsParam
entryRuleFieldsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldsParamRule()); } 
	 iv_ruleFieldsParam=ruleFieldsParam 
	 { $current=$iv_ruleFieldsParam.current.getText(); }  
	 EOF 
;

// Rule FieldsParam
ruleFieldsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"fields"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldsParamAccess().getFieldsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldsParamAccess().getColonKeyword_1()); 
    }

	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldsParamAccess().getLeftSquareBracketKeyword_2()); 
    }
    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getFieldsParamAccess().getSTRINGTerminalRuleCall_3()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldsParamAccess().getCommaKeyword_4_0()); 
    }
    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getFieldsParamAccess().getSTRINGTerminalRuleCall_4_1()); 
    }
)*
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFieldsParamAccess().getRightSquareBracketKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleDefaultFieldParam
entryRuleDefaultFieldParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultFieldParamRule()); } 
	 iv_ruleDefaultFieldParam=ruleDefaultFieldParam 
	 { $current=$iv_ruleDefaultFieldParam.current.getText(); }  
	 EOF 
;

// Rule DefaultFieldParam
ruleDefaultFieldParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"default_field"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultFieldParamAccess().getDefault_fieldKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultFieldParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getDefaultFieldParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleDefaultOperatorParam
entryRuleDefaultOperatorParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultOperatorParamRule()); } 
	 iv_ruleDefaultOperatorParam=ruleDefaultOperatorParam 
	 { $current=$iv_ruleDefaultOperatorParam.current.getText(); }  
	 EOF 
;

// Rule DefaultOperatorParam
ruleDefaultOperatorParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"default_operator"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultOperatorParamAccess().getDefault_operatorKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultOperatorParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getDefaultOperatorParamAccess().getAND_ORParserRuleCall_2()); 
    }
    this_AND_OR_2=ruleAND_OR    {
		$current.merge(this_AND_OR_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleAllowLeadingWildcardParam
entryRuleAllowLeadingWildcardParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllowLeadingWildcardParamRule()); } 
	 iv_ruleAllowLeadingWildcardParam=ruleAllowLeadingWildcardParam 
	 { $current=$iv_ruleAllowLeadingWildcardParam.current.getText(); }  
	 EOF 
;

// Rule AllowLeadingWildcardParam
ruleAllowLeadingWildcardParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"allow_leading_wildcard"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAllowLeadingWildcardParamAccess().getAllow_leading_wildcardKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAllowLeadingWildcardParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getAllowLeadingWildcardParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLowercaseExpandedTermsParam
entryRuleLowercaseExpandedTermsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLowercaseExpandedTermsParamRule()); } 
	 iv_ruleLowercaseExpandedTermsParam=ruleLowercaseExpandedTermsParam 
	 { $current=$iv_ruleLowercaseExpandedTermsParam.current.getText(); }  
	 EOF 
;

// Rule LowercaseExpandedTermsParam
ruleLowercaseExpandedTermsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"lowercase_expanded_terms"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLowercaseExpandedTermsParamAccess().getLowercase_expanded_termsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLowercaseExpandedTermsParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getLowercaseExpandedTermsParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleEnablePositionIncrementsParam
entryRuleEnablePositionIncrementsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnablePositionIncrementsParamRule()); } 
	 iv_ruleEnablePositionIncrementsParam=ruleEnablePositionIncrementsParam 
	 { $current=$iv_ruleEnablePositionIncrementsParam.current.getText(); }  
	 EOF 
;

// Rule EnablePositionIncrementsParam
ruleEnablePositionIncrementsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"enable_position_increments"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnablePositionIncrementsParamAccess().getEnable_position_incrementsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEnablePositionIncrementsParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getEnablePositionIncrementsParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFuzzyMaxExpansionsParam
entryRuleFuzzyMaxExpansionsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyMaxExpansionsParamRule()); } 
	 iv_ruleFuzzyMaxExpansionsParam=ruleFuzzyMaxExpansionsParam 
	 { $current=$iv_ruleFuzzyMaxExpansionsParam.current.getText(); }  
	 EOF 
;

// Rule FuzzyMaxExpansionsParam
ruleFuzzyMaxExpansionsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"fuzzy_max_expansions"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFuzzyMaxExpansionsParamAccess().getFuzzy_max_expansionsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFuzzyMaxExpansionsParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getFuzzyMaxExpansionsParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFuzzyPrefixLengthParam
entryRuleFuzzyPrefixLengthParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyPrefixLengthParamRule()); } 
	 iv_ruleFuzzyPrefixLengthParam=ruleFuzzyPrefixLengthParam 
	 { $current=$iv_ruleFuzzyPrefixLengthParam.current.getText(); }  
	 EOF 
;

// Rule FuzzyPrefixLengthParam
ruleFuzzyPrefixLengthParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"fuzzy_prefix_length"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFuzzyPrefixLengthParamAccess().getFuzzy_prefix_lengthKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFuzzyPrefixLengthParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getFuzzyPrefixLengthParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePhraseSlopParam
entryRulePhraseSlopParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPhraseSlopParamRule()); } 
	 iv_rulePhraseSlopParam=rulePhraseSlopParam 
	 { $current=$iv_rulePhraseSlopParam.current.getText(); }  
	 EOF 
;

// Rule PhraseSlopParam
rulePhraseSlopParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"phrase_slop"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPhraseSlopParamAccess().getPhrase_slopKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPhraseSlopParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getPhraseSlopParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleAnalyzeWildcardParam
entryRuleAnalyzeWildcardParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnalyzeWildcardParamRule()); } 
	 iv_ruleAnalyzeWildcardParam=ruleAnalyzeWildcardParam 
	 { $current=$iv_ruleAnalyzeWildcardParam.current.getText(); }  
	 EOF 
;

// Rule AnalyzeWildcardParam
ruleAnalyzeWildcardParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"analyze_wildcard"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnalyzeWildcardParamAccess().getAnalyze_wildcardKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnalyzeWildcardParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getAnalyzeWildcardParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleAutoGeneratePhraseQueriesParam
entryRuleAutoGeneratePhraseQueriesParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAutoGeneratePhraseQueriesParamRule()); } 
	 iv_ruleAutoGeneratePhraseQueriesParam=ruleAutoGeneratePhraseQueriesParam 
	 { $current=$iv_ruleAutoGeneratePhraseQueriesParam.current.getText(); }  
	 EOF 
;

// Rule AutoGeneratePhraseQueriesParam
ruleAutoGeneratePhraseQueriesParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"auto_generate_phrase_queries"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAutoGeneratePhraseQueriesParamAccess().getAuto_generate_phrase_queriesKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAutoGeneratePhraseQueriesParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getAutoGeneratePhraseQueriesParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLenientParam
entryRuleLenientParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLenientParamRule()); } 
	 iv_ruleLenientParam=ruleLenientParam 
	 { $current=$iv_ruleLenientParam.current.getText(); }  
	 EOF 
;

// Rule LenientParam
ruleLenientParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"lenient"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLenientParamAccess().getLenientKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLenientParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getLenientParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLocaleParam
entryRuleLocaleParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocaleParamRule()); } 
	 iv_ruleLocaleParam=ruleLocaleParam 
	 { $current=$iv_ruleLocaleParam.current.getText(); }  
	 EOF 
;

// Rule LocaleParam
ruleLocaleParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"locale"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLocaleParamAccess().getLocaleKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLocaleParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getLocaleParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleIgnoreTfParam
entryRuleIgnoreTfParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIgnoreTfParamRule()); } 
	 iv_ruleIgnoreTfParam=ruleIgnoreTfParam 
	 { $current=$iv_ruleIgnoreTfParam.current.getText(); }  
	 EOF 
;

// Rule IgnoreTfParam
ruleIgnoreTfParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"ignore_tf"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIgnoreTfParamAccess().getIgnore_tfKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIgnoreTfParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getIgnoreTfParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMaxQueryTermsParam
entryRuleMaxQueryTermsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxQueryTermsParamRule()); } 
	 iv_ruleMaxQueryTermsParam=ruleMaxQueryTermsParam 
	 { $current=$iv_ruleMaxQueryTermsParam.current.getText(); }  
	 EOF 
;

// Rule MaxQueryTermsParam
ruleMaxQueryTermsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"max_query_terms"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxQueryTermsParamAccess().getMax_query_termsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxQueryTermsParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMaxQueryTermsParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFuzzinessParam
entryRuleFuzzinessParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzinessParamRule()); } 
	 iv_ruleFuzzinessParam=ruleFuzzinessParam 
	 { $current=$iv_ruleFuzzinessParam.current.getText(); }  
	 EOF 
;

// Rule FuzzinessParam
ruleFuzzinessParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"fuzziness"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFuzzinessParamAccess().getFuzzinessKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFuzzinessParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getFuzzinessParamAccess().getNUMBERParserRuleCall_2()); 
    }
    this_NUMBER_2=ruleNUMBER    {
		$current.merge(this_NUMBER_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRulePrefixLengthParam
entryRulePrefixLengthParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixLengthParamRule()); } 
	 iv_rulePrefixLengthParam=rulePrefixLengthParam 
	 { $current=$iv_rulePrefixLengthParam.current.getText(); }  
	 EOF 
;

// Rule PrefixLengthParam
rulePrefixLengthParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"prefix_length"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrefixLengthParamAccess().getPrefix_lengthKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPrefixLengthParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getPrefixLengthParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMaxExpansionsParam
entryRuleMaxExpansionsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaxExpansionsParamRule()); } 
	 iv_ruleMaxExpansionsParam=ruleMaxExpansionsParam 
	 { $current=$iv_ruleMaxExpansionsParam.current.getText(); }  
	 EOF 
;

// Rule MaxExpansionsParam
ruleMaxExpansionsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"max_expansions"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxExpansionsParamAccess().getMax_expansionsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMaxExpansionsParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMaxExpansionsParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleScoreModeParam
entryRuleScoreModeParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getScoreModeParamRule()); } 
	 iv_ruleScoreModeParam=ruleScoreModeParam 
	 { $current=$iv_ruleScoreModeParam.current.getText(); }  
	 EOF 
;

// Rule ScoreModeParam
ruleScoreModeParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"score_mode"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScoreModeParamAccess().getScore_modeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScoreModeParamAccess().getColonKeyword_1()); 
    }
    this_SCORE_MODES_2=RULE_SCORE_MODES    {
		$current.merge(this_SCORE_MODES_2);
    }

    { 
    newLeafNode(this_SCORE_MODES_2, grammarAccess.getScoreModeParamAccess().getSCORE_MODESTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleScoreParam
entryRuleScoreParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getScoreParamRule()); } 
	 iv_ruleScoreParam=ruleScoreParam 
	 { $current=$iv_ruleScoreParam.current.getText(); }  
	 EOF 
;

// Rule ScoreParam
ruleScoreParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"score"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScoreParamAccess().getScoreKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScoreParamAccess().getColonKeyword_1()); 
    }
    this_SCORE_MODES_2=RULE_SCORE_MODES    {
		$current.merge(this_SCORE_MODES_2);
    }

    { 
    newLeafNode(this_SCORE_MODES_2, grammarAccess.getScoreParamAccess().getSCORE_MODESTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleIndicesParam
entryRuleIndicesParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndicesParamRule()); } 
	 iv_ruleIndicesParam=ruleIndicesParam 
	 { $current=$iv_ruleIndicesParam.current.getText(); }  
	 EOF 
;

// Rule IndicesParam
ruleIndicesParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"indices"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndicesParamAccess().getIndicesKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndicesParamAccess().getColonKeyword_1()); 
    }

	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndicesParamAccess().getLeftSquareBracketKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getIndicesParamAccess().getINTTerminalRuleCall_3()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndicesParamAccess().getCommaKeyword_4_0()); 
    }
    this_INT_5=RULE_INT    {
		$current.merge(this_INT_5);
    }

    { 
    newLeafNode(this_INT_5, grammarAccess.getIndicesParamAccess().getINTTerminalRuleCall_4_1()); 
    }
)*
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndicesParamAccess().getRightSquareBracketKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleIndexParam
entryRuleIndexParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexParamRule()); } 
	 iv_ruleIndexParam=ruleIndexParam 
	 { $current=$iv_ruleIndexParam.current.getText(); }  
	 EOF 
;

// Rule IndexParam
ruleIndexParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"index"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexParamAccess().getIndexKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexParamAccess().getColonKeyword_1()); 
    }
    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getIndexParamAccess().getSTRINGTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLikeTextParam
entryRuleLikeTextParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLikeTextParamRule()); }
	 iv_ruleLikeTextParam=ruleLikeTextParam 
	 { $current=$iv_ruleLikeTextParam.current; } 
	 EOF 
;

// Rule LikeTextParam
ruleLikeTextParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"like_text"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLikeTextParamAccess().getLike_textKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLikeTextParamAccess().getColonKeyword_1());
    }
(
(
		lv_likeQuery_2_0=RULE_STRING
		{
			newLeafNode(lv_likeQuery_2_0, grammarAccess.getLikeTextParamAccess().getLikeQuerySTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLikeTextParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"likeQuery",
        		lv_likeQuery_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleEndParam
entryRuleEndParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEndParamRule()); } 
	 iv_ruleEndParam=ruleEndParam 
	 { $current=$iv_ruleEndParam.current.getText(); }  
	 EOF 
;

// Rule EndParam
ruleEndParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"end"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEndParamAccess().getEndKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEndParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEndParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleInOrderParam
entryRuleInOrderParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getInOrderParamRule()); } 
	 iv_ruleInOrderParam=ruleInOrderParam 
	 { $current=$iv_ruleInOrderParam.current.getText(); }  
	 EOF 
;

// Rule InOrderParam
ruleInOrderParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"in_order"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInOrderParamAccess().getIn_orderKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInOrderParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getInOrderParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleCollectPayloadsParam
entryRuleCollectPayloadsParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCollectPayloadsParamRule()); } 
	 iv_ruleCollectPayloadsParam=ruleCollectPayloadsParam 
	 { $current=$iv_ruleCollectPayloadsParam.current.getText(); }  
	 EOF 
;

// Rule CollectPayloadsParam
ruleCollectPayloadsParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"collect_payloads"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCollectPayloadsParamAccess().getCollect_payloadsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCollectPayloadsParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getCollectPayloadsParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleFactorParam
entryRuleFactorParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFactorParamRule()); } 
	 iv_ruleFactorParam=ruleFactorParam 
	 { $current=$iv_ruleFactorParam.current.getText(); }  
	 EOF 
;

// Rule FactorParam
ruleFactorParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"factor"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFactorParamAccess().getFactorKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFactorParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getFactorParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleIncrementalFactorParam
entryRuleIncrementalFactorParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncrementalFactorParamRule()); } 
	 iv_ruleIncrementalFactorParam=ruleIncrementalFactorParam 
	 { $current=$iv_ruleIncrementalFactorParam.current.getText(); }  
	 EOF 
;

// Rule IncrementalFactorParam
ruleIncrementalFactorParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"incremental_factor"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncrementalFactorParamAccess().getIncremental_factorKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncrementalFactorParamAccess().getColonKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getIncrementalFactorParamAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleCacheParam
entryRuleCacheParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCacheParamRule()); } 
	 iv_ruleCacheParam=ruleCacheParam 
	 { $current=$iv_ruleCacheParam.current.getText(); }  
	 EOF 
;

// Rule CacheParam
ruleCacheParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"_cache"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCacheParamAccess().get_cacheKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCacheParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getCacheParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleDistanceTypeParam
entryRuleDistanceTypeParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDistanceTypeParamRule()); } 
	 iv_ruleDistanceTypeParam=ruleDistanceTypeParam 
	 { $current=$iv_ruleDistanceTypeParam.current.getText(); }  
	 EOF 
;

// Rule DistanceTypeParam
ruleDistanceTypeParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"distance_type"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistanceTypeParamAccess().getDistance_typeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistanceTypeParamAccess().getColonKeyword_1()); 
    }
(
	kw='"arc"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistanceTypeParamAccess().getArcKeyword_2_0()); 
    }

    |
	kw='"sloppy_arc"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistanceTypeParamAccess().getSloppy_arcKeyword_2_1()); 
    }

    |
	kw='"plane"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistanceTypeParamAccess().getPlaneKeyword_2_2()); 
    }
))
    ;





// Entry rule entryRuleOptimizeBboxParam
entryRuleOptimizeBboxParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptimizeBboxParamRule()); } 
	 iv_ruleOptimizeBboxParam=ruleOptimizeBboxParam 
	 { $current=$iv_ruleOptimizeBboxParam.current.getText(); }  
	 EOF 
;

// Rule OptimizeBboxParam
ruleOptimizeBboxParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"optimize_bbox"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOptimizeBboxParamAccess().getOptimize_bboxKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOptimizeBboxParamAccess().getColonKeyword_1()); 
    }
(
	kw='"memory"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOptimizeBboxParamAccess().getMemoryKeyword_2_0()); 
    }

    |
	kw='"indexed"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOptimizeBboxParamAccess().getIndexedKeyword_2_1()); 
    }

    |
	kw='"none"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOptimizeBboxParamAccess().getNoneKeyword_2_2()); 
    }
))
    ;





// Entry rule entryRuleUseDisMaxParam
entryRuleUseDisMaxParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUseDisMaxParamRule()); } 
	 iv_ruleUseDisMaxParam=ruleUseDisMaxParam 
	 { $current=$iv_ruleUseDisMaxParam.current.getText(); }  
	 EOF 
;

// Rule UseDisMaxParam
ruleUseDisMaxParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"use_dis_max"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUseDisMaxParamAccess().getUse_dis_maxKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUseDisMaxParamAccess().getColonKeyword_1()); 
    }
    this_BOOLEAN_2=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_2);
    }

    { 
    newLeafNode(this_BOOLEAN_2, grammarAccess.getUseDisMaxParamAccess().getBOOLEANTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleMatchQuery
entryRuleMatchQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchQueryRule()); }
	 iv_ruleMatchQuery=ruleMatchQuery 
	 { $current=$iv_ruleMatchQuery.current; } 
	 EOF 
;

// Rule MatchQuery
ruleMatchQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"match"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatchQueryAccess().getMatchKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatchQueryAccess().getColonKeyword_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getMatchQueryAccess().getShortMatchQueryObjectParserRuleCall_2_0()); 
    }
    this_ShortMatchQueryObject_2=ruleShortMatchQueryObject
    { 
        $current = $this_ShortMatchQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatchQueryAccess().getMatchQueryObjectParserRuleCall_2_1()); 
    }
    this_MatchQueryObject_3=ruleMatchQueryObject
    { 
        $current = $this_MatchQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleShortMatchQueryObject
entryRuleShortMatchQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortMatchQueryObjectRule()); }
	 iv_ruleShortMatchQueryObject=ruleShortMatchQueryObject 
	 { $current=$iv_ruleShortMatchQueryObject.current; } 
	 EOF 
;

// Rule ShortMatchQueryObject
ruleShortMatchQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShortMatchQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getShortMatchQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortMatchQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortMatchQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_query_3_0=RULE_STRING
		{
			newLeafNode(lv_query_3_0, grammarAccess.getShortMatchQueryObjectAccess().getQuerySTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortMatchQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"query",
        		lv_query_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortMatchQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMatchQueryObject
entryRuleMatchQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchQueryObjectRule()); }
	 iv_ruleMatchQueryObject=ruleMatchQueryObject 
	 { $current=$iv_ruleMatchQueryObject.current; } 
	 EOF 
;

// Rule MatchQueryObject
ruleMatchQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatchQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getMatchQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatchQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatchQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchQueryObjectAccess().getParametersMatchQueryParametersObjectParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleMatchQueryParametersObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchQueryObjectRule());
	        }
       		set(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"MatchQueryParametersObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMatchQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMatchQueryParametersObject
entryRuleMatchQueryParametersObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchQueryParametersObjectRule()); }
	 iv_ruleMatchQueryParametersObject=ruleMatchQueryParametersObject 
	 { $current=$iv_ruleMatchQueryParametersObject.current; } 
	 EOF 
;

// Rule MatchQueryParametersObject
ruleMatchQueryParametersObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatchQueryParametersObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"query"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatchQueryParametersObjectAccess().getQueryKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatchQueryParametersObjectAccess().getColonKeyword_2());
    }
(
(
		lv_query_3_0=RULE_STRING
		{
			newLeafNode(lv_query_3_0, grammarAccess.getMatchQueryParametersObjectAccess().getQuerySTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatchQueryParametersObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"query",
        		lv_query_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMatchQueryParametersObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchQueryParametersObjectAccess().getParamsMatchQueryParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleMatchQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchQueryParametersObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"MatchQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMatchQueryParametersObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchQueryParametersObjectAccess().getParamsMatchQueryParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleMatchQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchQueryParametersObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"MatchQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMatchQueryParametersObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleMatchQueryParameter
entryRuleMatchQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchQueryParameterRule()); } 
	 iv_ruleMatchQueryParameter=ruleMatchQueryParameter 
	 { $current=$iv_ruleMatchQueryParameter.current.getText(); }  
	 EOF 
;

// Rule MatchQueryParameter
ruleMatchQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMatchQueryParameterAccess().getOperatorParamParserRuleCall_0()); 
    }
    this_OperatorParam_0=ruleOperatorParam    {
		$current.merge(this_OperatorParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatchQueryParameterAccess().getZeroTermsQueryParamParserRuleCall_1()); 
    }
    this_ZeroTermsQueryParam_1=ruleZeroTermsQueryParam    {
		$current.merge(this_ZeroTermsQueryParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatchQueryParameterAccess().getCutoffFrequenceParamParserRuleCall_2()); 
    }
    this_CutoffFrequenceParam_2=ruleCutoffFrequenceParam    {
		$current.merge(this_CutoffFrequenceParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatchQueryParameterAccess().getAnalyzerParamParserRuleCall_3()); 
    }
    this_AnalyzerParam_3=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatchQueryParameterAccess().getBoostParamParserRuleCall_4()); 
    }
    this_BoostParam_4=ruleBoostParam    {
		$current.merge(this_BoostParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMatchQueryParameterAccess().getSlopParamParserRuleCall_5()); 
    }
    this_SlopParam_5=ruleSlopParam    {
		$current.merge(this_SlopParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMultiMatchQuery
entryRuleMultiMatchQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiMatchQueryRule()); }
	 iv_ruleMultiMatchQuery=ruleMultiMatchQuery 
	 { $current=$iv_ruleMultiMatchQuery.current; } 
	 EOF 
;

// Rule MultiMatchQuery
ruleMultiMatchQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"multi_match"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultiMatchQueryAccess().getMulti_matchKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMultiMatchQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getMultiMatchQueryAccess().getMultiMatchQueryObjectParserRuleCall_2()); 
    }
    this_MultiMatchQueryObject_2=ruleMultiMatchQueryObject
    { 
        $current = $this_MultiMatchQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMultiMatchQueryObject
entryRuleMultiMatchQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiMatchQueryObjectRule()); }
	 iv_ruleMultiMatchQueryObject=ruleMultiMatchQueryObject 
	 { $current=$iv_ruleMultiMatchQueryObject.current; } 
	 EOF 
;

// Rule MultiMatchQueryObject
ruleMultiMatchQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultiMatchQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"query"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMultiMatchQueryObjectAccess().getQueryKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultiMatchQueryObjectAccess().getColonKeyword_2());
    }
this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getMultiMatchQueryObjectAccess().getSTRINGTerminalRuleCall_3()); 
    }
	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultiMatchQueryObjectAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiMatchQueryObjectAccess().getFieldsFieldsParamParserRuleCall_5_0()); 
	    }
		lv_fields_5_0=ruleFieldsParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiMatchQueryObjectRule());
	        }
       		set(
       			$current, 
       			"fields",
        		lv_fields_5_0, 
        		"FieldsParam");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMultiMatchQueryObjectAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiMatchQueryObjectAccess().getParamsMultiMatchQueryParameterParserRuleCall_6_1_0()); 
	    }
		lv_params_7_0=ruleMultiMatchQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiMatchQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"MultiMatchQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMultiMatchQueryObjectAccess().getCommaKeyword_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiMatchQueryObjectAccess().getParamsMultiMatchQueryParameterParserRuleCall_6_2_1_0()); 
	    }
		lv_params_9_0=ruleMultiMatchQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiMatchQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_9_0, 
        		"MultiMatchQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMultiMatchQueryObjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleMultiMatchQueryParameter
entryRuleMultiMatchQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiMatchQueryParameterRule()); } 
	 iv_ruleMultiMatchQueryParameter=ruleMultiMatchQueryParameter 
	 { $current=$iv_ruleMultiMatchQueryParameter.current.getText(); }  
	 EOF 
;

// Rule MultiMatchQueryParameter
ruleMultiMatchQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultiMatchQueryParameterAccess().getMultiMatchTypeParamParserRuleCall_0()); 
    }
    this_MultiMatchTypeParam_0=ruleMultiMatchTypeParam    {
		$current.merge(this_MultiMatchTypeParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMultiMatchQueryParameterAccess().getTieBreakerParamParserRuleCall_1()); 
    }
    this_TieBreakerParam_1=ruleTieBreakerParam    {
		$current.merge(this_TieBreakerParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMultiMatchTypeParam
entryRuleMultiMatchTypeParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiMatchTypeParamRule()); } 
	 iv_ruleMultiMatchTypeParam=ruleMultiMatchTypeParam 
	 { $current=$iv_ruleMultiMatchTypeParam.current.getText(); }  
	 EOF 
;

// Rule MultiMatchTypeParam
ruleMultiMatchTypeParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"type"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamAccess().getTypeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getMultiMatchTypeParamAccess().getMultiMatchTypeParamTypesParserRuleCall_2()); 
    }
    this_MultiMatchTypeParamTypes_2=ruleMultiMatchTypeParamTypes    {
		$current.merge(this_MultiMatchTypeParamTypes_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMultiMatchTypeParamTypes
entryRuleMultiMatchTypeParamTypes returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiMatchTypeParamTypesRule()); } 
	 iv_ruleMultiMatchTypeParamTypes=ruleMultiMatchTypeParamTypes 
	 { $current=$iv_ruleMultiMatchTypeParamTypes.current.getText(); }  
	 EOF 
;

// Rule MultiMatchTypeParamTypes
ruleMultiMatchTypeParamTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"best_fields"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamTypesAccess().getBest_fieldsKeyword_0()); 
    }

    |
	kw='"most_fields"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamTypesAccess().getMost_fieldsKeyword_1()); 
    }

    |
	kw='"cross_fields"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamTypesAccess().getCross_fieldsKeyword_2()); 
    }

    |
	kw='"phrase"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamTypesAccess().getPhraseKeyword_3()); 
    }

    |
	kw='"phrase_prefix"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiMatchTypeParamTypesAccess().getPhrase_prefixKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleBoolQuery
entryRuleBoolQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolQueryRule()); }
	 iv_ruleBoolQuery=ruleBoolQuery 
	 { $current=$iv_ruleBoolQuery.current; } 
	 EOF 
;

// Rule BoolQuery
ruleBoolQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"bool"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolQueryAccess().getBoolKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoolQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getBoolQueryAccess().getBoolQueryObjectParserRuleCall_2()); 
    }
    this_BoolQueryObject_2=ruleBoolQueryObject
    { 
        $current = $this_BoolQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBoolQueryObject
entryRuleBoolQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolQueryObjectRule()); }
	 iv_ruleBoolQueryObject=ruleBoolQueryObject 
	 { $current=$iv_ruleBoolQueryObject.current; } 
	 EOF 
;

// Rule BoolQueryObject
ruleBoolQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolQueryObjectAccess().getClauseBoolClauseParserRuleCall_1_0()); 
	    }
		lv_clause_1_0=ruleBoolClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolQueryObjectRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_1_0, 
        		"BoolClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoolQueryObjectAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolQueryObjectAccess().getClauseBoolClauseParserRuleCall_2_1_0()); 
	    }
		lv_clause_3_0=ruleBoolClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolQueryObjectRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_3_0, 
        		"BoolClause");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBoolQueryObjectAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolQueryObjectAccess().getParamsBoolQueryParameterParserRuleCall_3_1_0()); 
	    }
		lv_params_5_0=ruleBoolQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"BoolQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBoolQueryObjectAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolQueryObjectAccess().getParamsBoolQueryParameterParserRuleCall_3_2_1_0()); 
	    }
		lv_params_7_0=ruleBoolQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"BoolQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBoolQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBoolQueryParameter
entryRuleBoolQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolQueryParameterRule()); } 
	 iv_ruleBoolQueryParameter=ruleBoolQueryParameter 
	 { $current=$iv_ruleBoolQueryParameter.current.getText(); }  
	 EOF 
;

// Rule BoolQueryParameter
ruleBoolQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBoolQueryParameterAccess().getMinimumShouldMatchParamParserRuleCall_0()); 
    }
    this_MinimumShouldMatchParam_0=ruleMinimumShouldMatchParam    {
		$current.merge(this_MinimumShouldMatchParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getBoolQueryParameterAccess().getBoostParamParserRuleCall_1()); 
    }
    this_BoostParam_1=ruleBoostParam    {
		$current.merge(this_BoostParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleBoolClause
entryRuleBoolClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolClauseRule()); }
	 iv_ruleBoolClause=ruleBoolClause 
	 { $current=$iv_ruleBoolClause.current; } 
	 EOF 
;

// Rule BoolClause
ruleBoolClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_BOOL_CLAUSE_0=RULE_BOOL_CLAUSE
    { 
    newLeafNode(this_BOOL_CLAUSE_0, grammarAccess.getBoolClauseAccess().getBOOL_CLAUSETerminalRuleCall_0()); 
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoolClauseAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolClauseAccess().getQueryQueryObjectParserRuleCall_2_0()); 
	    }
		lv_query_2_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolClauseRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_2_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCommonQuery
entryRuleCommonQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonQueryRule()); }
	 iv_ruleCommonQuery=ruleCommonQuery 
	 { $current=$iv_ruleCommonQuery.current; } 
	 EOF 
;

// Rule CommonQuery
ruleCommonQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"common"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommonQueryAccess().getCommonKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommonQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getCommonQueryAccess().getCommonQueryObjectParserRuleCall_2()); 
    }
    this_CommonQueryObject_2=ruleCommonQueryObject
    { 
        $current = $this_CommonQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCommonQueryObject
entryRuleCommonQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonQueryObjectRule()); }
	 iv_ruleCommonQueryObject=ruleCommonQueryObject 
	 { $current=$iv_ruleCommonQueryObject.current; } 
	 EOF 
;

// Rule CommonQueryObject
ruleCommonQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommonQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getCommonQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommonQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCommonQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommonQueryObjectAccess().getParametersCommonQueryParametersObjectParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleCommonQueryParametersObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommonQueryObjectRule());
	        }
       		set(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"CommonQueryParametersObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCommonQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCommonQueryParametersObject
entryRuleCommonQueryParametersObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonQueryParametersObjectRule()); }
	 iv_ruleCommonQueryParametersObject=ruleCommonQueryParametersObject 
	 { $current=$iv_ruleCommonQueryParametersObject.current; } 
	 EOF 
;

// Rule CommonQueryParametersObject
ruleCommonQueryParametersObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommonQueryParametersObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"query"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommonQueryParametersObjectAccess().getQueryKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCommonQueryParametersObjectAccess().getColonKeyword_2());
    }
(
(
		lv_query_3_0=RULE_STRING
		{
			newLeafNode(lv_query_3_0, grammarAccess.getCommonQueryParametersObjectAccess().getQuerySTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommonQueryParametersObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"query",
        		lv_query_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCommonQueryParametersObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommonQueryParametersObjectAccess().getParamsCommonQueryParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleCommonQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommonQueryParametersObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"CommonQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCommonQueryParametersObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommonQueryParametersObjectAccess().getParamsCommonQueryParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleCommonQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommonQueryParametersObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"CommonQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCommonQueryParametersObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCommonQueryParameter
entryRuleCommonQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonQueryParameterRule()); } 
	 iv_ruleCommonQueryParameter=ruleCommonQueryParameter 
	 { $current=$iv_ruleCommonQueryParameter.current.getText(); }  
	 EOF 
;

// Rule CommonQueryParameter
ruleCommonQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCommonQueryParameterAccess().getCutoffFrequenceParamParserRuleCall_0()); 
    }
    this_CutoffFrequenceParam_0=ruleCutoffFrequenceParam    {
		$current.merge(this_CutoffFrequenceParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCommonQueryParameterAccess().getLowFreqOperatorParamParserRuleCall_1()); 
    }
    this_LowFreqOperatorParam_1=ruleLowFreqOperatorParam    {
		$current.merge(this_LowFreqOperatorParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCommonQueryParameterAccess().getMinimumShouldMatchParamParserRuleCall_2()); 
    }
    this_MinimumShouldMatchParam_2=ruleMinimumShouldMatchParam    {
		$current.merge(this_MinimumShouldMatchParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCommonQueryParameterAccess().getBoostParamParserRuleCall_3()); 
    }
    this_BoostParam_3=ruleBoostParam    {
		$current.merge(this_BoostParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCommonQueryParameterAccess().getAnalyzerParamParserRuleCall_4()); 
    }
    this_AnalyzerParam_4=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCommonQueryParameterAccess().getDisableCoordParamParserRuleCall_5()); 
    }
    this_DisableCoordParam_5=ruleDisableCoordParam    {
		$current.merge(this_DisableCoordParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleConstantScoreQuery
entryRuleConstantScoreQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantScoreQueryRule()); }
	 iv_ruleConstantScoreQuery=ruleConstantScoreQuery 
	 { $current=$iv_ruleConstantScoreQuery.current; } 
	 EOF 
;

// Rule ConstantScoreQuery
ruleConstantScoreQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"constant_score"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantScoreQueryAccess().getConstant_scoreKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConstantScoreQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getConstantScoreQueryAccess().getConstantScoreQueryObjectParserRuleCall_2()); 
    }
    this_ConstantScoreQueryObject_2=ruleConstantScoreQueryObject
    { 
        $current = $this_ConstantScoreQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConstantScoreQueryObject
entryRuleConstantScoreQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantScoreQueryObjectRule()); }
	 iv_ruleConstantScoreQueryObject=ruleConstantScoreQueryObject 
	 { $current=$iv_ruleConstantScoreQueryObject.current; } 
	 EOF 
;

// Rule ConstantScoreQueryObject
ruleConstantScoreQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantScoreQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getConstantScoreQueryObjectAccess().getQueryParserRuleCall_1_0()); 
    }
    this_Query_1=ruleQuery
    { 
        $current = $this_Query_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantScoreQueryObjectAccess().getFilterParserRuleCall_1_1()); 
    }
    this_Filter_2=ruleFilter
    { 
        $current = $this_Filter_2.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstantScoreQueryObjectAccess().getCommaKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getConstantScoreQueryObjectAccess().getBoostParamParserRuleCall_3()); 
    }
ruleBoostParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConstantScoreQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleDisMaxQuery
entryRuleDisMaxQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisMaxQueryRule()); }
	 iv_ruleDisMaxQuery=ruleDisMaxQuery 
	 { $current=$iv_ruleDisMaxQuery.current; } 
	 EOF 
;

// Rule DisMaxQuery
ruleDisMaxQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"dis_max"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDisMaxQueryAccess().getDis_maxKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDisMaxQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getDisMaxQueryAccess().getDisMaxQueryObjectParserRuleCall_2()); 
    }
    this_DisMaxQueryObject_2=ruleDisMaxQueryObject
    { 
        $current = $this_DisMaxQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDisMaxQueryObject
entryRuleDisMaxQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDisMaxQueryObjectRule()); }
	 iv_ruleDisMaxQueryObject=ruleDisMaxQueryObject 
	 { $current=$iv_ruleDisMaxQueryObject.current; } 
	 EOF 
;

// Rule DisMaxQueryObject
ruleDisMaxQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDisMaxQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getDisMaxQueryObjectAccess().getTieBreakerParamParserRuleCall_1()); 
    }
ruleTieBreakerParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDisMaxQueryObjectAccess().getCommaKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getDisMaxQueryObjectAccess().getBoostParamParserRuleCall_3()); 
    }
ruleBoostParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDisMaxQueryObjectAccess().getCommaKeyword_4());
    }
	otherlv_5='"queries"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDisMaxQueryObjectAccess().getQueriesKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDisMaxQueryObjectAccess().getColonKeyword_6());
    }
	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDisMaxQueryObjectAccess().getLeftSquareBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDisMaxQueryObjectAccess().getQueryQueryObjectParserRuleCall_8_0()); 
	    }
		lv_query_8_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisMaxQueryObjectRule());
	        }
       		add(
       			$current, 
       			"query",
        		lv_query_8_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDisMaxQueryObjectAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDisMaxQueryObjectAccess().getQueryQueryObjectParserRuleCall_9_1_0()); 
	    }
		lv_query_10_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDisMaxQueryObjectRule());
	        }
       		add(
       			$current, 
       			"query",
        		lv_query_10_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDisMaxQueryObjectAccess().getRightSquareBracketKeyword_10());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDisMaxQueryObjectAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleFilteredQuery
entryRuleFilteredQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilteredQueryRule()); }
	 iv_ruleFilteredQuery=ruleFilteredQuery 
	 { $current=$iv_ruleFilteredQuery.current; } 
	 EOF 
;

// Rule FilteredQuery
ruleFilteredQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"filtered"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFilteredQueryAccess().getFilteredKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFilteredQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getFilteredQueryAccess().getFilteredQueryObjectParserRuleCall_2()); 
    }
    this_FilteredQueryObject_2=ruleFilteredQueryObject
    { 
        $current = $this_FilteredQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFilteredQueryObject
entryRuleFilteredQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilteredQueryObjectRule()); }
	 iv_ruleFilteredQueryObject=ruleFilteredQueryObject 
	 { $current=$iv_ruleFilteredQueryObject.current; } 
	 EOF 
;

// Rule FilteredQueryObject
ruleFilteredQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFilteredQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFilteredQueryObjectAccess().getQueryQueryParserRuleCall_1_0()); 
	    }
		lv_query_1_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilteredQueryObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_1_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFilteredQueryObjectAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFilteredQueryObjectAccess().getFilterFilterParserRuleCall_3_0()); 
	    }
		lv_filter_3_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFilteredQueryObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_3_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFilteredQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFuzzyLikeThisQuery
entryRuleFuzzyLikeThisQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyLikeThisQueryRule()); }
	 iv_ruleFuzzyLikeThisQuery=ruleFuzzyLikeThisQuery 
	 { $current=$iv_ruleFuzzyLikeThisQuery.current; } 
	 EOF 
;

// Rule FuzzyLikeThisQuery
ruleFuzzyLikeThisQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"flt"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyLikeThisQueryAccess().getFltKeyword_0_0());
    }

    |	otherlv_1='"fuzzy_like_this"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuzzyLikeThisQueryAccess().getFuzzy_like_thisKeyword_0_1());
    }
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuzzyLikeThisQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryAccess().getFuzzyLikeThisQueryObjectParserRuleCall_2()); 
    }
    this_FuzzyLikeThisQueryObject_3=ruleFuzzyLikeThisQueryObject
    { 
        $current = $this_FuzzyLikeThisQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFuzzyLikeThisQueryObject
entryRuleFuzzyLikeThisQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyLikeThisQueryObjectRule()); }
	 iv_ruleFuzzyLikeThisQueryObject=ruleFuzzyLikeThisQueryObject 
	 { $current=$iv_ruleFuzzyLikeThisQueryObject.current; } 
	 EOF 
;

// Rule FuzzyLikeThisQueryObject
ruleFuzzyLikeThisQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyLikeThisQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryObjectAccess().getFieldsParamParserRuleCall_1()); 
    }
ruleFieldsParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuzzyLikeThisQueryObjectAccess().getCommaKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryObjectAccess().getLikeTextParamParserRuleCall_3()); 
    }
    this_LikeTextParam_3=ruleLikeTextParam
    { 
        $current = $this_LikeTextParam_3.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFuzzyLikeThisQueryObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryObjectAccess().getParamsFuzzyLikeThisQueryParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleFuzzyLikeThisQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyLikeThisQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"FuzzyLikeThisQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFuzzyLikeThisQueryObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryObjectAccess().getParamsFuzzyLikeThisQueryParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleFuzzyLikeThisQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyLikeThisQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"FuzzyLikeThisQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFuzzyLikeThisQueryObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleFuzzyLikeThisQueryParameter
entryRuleFuzzyLikeThisQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterRule()); } 
	 iv_ruleFuzzyLikeThisQueryParameter=ruleFuzzyLikeThisQueryParameter 
	 { $current=$iv_ruleFuzzyLikeThisQueryParameter.current.getText(); }  
	 EOF 
;

// Rule FuzzyLikeThisQueryParameter
ruleFuzzyLikeThisQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterAccess().getIgnoreTfParamParserRuleCall_0()); 
    }
    this_IgnoreTfParam_0=ruleIgnoreTfParam    {
		$current.merge(this_IgnoreTfParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterAccess().getMaxQueryTermsParamParserRuleCall_1()); 
    }
    this_MaxQueryTermsParam_1=ruleMaxQueryTermsParam    {
		$current.merge(this_MaxQueryTermsParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterAccess().getFuzzinessParamParserRuleCall_2()); 
    }
    this_FuzzinessParam_2=ruleFuzzinessParam    {
		$current.merge(this_FuzzinessParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterAccess().getPrefixLengthParamParserRuleCall_3()); 
    }
    this_PrefixLengthParam_3=rulePrefixLengthParam    {
		$current.merge(this_PrefixLengthParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterAccess().getBoostParamParserRuleCall_4()); 
    }
    this_BoostParam_4=ruleBoostParam    {
		$current.merge(this_BoostParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisQueryParameterAccess().getAnalyzerParamParserRuleCall_5()); 
    }
    this_AnalyzerParam_5=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleFuzzyLikeThisFieldQuery
entryRuleFuzzyLikeThisFieldQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryRule()); }
	 iv_ruleFuzzyLikeThisFieldQuery=ruleFuzzyLikeThisFieldQuery 
	 { $current=$iv_ruleFuzzyLikeThisFieldQuery.current; } 
	 EOF 
;

// Rule FuzzyLikeThisFieldQuery
ruleFuzzyLikeThisFieldQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"flt_field"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyLikeThisFieldQueryAccess().getFlt_fieldKeyword_0_0());
    }

    |	otherlv_1='"fuzzy_like_this_field"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuzzyLikeThisFieldQueryAccess().getFuzzy_like_this_fieldKeyword_0_1());
    }
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuzzyLikeThisFieldQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryAccess().getFuzzyLikeThisFieldQueryObjectParserRuleCall_2()); 
    }
    this_FuzzyLikeThisFieldQueryObject_3=ruleFuzzyLikeThisFieldQueryObject
    { 
        $current = $this_FuzzyLikeThisFieldQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFuzzyLikeThisFieldQueryObject
entryRuleFuzzyLikeThisFieldQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryObjectRule()); }
	 iv_ruleFuzzyLikeThisFieldQueryObject=ruleFuzzyLikeThisFieldQueryObject 
	 { $current=$iv_ruleFuzzyLikeThisFieldQueryObject.current; } 
	 EOF 
;

// Rule FuzzyLikeThisFieldQueryObject
ruleFuzzyLikeThisFieldQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuzzyLikeThisFieldQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getColonKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='"like_text"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getLike_textKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getColonKeyword_5());
    }
this_STRING_6=RULE_STRING
    { 
    newLeafNode(this_STRING_6, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getSTRINGTerminalRuleCall_6()); 
    }
(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_1_0()); 
	    }
		lv_params_8_0=ruleFuzzyLikeThisFieldQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyLikeThisFieldQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_8_0, 
        		"FuzzyLikeThisFieldQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getCommaKeyword_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_2_1_0()); 
	    }
		lv_params_10_0=ruleFuzzyLikeThisFieldQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyLikeThisFieldQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_10_0, 
        		"FuzzyLikeThisFieldQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getRightCurlyBracketKeyword_8());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFuzzyLikeThisFieldQueryObjectAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleFuzzyLikeThisFieldQueryParameter
entryRuleFuzzyLikeThisFieldQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterRule()); } 
	 iv_ruleFuzzyLikeThisFieldQueryParameter=ruleFuzzyLikeThisFieldQueryParameter 
	 { $current=$iv_ruleFuzzyLikeThisFieldQueryParameter.current.getText(); }  
	 EOF 
;

// Rule FuzzyLikeThisFieldQueryParameter
ruleFuzzyLikeThisFieldQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterAccess().getIgnoreTfParamParserRuleCall_0()); 
    }
    this_IgnoreTfParam_0=ruleIgnoreTfParam    {
		$current.merge(this_IgnoreTfParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterAccess().getMaxQueryTermsParamParserRuleCall_1()); 
    }
    this_MaxQueryTermsParam_1=ruleMaxQueryTermsParam    {
		$current.merge(this_MaxQueryTermsParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterAccess().getFuzzinessParamParserRuleCall_2()); 
    }
    this_FuzzinessParam_2=ruleFuzzinessParam    {
		$current.merge(this_FuzzinessParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterAccess().getPrefixLengthParamParserRuleCall_3()); 
    }
    this_PrefixLengthParam_3=rulePrefixLengthParam    {
		$current.merge(this_PrefixLengthParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterAccess().getBoostParamParserRuleCall_4()); 
    }
    this_BoostParam_4=ruleBoostParam    {
		$current.merge(this_BoostParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyLikeThisFieldQueryParameterAccess().getAnalyzerParamParserRuleCall_5()); 
    }
    this_AnalyzerParam_5=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleFuzzyQuery
entryRuleFuzzyQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyQueryRule()); }
	 iv_ruleFuzzyQuery=ruleFuzzyQuery 
	 { $current=$iv_ruleFuzzyQuery.current; } 
	 EOF 
;

// Rule FuzzyQuery
ruleFuzzyQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"fuzzy"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyQueryAccess().getFuzzyKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuzzyQueryAccess().getColonKeyword_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getFuzzyQueryAccess().getSimpleFuzzyQueryObjectParserRuleCall_2_0()); 
    }
    this_SimpleFuzzyQueryObject_2=ruleSimpleFuzzyQueryObject
    { 
        $current = $this_SimpleFuzzyQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyQueryAccess().getFuzzyQueryObjectParserRuleCall_2_1()); 
    }
    this_FuzzyQueryObject_3=ruleFuzzyQueryObject
    { 
        $current = $this_FuzzyQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleSimpleFuzzyQueryObject
entryRuleSimpleFuzzyQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleFuzzyQueryObjectRule()); }
	 iv_ruleSimpleFuzzyQueryObject=ruleSimpleFuzzyQueryObject 
	 { $current=$iv_ruleSimpleFuzzyQueryObject.current; } 
	 EOF 
;

// Rule SimpleFuzzyQueryObject
ruleSimpleFuzzyQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleFuzzyQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_field_1_0=RULE_STRING
		{
			newLeafNode(lv_field_1_0, grammarAccess.getSimpleFuzzyQueryObjectAccess().getFieldSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFuzzyQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"field",
        		lv_field_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleFuzzyQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_query_3_0=RULE_STRING
		{
			newLeafNode(lv_query_3_0, grammarAccess.getSimpleFuzzyQueryObjectAccess().getQuerySTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFuzzyQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"query",
        		lv_query_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSimpleFuzzyQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFuzzyQueryObject
entryRuleFuzzyQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyQueryObjectRule()); }
	 iv_ruleFuzzyQueryObject=ruleFuzzyQueryObject 
	 { $current=$iv_ruleFuzzyQueryObject.current; } 
	 EOF 
;

// Rule FuzzyQueryObject
ruleFuzzyQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_field_1_0=RULE_STRING
		{
			newLeafNode(lv_field_1_0, grammarAccess.getFuzzyQueryObjectAccess().getFieldSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuzzyQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"field",
        		lv_field_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFuzzyQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyQueryObjectAccess().getQFuzzyQueryObjectParametersParserRuleCall_3_0()); 
	    }
		lv_q_3_0=ruleFuzzyQueryObjectParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyQueryObjectRule());
	        }
       		set(
       			$current, 
       			"q",
        		lv_q_3_0, 
        		"FuzzyQueryObjectParameters");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFuzzyQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFuzzyQueryObjectParameters
entryRuleFuzzyQueryObjectParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyQueryObjectParametersRule()); }
	 iv_ruleFuzzyQueryObjectParameters=ruleFuzzyQueryObjectParameters 
	 { $current=$iv_ruleFuzzyQueryObjectParameters.current; } 
	 EOF 
;

// Rule FuzzyQueryObjectParameters
ruleFuzzyQueryObjectParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"value"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFuzzyQueryObjectParametersAccess().getValueKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFuzzyQueryObjectParametersAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getFuzzyQueryObjectParametersAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFuzzyQueryObjectParametersRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFuzzyQueryObjectParametersAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyQueryObjectParametersAccess().getParamsFuzzyQueryParameterParserRuleCall_3_1_0()); 
	    }
		lv_params_4_0=ruleFuzzyQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyQueryObjectParametersRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"FuzzyQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFuzzyQueryObjectParametersAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFuzzyQueryObjectParametersAccess().getParamsFuzzyQueryParameterParserRuleCall_3_2_1_0()); 
	    }
		lv_params_6_0=ruleFuzzyQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFuzzyQueryObjectParametersRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_6_0, 
        		"FuzzyQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleFuzzyQueryParameter
entryRuleFuzzyQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFuzzyQueryParameterRule()); } 
	 iv_ruleFuzzyQueryParameter=ruleFuzzyQueryParameter 
	 { $current=$iv_ruleFuzzyQueryParameter.current.getText(); }  
	 EOF 
;

// Rule FuzzyQueryParameter
ruleFuzzyQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFuzzyQueryParameterAccess().getBoostParamParserRuleCall_0()); 
    }
    this_BoostParam_0=ruleBoostParam    {
		$current.merge(this_BoostParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyQueryParameterAccess().getFuzzinessParamParserRuleCall_1()); 
    }
    this_FuzzinessParam_1=ruleFuzzinessParam    {
		$current.merge(this_FuzzinessParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyQueryParameterAccess().getPrefixLengthParamParserRuleCall_2()); 
    }
    this_PrefixLengthParam_2=rulePrefixLengthParam    {
		$current.merge(this_PrefixLengthParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFuzzyQueryParameterAccess().getMaxExpansionsParamParserRuleCall_3()); 
    }
    this_MaxExpansionsParam_3=ruleMaxExpansionsParam    {
		$current.merge(this_MaxExpansionsParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleGeoshapeQuery
entryRuleGeoshapeQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoshapeQueryRule()); }
	 iv_ruleGeoshapeQuery=ruleGeoshapeQuery 
	 { $current=$iv_ruleGeoshapeQuery.current; } 
	 EOF 
;

// Rule GeoshapeQuery
ruleGeoshapeQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_shape"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoshapeQueryAccess().getGeo_shapeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoshapeQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoshapeQueryAccess().getGeoshapeQueryObjectParserRuleCall_2()); 
    }
    this_GeoshapeQueryObject_2=ruleGeoshapeQueryObject
    { 
        $current = $this_GeoshapeQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoshapeQueryObject
entryRuleGeoshapeQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoshapeQueryObjectRule()); }
	 iv_ruleGeoshapeQueryObject=ruleGeoshapeQueryObject 
	 { $current=$iv_ruleGeoshapeQueryObject.current; } 
	 EOF 
;

// Rule GeoshapeQueryObject
ruleGeoshapeQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoshapeQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getGeoshapeQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoshapeQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoshapeQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoshapeQueryObjectAccess().getShapeShapeObjectParserRuleCall_3_0()); 
	    }
		lv_shape_3_0=ruleShapeObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoshapeQueryObjectRule());
	        }
       		set(
       			$current, 
       			"shape",
        		lv_shape_3_0, 
        		"ShapeObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoshapeQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleHasChildQuery
entryRuleHasChildQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasChildQueryRule()); }
	 iv_ruleHasChildQuery=ruleHasChildQuery 
	 { $current=$iv_ruleHasChildQuery.current; } 
	 EOF 
;

// Rule HasChildQuery
ruleHasChildQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"has_child"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasChildQueryAccess().getHas_childKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasChildQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getHasChildQueryAccess().getHasChildQueryObjectParserRuleCall_2()); 
    }
    this_HasChildQueryObject_2=ruleHasChildQueryObject
    { 
        $current = $this_HasChildQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHasChildQueryObject
entryRuleHasChildQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasChildQueryObjectRule()); }
	 iv_ruleHasChildQueryObject=ruleHasChildQueryObject 
	 { $current=$iv_ruleHasChildQueryObject.current; } 
	 EOF 
;

// Rule HasChildQueryObject
ruleHasChildQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasChildQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"type"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasChildQueryObjectAccess().getTypeKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHasChildQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_childType_3_0=RULE_STRING
		{
			newLeafNode(lv_childType_3_0, grammarAccess.getHasChildQueryObjectAccess().getChildTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasChildQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"childType",
        		lv_childType_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHasChildQueryObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getHasChildQueryObjectAccess().getScoreModeParamParserRuleCall_4_1()); 
    }
ruleScoreModeParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHasChildQueryObjectAccess().getCommaKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getHasChildQueryObjectAccess().getQueryQueryParserRuleCall_6_0_0()); 
	    }
		lv_query_7_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasChildQueryObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_7_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHasChildQueryObjectAccess().getFilterFilterParserRuleCall_6_1_0()); 
	    }
		lv_filter_8_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasChildQueryObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_8_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getHasChildQueryObjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleHasParentQuery
entryRuleHasParentQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasParentQueryRule()); }
	 iv_ruleHasParentQuery=ruleHasParentQuery 
	 { $current=$iv_ruleHasParentQuery.current; } 
	 EOF 
;

// Rule HasParentQuery
ruleHasParentQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"has_parent"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasParentQueryAccess().getHas_parentKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasParentQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getHasParentQueryAccess().getHasParentQueryObjectParserRuleCall_2()); 
    }
    this_HasParentQueryObject_2=ruleHasParentQueryObject
    { 
        $current = $this_HasParentQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHasParentQueryObject
entryRuleHasParentQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasParentQueryObjectRule()); }
	 iv_ruleHasParentQueryObject=ruleHasParentQueryObject 
	 { $current=$iv_ruleHasParentQueryObject.current; } 
	 EOF 
;

// Rule HasParentQueryObject
ruleHasParentQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasParentQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"type"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasParentQueryObjectAccess().getTypeKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHasParentQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_parentType_3_0=RULE_STRING
		{
			newLeafNode(lv_parentType_3_0, grammarAccess.getHasParentQueryObjectAccess().getParentTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasParentQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parentType",
        		lv_parentType_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHasParentQueryObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getHasParentQueryObjectAccess().getScoreModeParamParserRuleCall_4_1()); 
    }
ruleScoreModeParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHasParentQueryObjectAccess().getCommaKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getHasParentQueryObjectAccess().getQueryQueryParserRuleCall_6_0_0()); 
	    }
		lv_query_7_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasParentQueryObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_7_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHasParentQueryObjectAccess().getFilterFilterParserRuleCall_6_1_0()); 
	    }
		lv_filter_8_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasParentQueryObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_8_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getHasParentQueryObjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleIdsQuery
entryRuleIdsQuery returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdsQueryRule()); } 
	 iv_ruleIdsQuery=ruleIdsQuery 
	 { $current=$iv_ruleIdsQuery.current.getText(); }  
	 EOF 
;

// Rule IdsQuery
ruleIdsQuery returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"ids"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsQueryAccess().getIdsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsQueryAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getIdsQueryAccess().getIdsObjectParserRuleCall_2()); 
    }
    this_IdsObject_2=ruleIdsObject    {
		$current.merge(this_IdsObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleIdsObject
entryRuleIdsObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdsObjectRule()); } 
	 iv_ruleIdsObject=ruleIdsObject 
	 { $current=$iv_ruleIdsObject.current.getText(); }  
	 EOF 
;

// Rule IdsObject
ruleIdsObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }
(
	kw='"type"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getTypeKeyword_1_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getColonKeyword_1_1()); 
    }
(    this_STRING_3=RULE_STRING    {
		$current.merge(this_STRING_3);
    }

    { 
    newLeafNode(this_STRING_3, grammarAccess.getIdsObjectAccess().getSTRINGTerminalRuleCall_1_2_0()); 
    }

    |(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getLeftSquareBracketKeyword_1_2_1_0()); 
    }
    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getIdsObjectAccess().getSTRINGTerminalRuleCall_1_2_1_1()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getCommaKeyword_1_2_1_2_0()); 
    }
    this_STRING_7=RULE_STRING    {
		$current.merge(this_STRING_7);
    }

    { 
    newLeafNode(this_STRING_7, grammarAccess.getIdsObjectAccess().getSTRINGTerminalRuleCall_1_2_1_2_1()); 
    }
)
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getRightSquareBracketKeyword_1_2_1_3()); 
    }
))
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getCommaKeyword_1_3()); 
    }
)?
	kw='"values"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getValuesKeyword_2()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getColonKeyword_3()); 
    }

	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getLeftSquareBracketKeyword_4()); 
    }
    this_STRING_13=RULE_STRING    {
		$current.merge(this_STRING_13);
    }

    { 
    newLeafNode(this_STRING_13, grammarAccess.getIdsObjectAccess().getSTRINGTerminalRuleCall_5()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getCommaKeyword_6_0()); 
    }
    this_STRING_15=RULE_STRING    {
		$current.merge(this_STRING_15);
    }

    { 
    newLeafNode(this_STRING_15, grammarAccess.getIdsObjectAccess().getSTRINGTerminalRuleCall_6_1()); 
    }
)*
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getRightSquareBracketKeyword_7()); 
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsObjectAccess().getRightCurlyBracketKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleIndicesQuery
entryRuleIndicesQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndicesQueryRule()); }
	 iv_ruleIndicesQuery=ruleIndicesQuery 
	 { $current=$iv_ruleIndicesQuery.current; } 
	 EOF 
;

// Rule IndicesQuery
ruleIndicesQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"indices"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndicesQueryAccess().getIndicesKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIndicesQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getIndicesQueryAccess().getIndicesQueryObjectParserRuleCall_2()); 
    }
    this_IndicesQueryObject_2=ruleIndicesQueryObject
    { 
        $current = $this_IndicesQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIndicesQueryObject
entryRuleIndicesQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndicesQueryObjectRule()); }
	 iv_ruleIndicesQueryObject=ruleIndicesQueryObject 
	 { $current=$iv_ruleIndicesQueryObject.current; } 
	 EOF 
;

// Rule IndicesQueryObject
ruleIndicesQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndicesQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getIndicesQueryObjectAccess().getIndicesParamParserRuleCall_1_0()); 
    }
ruleIndicesParam
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIndicesQueryObjectAccess().getIndexParamParserRuleCall_1_1()); 
    }
ruleIndexParam
    { 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndicesQueryObjectAccess().getQueryQueryParserRuleCall_2_0()); 
	    }
		lv_query_3_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndicesQueryObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_3_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIndicesQueryObjectAccess().getCommaKeyword_3_0());
    }
	otherlv_5='"no_match_query"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIndicesQueryObjectAccess().getNo_match_queryKeyword_3_1());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIndicesQueryObjectAccess().getColonKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndicesQueryObjectAccess().getNoMatchQueryQueryObjectParserRuleCall_3_3_0()); 
	    }
		lv_noMatchQuery_7_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndicesQueryObjectRule());
	        }
       		set(
       			$current, 
       			"noMatchQuery",
        		lv_noMatchQuery_7_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIndicesQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMatchAllQuery
entryRuleMatchAllQuery returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchAllQueryRule()); } 
	 iv_ruleMatchAllQuery=ruleMatchAllQuery 
	 { $current=$iv_ruleMatchAllQuery.current.getText(); }  
	 EOF 
;

// Rule MatchAllQuery
ruleMatchAllQuery returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"match_all"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllQueryAccess().getMatch_allKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllQueryAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getMatchAllQueryAccess().getMatchAllQueryObjectParserRuleCall_2()); 
    }
    this_MatchAllQueryObject_2=ruleMatchAllQueryObject    {
		$current.merge(this_MatchAllQueryObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMatchAllQueryObject
entryRuleMatchAllQueryObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchAllQueryObjectRule()); } 
	 iv_ruleMatchAllQueryObject=ruleMatchAllQueryObject 
	 { $current=$iv_ruleMatchAllQueryObject.current.getText(); }  
	 EOF 
;

// Rule MatchAllQueryObject
ruleMatchAllQueryObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllQueryObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getMatchAllQueryObjectAccess().getBoostParamParserRuleCall_1()); 
    }
    this_BoostParam_1=ruleBoostParam    {
		$current.merge(this_BoostParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllQueryObjectAccess().getRightCurlyBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleMoreLikeThisQuery
entryRuleMoreLikeThisQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoreLikeThisQueryRule()); }
	 iv_ruleMoreLikeThisQuery=ruleMoreLikeThisQuery 
	 { $current=$iv_ruleMoreLikeThisQuery.current; } 
	 EOF 
;

// Rule MoreLikeThisQuery
ruleMoreLikeThisQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"mlt"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMoreLikeThisQueryAccess().getMltKeyword_0_0());
    }

    |	otherlv_1='"more_like_this"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMoreLikeThisQueryAccess().getMore_like_thisKeyword_0_1());
    }
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMoreLikeThisQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryAccess().getMoreLikeThisQueryObjectParserRuleCall_2()); 
    }
    this_MoreLikeThisQueryObject_3=ruleMoreLikeThisQueryObject
    { 
        $current = $this_MoreLikeThisQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMoreLikeThisQueryObject
entryRuleMoreLikeThisQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoreLikeThisQueryObjectRule()); }
	 iv_ruleMoreLikeThisQueryObject=ruleMoreLikeThisQueryObject 
	 { $current=$iv_ruleMoreLikeThisQueryObject.current; } 
	 EOF 
;

// Rule MoreLikeThisQueryObject
ruleMoreLikeThisQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMoreLikeThisQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryObjectAccess().getFieldsParamParserRuleCall_1()); 
    }
ruleFieldsParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMoreLikeThisQueryObjectAccess().getCommaKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryObjectAccess().getLikeTextParamParserRuleCall_3()); 
    }
    this_LikeTextParam_3=ruleLikeTextParam
    { 
        $current = $this_LikeTextParam_3.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMoreLikeThisQueryObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMoreLikeThisQueryObjectAccess().getParamsMoreLikeThisQueryParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleMoreLikeThisQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoreLikeThisQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"MoreLikeThisQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMoreLikeThisQueryObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMoreLikeThisQueryObjectAccess().getParamsMoreLikeThisQueryParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleMoreLikeThisQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMoreLikeThisQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"MoreLikeThisQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMoreLikeThisQueryObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleMoreLikeThisQueryParameter
entryRuleMoreLikeThisQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterRule()); } 
	 iv_ruleMoreLikeThisQueryParameter=ruleMoreLikeThisQueryParameter 
	 { $current=$iv_ruleMoreLikeThisQueryParameter.current.getText(); }  
	 EOF 
;

// Rule MoreLikeThisQueryParameter
ruleMoreLikeThisQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getPercentTermsToMatchParamParserRuleCall_0()); 
    }
    this_PercentTermsToMatchParam_0=rulePercentTermsToMatchParam    {
		$current.merge(this_PercentTermsToMatchParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getStopWordsParamParserRuleCall_1()); 
    }
    this_StopWordsParam_1=ruleStopWordsParam    {
		$current.merge(this_StopWordsParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getMinDocFreqParamParserRuleCall_2()); 
    }
    this_MinDocFreqParam_2=ruleMinDocFreqParam    {
		$current.merge(this_MinDocFreqParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getMaxDocFreqParamParserRuleCall_3()); 
    }
    this_MaxDocFreqParam_3=ruleMaxDocFreqParam    {
		$current.merge(this_MaxDocFreqParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getMinWordLengthParamParserRuleCall_4()); 
    }
    this_MinWordLengthParam_4=ruleMinWordLengthParam    {
		$current.merge(this_MinWordLengthParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getMaxWordLengthParamParserRuleCall_5()); 
    }
    this_MaxWordLengthParam_5=ruleMaxWordLengthParam    {
		$current.merge(this_MaxWordLengthParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getBoostTermsParamParserRuleCall_6()); 
    }
    this_BoostTermsParam_6=ruleBoostTermsParam    {
		$current.merge(this_BoostTermsParam_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getBoostParamParserRuleCall_7()); 
    }
    this_BoostParam_7=ruleBoostParam    {
		$current.merge(this_BoostParam_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getAnalyzerParamParserRuleCall_8()); 
    }
    this_AnalyzerParam_8=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getMinTermFreqParamParserRuleCall_9()); 
    }
    this_MinTermFreqParam_9=ruleMinTermFreqParam    {
		$current.merge(this_MinTermFreqParam_9);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisQueryParameterAccess().getMaxQueryTermsParamParserRuleCall_10()); 
    }
    this_MaxQueryTermsParam_10=ruleMaxQueryTermsParam    {
		$current.merge(this_MaxQueryTermsParam_10);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMoreLikeThisFieldQuery
entryRuleMoreLikeThisFieldQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryRule()); }
	 iv_ruleMoreLikeThisFieldQuery=ruleMoreLikeThisFieldQuery 
	 { $current=$iv_ruleMoreLikeThisFieldQuery.current; } 
	 EOF 
;

// Rule MoreLikeThisFieldQuery
ruleMoreLikeThisFieldQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"mlt_field"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMoreLikeThisFieldQueryAccess().getMlt_fieldKeyword_0_0());
    }

    |	otherlv_1='"more_like_this_field"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMoreLikeThisFieldQueryAccess().getMore_like_this_fieldKeyword_0_1());
    }
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMoreLikeThisFieldQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryAccess().getMoreLikeThisQueryObjectParserRuleCall_2()); 
    }
    this_MoreLikeThisQueryObject_3=ruleMoreLikeThisQueryObject
    { 
        $current = $this_MoreLikeThisQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleMoreLikeThisFieldQueryParameter
entryRuleMoreLikeThisFieldQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterRule()); } 
	 iv_ruleMoreLikeThisFieldQueryParameter=ruleMoreLikeThisFieldQueryParameter 
	 { $current=$iv_ruleMoreLikeThisFieldQueryParameter.current.getText(); }  
	 EOF 
;

// Rule MoreLikeThisFieldQueryParameter
ruleMoreLikeThisFieldQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getPercentTermsToMatchParamParserRuleCall_0()); 
    }
    this_PercentTermsToMatchParam_0=rulePercentTermsToMatchParam    {
		$current.merge(this_PercentTermsToMatchParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getStopWordsParamParserRuleCall_1()); 
    }
    this_StopWordsParam_1=ruleStopWordsParam    {
		$current.merge(this_StopWordsParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getMinDocFreqParamParserRuleCall_2()); 
    }
    this_MinDocFreqParam_2=ruleMinDocFreqParam    {
		$current.merge(this_MinDocFreqParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getMaxDocFreqParamParserRuleCall_3()); 
    }
    this_MaxDocFreqParam_3=ruleMaxDocFreqParam    {
		$current.merge(this_MaxDocFreqParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getMinWordLengthParamParserRuleCall_4()); 
    }
    this_MinWordLengthParam_4=ruleMinWordLengthParam    {
		$current.merge(this_MinWordLengthParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getMaxWordLengthParamParserRuleCall_5()); 
    }
    this_MaxWordLengthParam_5=ruleMaxWordLengthParam    {
		$current.merge(this_MaxWordLengthParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getBoostTermsParamParserRuleCall_6()); 
    }
    this_BoostTermsParam_6=ruleBoostTermsParam    {
		$current.merge(this_BoostTermsParam_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getBoostParamParserRuleCall_7()); 
    }
    this_BoostParam_7=ruleBoostParam    {
		$current.merge(this_BoostParam_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getAnalyzerParamParserRuleCall_8()); 
    }
    this_AnalyzerParam_8=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getMinTermFreqParamParserRuleCall_9()); 
    }
    this_MinTermFreqParam_9=ruleMinTermFreqParam    {
		$current.merge(this_MinTermFreqParam_9);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMoreLikeThisFieldQueryParameterAccess().getMaxQueryTermsParamParserRuleCall_10()); 
    }
    this_MaxQueryTermsParam_10=ruleMaxQueryTermsParam    {
		$current.merge(this_MaxQueryTermsParam_10);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleNestedQuery
entryRuleNestedQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedQueryRule()); }
	 iv_ruleNestedQuery=ruleNestedQuery 
	 { $current=$iv_ruleNestedQuery.current; } 
	 EOF 
;

// Rule NestedQuery
ruleNestedQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"nested"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNestedQueryAccess().getNestedKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNestedQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getNestedQueryAccess().getNestedQueryObjectParserRuleCall_2()); 
    }
    this_NestedQueryObject_2=ruleNestedQueryObject
    { 
        $current = $this_NestedQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNestedQueryObject
entryRuleNestedQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedQueryObjectRule()); }
	 iv_ruleNestedQueryObject=ruleNestedQueryObject 
	 { $current=$iv_ruleNestedQueryObject.current; } 
	 EOF 
;

// Rule NestedQueryObject
ruleNestedQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNestedQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"path"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNestedQueryObjectAccess().getPathKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNestedQueryObjectAccess().getColonKeyword_2());
    }
this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getNestedQueryObjectAccess().getSTRINGTerminalRuleCall_3()); 
    }
	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNestedQueryObjectAccess().getCommaKeyword_4());
    }

    { 
        newCompositeNode(grammarAccess.getNestedQueryObjectAccess().getScoreModeParamParserRuleCall_5()); 
    }
ruleScoreModeParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNestedQueryObjectAccess().getCommaKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getNestedQueryObjectAccess().getQueryParserRuleCall_7()); 
    }
    this_Query_7=ruleQuery
    { 
        $current = $this_Query_7.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNestedQueryObjectAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRulePrefixQuery
entryRulePrefixQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixQueryRule()); }
	 iv_rulePrefixQuery=rulePrefixQuery 
	 { $current=$iv_rulePrefixQuery.current; } 
	 EOF 
;

// Rule PrefixQuery
rulePrefixQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"prefix"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefixQueryAccess().getPrefixKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrefixQueryAccess().getColonKeyword_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getPrefixQueryAccess().getSimplePrefixQueryObjectParserRuleCall_2_0()); 
    }
    this_SimplePrefixQueryObject_2=ruleSimplePrefixQueryObject
    { 
        $current = $this_SimplePrefixQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefixQueryAccess().getPrefixQueryObjectParserRuleCall_2_1()); 
    }
    this_PrefixQueryObject_3=rulePrefixQueryObject
    { 
        $current = $this_PrefixQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleSimplePrefixQueryObject
entryRuleSimplePrefixQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimplePrefixQueryObjectRule()); }
	 iv_ruleSimplePrefixQueryObject=ruleSimplePrefixQueryObject 
	 { $current=$iv_ruleSimplePrefixQueryObject.current; } 
	 EOF 
;

// Rule SimplePrefixQueryObject
ruleSimplePrefixQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimplePrefixQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getSimplePrefixQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimplePrefixQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimplePrefixQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_prefix_3_0=RULE_STRING
		{
			newLeafNode(lv_prefix_3_0, grammarAccess.getSimplePrefixQueryObjectAccess().getPrefixSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimplePrefixQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prefix",
        		lv_prefix_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSimplePrefixQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePrefixQueryObject
entryRulePrefixQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixQueryObjectRule()); }
	 iv_rulePrefixQueryObject=rulePrefixQueryObject 
	 { $current=$iv_rulePrefixQueryObject.current; } 
	 EOF 
;

// Rule PrefixQueryObject
rulePrefixQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefixQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getPrefixQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrefixQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrefixQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrefixQueryObjectAccess().getPrefixPrefixQueryParameterObjectParserRuleCall_3_0()); 
	    }
		lv_prefix_3_0=rulePrefixQueryParameterObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefixQueryObjectRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_3_0, 
        		"PrefixQueryParameterObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrefixQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePrefixQueryParameterObject
entryRulePrefixQueryParameterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixQueryParameterObjectRule()); }
	 iv_rulePrefixQueryParameterObject=rulePrefixQueryParameterObject 
	 { $current=$iv_rulePrefixQueryParameterObject.current; } 
	 EOF 
;

// Rule PrefixQueryParameterObject
rulePrefixQueryParameterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefixQueryParameterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(	otherlv_1='"value"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrefixQueryParameterObjectAccess().getValueKeyword_1_0());
    }

    |	otherlv_2='"prefix"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrefixQueryParameterObjectAccess().getPrefixKeyword_1_1());
    }
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrefixQueryParameterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_value_4_0=RULE_STRING
		{
			newLeafNode(lv_value_4_0, grammarAccess.getPrefixQueryParameterObjectAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrefixQueryParameterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPrefixQueryParameterObjectAccess().getCommaKeyword_4());
    }

    { 
        newCompositeNode(grammarAccess.getPrefixQueryParameterObjectAccess().getBoostParamParserRuleCall_5()); 
    }
ruleBoostParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPrefixQueryParameterObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleQueryStringQuery
entryRuleQueryStringQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryStringQueryRule()); }
	 iv_ruleQueryStringQuery=ruleQueryStringQuery 
	 { $current=$iv_ruleQueryStringQuery.current; } 
	 EOF 
;

// Rule QueryStringQuery
ruleQueryStringQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"query_string"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQueryStringQueryAccess().getQuery_stringKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQueryStringQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQueryStringQueryAccess().getQueryStringQueryObjectParserRuleCall_2()); 
    }
    this_QueryStringQueryObject_2=ruleQueryStringQueryObject
    { 
        $current = $this_QueryStringQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQueryStringQueryObject
entryRuleQueryStringQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryStringQueryObjectRule()); }
	 iv_ruleQueryStringQueryObject=ruleQueryStringQueryObject 
	 { $current=$iv_ruleQueryStringQueryObject.current; } 
	 EOF 
;

// Rule QueryStringQueryObject
ruleQueryStringQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQueryStringQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryObjectAccess().getFieldsParamParserRuleCall_1_0()); 
    }
ruleFieldsParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQueryStringQueryObjectAccess().getCommaKeyword_1_1());
    }
)?	otherlv_3='"query"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQueryStringQueryObjectAccess().getQueryKeyword_2());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQueryStringQueryObjectAccess().getColonKeyword_3());
    }
(
(
		lv_query_5_0=RULE_STRING
		{
			newLeafNode(lv_query_5_0, grammarAccess.getQueryStringQueryObjectAccess().getQuerySTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQueryStringQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"query",
        		lv_query_5_0, 
        		"STRING");
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQueryStringQueryObjectAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryStringQueryObjectAccess().getParamsQueryStringQueryParameterParserRuleCall_5_1_0()); 
	    }
		lv_params_7_0=ruleQueryStringQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryStringQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"QueryStringQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getQueryStringQueryObjectAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQueryStringQueryObjectAccess().getParamsQueryStringQueryParameterParserRuleCall_5_2_1_0()); 
	    }
		lv_params_9_0=ruleQueryStringQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQueryStringQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_9_0, 
        		"QueryStringQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getQueryStringQueryObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleQueryStringQueryParameter
entryRuleQueryStringQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryStringQueryParameterRule()); } 
	 iv_ruleQueryStringQueryParameter=ruleQueryStringQueryParameter 
	 { $current=$iv_ruleQueryStringQueryParameter.current.getText(); }  
	 EOF 
;

// Rule QueryStringQueryParameter
ruleQueryStringQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getFieldsParamParserRuleCall_0()); 
    }
    this_FieldsParam_0=ruleFieldsParam    {
		$current.merge(this_FieldsParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getDefaultFieldParamParserRuleCall_1()); 
    }
    this_DefaultFieldParam_1=ruleDefaultFieldParam    {
		$current.merge(this_DefaultFieldParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getDefaultOperatorParamParserRuleCall_2()); 
    }
    this_DefaultOperatorParam_2=ruleDefaultOperatorParam    {
		$current.merge(this_DefaultOperatorParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getAnalyzerParamParserRuleCall_3()); 
    }
    this_AnalyzerParam_3=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getAllowLeadingWildcardParamParserRuleCall_4()); 
    }
    this_AllowLeadingWildcardParam_4=ruleAllowLeadingWildcardParam    {
		$current.merge(this_AllowLeadingWildcardParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getLowercaseExpandedTermsParamParserRuleCall_5_0()); 
    }
    this_LowercaseExpandedTermsParam_5=ruleLowercaseExpandedTermsParam    {
		$current.merge(this_LowercaseExpandedTermsParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getEnablePositionIncrementsParamParserRuleCall_5_1()); 
    }
    this_EnablePositionIncrementsParam_6=ruleEnablePositionIncrementsParam    {
		$current.merge(this_EnablePositionIncrementsParam_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getFuzzyMaxExpansionsParamParserRuleCall_6()); 
    }
    this_FuzzyMaxExpansionsParam_7=ruleFuzzyMaxExpansionsParam    {
		$current.merge(this_FuzzyMaxExpansionsParam_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getFuzzinessParamParserRuleCall_7()); 
    }
    this_FuzzinessParam_8=ruleFuzzinessParam    {
		$current.merge(this_FuzzinessParam_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getFuzzyPrefixLengthParamParserRuleCall_8()); 
    }
    this_FuzzyPrefixLengthParam_9=ruleFuzzyPrefixLengthParam    {
		$current.merge(this_FuzzyPrefixLengthParam_9);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getPhraseSlopParamParserRuleCall_9()); 
    }
    this_PhraseSlopParam_10=rulePhraseSlopParam    {
		$current.merge(this_PhraseSlopParam_10);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getBoostParamParserRuleCall_10()); 
    }
    this_BoostParam_11=ruleBoostParam    {
		$current.merge(this_BoostParam_11);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getAnalyzeWildcardParamParserRuleCall_11()); 
    }
    this_AnalyzeWildcardParam_12=ruleAnalyzeWildcardParam    {
		$current.merge(this_AnalyzeWildcardParam_12);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getAutoGeneratePhraseQueriesParamParserRuleCall_12()); 
    }
    this_AutoGeneratePhraseQueriesParam_13=ruleAutoGeneratePhraseQueriesParam    {
		$current.merge(this_AutoGeneratePhraseQueriesParam_13);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getMinimumShouldMatchParamParserRuleCall_13()); 
    }
    this_MinimumShouldMatchParam_14=ruleMinimumShouldMatchParam    {
		$current.merge(this_MinimumShouldMatchParam_14);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getLenientParamParserRuleCall_14()); 
    }
    this_LenientParam_15=ruleLenientParam    {
		$current.merge(this_LenientParam_15);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getLocaleParamParserRuleCall_15()); 
    }
    this_LocaleParam_16=ruleLocaleParam    {
		$current.merge(this_LocaleParam_16);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryStringQueryParameterAccess().getUseDisMaxParamParserRuleCall_16()); 
    }
    this_UseDisMaxParam_17=ruleUseDisMaxParam    {
		$current.merge(this_UseDisMaxParam_17);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleSimpleQueryStringQuery
entryRuleSimpleQueryStringQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleQueryStringQueryRule()); }
	 iv_ruleSimpleQueryStringQuery=ruleSimpleQueryStringQuery 
	 { $current=$iv_ruleSimpleQueryStringQuery.current; } 
	 EOF 
;

// Rule SimpleQueryStringQuery
ruleSimpleQueryStringQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"simple_query_string"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleQueryStringQueryAccess().getSimple_query_stringKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleQueryStringQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryAccess().getSimpleQueryStringQueryObjectParserRuleCall_2()); 
    }
    this_SimpleQueryStringQueryObject_2=ruleSimpleQueryStringQueryObject
    { 
        $current = $this_SimpleQueryStringQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleQueryStringQueryObject
entryRuleSimpleQueryStringQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleQueryStringQueryObjectRule()); }
	 iv_ruleSimpleQueryStringQueryObject=ruleSimpleQueryStringQueryObject 
	 { $current=$iv_ruleSimpleQueryStringQueryObject.current; } 
	 EOF 
;

// Rule SimpleQueryStringQueryObject
ruleSimpleQueryStringQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleQueryStringQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"query"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleQueryStringQueryObjectAccess().getQueryKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleQueryStringQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_query_3_0=RULE_STRING
		{
			newLeafNode(lv_query_3_0, grammarAccess.getSimpleQueryStringQueryObjectAccess().getQuerySTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleQueryStringQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"query",
        		lv_query_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSimpleQueryStringQueryObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleQueryStringQueryObjectAccess().getParamsSimpleQueryStringQueryParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleSimpleQueryStringQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleQueryStringQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"SimpleQueryStringQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSimpleQueryStringQueryObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleQueryStringQueryObjectAccess().getParamsSimpleQueryStringQueryParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleSimpleQueryStringQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleQueryStringQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"SimpleQueryStringQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSimpleQueryStringQueryObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSimpleQueryStringQueryParameter
entryRuleSimpleQueryStringQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterRule()); } 
	 iv_ruleSimpleQueryStringQueryParameter=ruleSimpleQueryStringQueryParameter 
	 { $current=$iv_ruleSimpleQueryStringQueryParameter.current.getText(); }  
	 EOF 
;

// Rule SimpleQueryStringQueryParameter
ruleSimpleQueryStringQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterAccess().getFieldsParamParserRuleCall_0()); 
    }
    this_FieldsParam_0=ruleFieldsParam    {
		$current.merge(this_FieldsParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterAccess().getDefaultOperatorParamParserRuleCall_1()); 
    }
    this_DefaultOperatorParam_1=ruleDefaultOperatorParam    {
		$current.merge(this_DefaultOperatorParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterAccess().getAnalyzerParamParserRuleCall_2()); 
    }
    this_AnalyzerParam_2=ruleAnalyzerParam    {
		$current.merge(this_AnalyzerParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterAccess().getFlagsParamParserRuleCall_3()); 
    }
    this_FlagsParam_3=ruleFlagsParam    {
		$current.merge(this_FlagsParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterAccess().getLowercaseExpandedTermsParamParserRuleCall_4()); 
    }
    this_LowercaseExpandedTermsParam_4=ruleLowercaseExpandedTermsParam    {
		$current.merge(this_LowercaseExpandedTermsParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleQueryStringQueryParameterAccess().getLocaleParamParserRuleCall_5()); 
    }
    this_LocaleParam_5=ruleLocaleParam    {
		$current.merge(this_LocaleParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleRangeQuery
entryRuleRangeQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeQueryRule()); }
	 iv_ruleRangeQuery=ruleRangeQuery 
	 { $current=$iv_ruleRangeQuery.current; } 
	 EOF 
;

// Rule RangeQuery
ruleRangeQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"range"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeQueryAccess().getRangeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRangeQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getRangeQueryAccess().getRangeQueryObjectParserRuleCall_2()); 
    }
    this_RangeQueryObject_2=ruleRangeQueryObject
    { 
        $current = $this_RangeQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRangeQueryObject
entryRuleRangeQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeQueryObjectRule()); }
	 iv_ruleRangeQueryObject=ruleRangeQueryObject 
	 { $current=$iv_ruleRangeQueryObject.current; } 
	 EOF 
;

// Rule RangeQueryObject
ruleRangeQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getRangeQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeQueryObjectAccess().getParamsRangeQueryParametersObjectParserRuleCall_3_0()); 
	    }
		lv_params_3_0=ruleRangeQueryParametersObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeQueryObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"RangeQueryParametersObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRangeQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRangeQueryParametersObject
entryRuleRangeQueryParametersObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeQueryParametersObjectRule()); }
	 iv_ruleRangeQueryParametersObject=ruleRangeQueryParametersObject 
	 { $current=$iv_ruleRangeQueryParametersObject.current; } 
	 EOF 
;

// Rule RangeQueryParametersObject
ruleRangeQueryParametersObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeQueryParametersObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeQueryParametersObjectAccess().getParamsRangeQueryParameterParserRuleCall_1_0()); 
	    }
		lv_params_1_0=ruleRangeQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeQueryParametersObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_1_0, 
        		"RangeQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeQueryParametersObjectAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeQueryParametersObjectAccess().getParamsRangeQueryParameterParserRuleCall_2_1_0()); 
	    }
		lv_params_3_0=ruleRangeQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeQueryParametersObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"RangeQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRangeQueryParametersObjectAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleRangeQueryParameter
entryRuleRangeQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeQueryParameterRule()); } 
	 iv_ruleRangeQueryParameter=ruleRangeQueryParameter 
	 { $current=$iv_ruleRangeQueryParameter.current.getText(); }  
	 EOF 
;

// Rule RangeQueryParameter
ruleRangeQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRangeQueryParameterAccess().getGteParamParserRuleCall_0()); 
    }
    this_GteParam_0=ruleGteParam    {
		$current.merge(this_GteParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRangeQueryParameterAccess().getGtParamParserRuleCall_1()); 
    }
    this_GtParam_1=ruleGtParam    {
		$current.merge(this_GtParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRangeQueryParameterAccess().getLtParamParserRuleCall_2()); 
    }
    this_LtParam_2=ruleLtParam    {
		$current.merge(this_LtParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRangeQueryParameterAccess().getLteParamParserRuleCall_3()); 
    }
    this_LteParam_3=ruleLteParam    {
		$current.merge(this_LteParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRangeQueryParameterAccess().getBoostParamParserRuleCall_4()); 
    }
    this_BoostParam_4=ruleBoostParam    {
		$current.merge(this_BoostParam_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleRegexpQuery
entryRuleRegexpQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpQueryRule()); }
	 iv_ruleRegexpQuery=ruleRegexpQuery 
	 { $current=$iv_ruleRegexpQuery.current; } 
	 EOF 
;

// Rule RegexpQuery
ruleRegexpQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"regexp"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegexpQueryAccess().getRegexpKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRegexpQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getRegexpQueryAccess().getRegexpQueryObjectParserRuleCall_2()); 
    }
    this_RegexpQueryObject_2=ruleRegexpQueryObject
    { 
        $current = $this_RegexpQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRegexpQueryObject
entryRuleRegexpQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpQueryObjectRule()); }
	 iv_ruleRegexpQueryObject=ruleRegexpQueryObject 
	 { $current=$iv_ruleRegexpQueryObject.current; } 
	 EOF 
;

// Rule RegexpQueryObject
ruleRegexpQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegexpQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getRegexpQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexpQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRegexpQueryObjectAccess().getColonKeyword_2());
    }
((
(
		lv_regexp_3_0=RULE_STRING
		{
			newLeafNode(lv_regexp_3_0, grammarAccess.getRegexpQueryObjectAccess().getRegexpSTRINGTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexpQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regexp",
        		lv_regexp_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRegexpQueryObjectAccess().getParamsRegexpQueryParameterObjectParserRuleCall_3_1_0()); 
	    }
		lv_params_4_0=ruleRegexpQueryParameterObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegexpQueryObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"RegexpQueryParameterObject");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRegexpQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRegexpQueryParameterObject
entryRuleRegexpQueryParameterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpQueryParameterObjectRule()); }
	 iv_ruleRegexpQueryParameterObject=ruleRegexpQueryParameterObject 
	 { $current=$iv_ruleRegexpQueryParameterObject.current; } 
	 EOF 
;

// Rule RegexpQueryParameterObject
ruleRegexpQueryParameterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegexpQueryParameterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"value"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRegexpQueryParameterObjectAccess().getValueKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRegexpQueryParameterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_regex_3_0=RULE_STRING
		{
			newLeafNode(lv_regex_3_0, grammarAccess.getRegexpQueryParameterObjectAccess().getRegexSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexpQueryParameterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regex",
        		lv_regex_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRegexpQueryParameterObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegexpQueryParameterObjectAccess().getParamsRegexpQueryParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleRegexpQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegexpQueryParameterObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"RegexpQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRegexpQueryParameterObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegexpQueryParameterObjectAccess().getParamsRegexpQueryParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleRegexpQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegexpQueryParameterObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"RegexpQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRegexpQueryParameterObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRegexpQueryParameter
entryRuleRegexpQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpQueryParameterRule()); } 
	 iv_ruleRegexpQueryParameter=ruleRegexpQueryParameter 
	 { $current=$iv_ruleRegexpQueryParameter.current.getText(); }  
	 EOF 
;

// Rule RegexpQueryParameter
ruleRegexpQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRegexpQueryParameterAccess().getBoostParamParserRuleCall_0()); 
    }
    this_BoostParam_0=ruleBoostParam    {
		$current.merge(this_BoostParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRegexpQueryParameterAccess().getFlagsParamParserRuleCall_1()); 
    }
    this_FlagsParam_1=ruleFlagsParam    {
		$current.merge(this_FlagsParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleSpanFirstQuery
entryRuleSpanFirstQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanFirstQueryRule()); }
	 iv_ruleSpanFirstQuery=ruleSpanFirstQuery 
	 { $current=$iv_ruleSpanFirstQuery.current; } 
	 EOF 
;

// Rule SpanFirstQuery
ruleSpanFirstQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"span_first"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanFirstQueryAccess().getSpan_firstKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanFirstQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSpanFirstQueryAccess().getSpanFirstQueryObjectParserRuleCall_2()); 
    }
    this_SpanFirstQueryObject_2=ruleSpanFirstQueryObject
    { 
        $current = $this_SpanFirstQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpanFirstQueryObject
entryRuleSpanFirstQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanFirstQueryObjectRule()); }
	 iv_ruleSpanFirstQueryObject=ruleSpanFirstQueryObject 
	 { $current=$iv_ruleSpanFirstQueryObject.current; } 
	 EOF 
;

// Rule SpanFirstQueryObject
ruleSpanFirstQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanFirstQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"match"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanFirstQueryObjectAccess().getMatchKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpanFirstQueryObjectAccess().getColonKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpanFirstQueryObjectAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanFirstQueryObjectAccess().getSubquerySpanQueryParserRuleCall_4_0()); 
	    }
		lv_subquery_4_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanFirstQueryObjectRule());
	        }
       		set(
       			$current, 
       			"subquery",
        		lv_subquery_4_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpanFirstQueryObjectAccess().getRightCurlyBracketKeyword_5());
    }
	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpanFirstQueryObjectAccess().getCommaKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getSpanFirstQueryObjectAccess().getEndParamParserRuleCall_7()); 
    }
ruleEndParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpanFirstQueryObjectAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleSpanMultiQuery
entryRuleSpanMultiQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanMultiQueryRule()); }
	 iv_ruleSpanMultiQuery=ruleSpanMultiQuery 
	 { $current=$iv_ruleSpanMultiQuery.current; } 
	 EOF 
;

// Rule SpanMultiQuery
ruleSpanMultiQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"span_multi"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanMultiQueryAccess().getSpan_multiKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanMultiQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSpanMultiQueryAccess().getSpanMultiQueryObjectParserRuleCall_2()); 
    }
    this_SpanMultiQueryObject_2=ruleSpanMultiQueryObject
    { 
        $current = $this_SpanMultiQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpanMultiQueryObject
entryRuleSpanMultiQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanMultiQueryObjectRule()); }
	 iv_ruleSpanMultiQueryObject=ruleSpanMultiQueryObject 
	 { $current=$iv_ruleSpanMultiQueryObject.current; } 
	 EOF 
;

// Rule SpanMultiQueryObject
ruleSpanMultiQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanMultiQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"match"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanMultiQueryObjectAccess().getMatchKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpanMultiQueryObjectAccess().getColonKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getSpanMultiQueryObjectAccess().getMultiTermQueryParserRuleCall_3()); 
    }
    this_MultiTermQuery_3=ruleMultiTermQuery
    { 
        $current = $this_MultiTermQuery_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSpanMultiQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSpanNearQuery
entryRuleSpanNearQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanNearQueryRule()); }
	 iv_ruleSpanNearQuery=ruleSpanNearQuery 
	 { $current=$iv_ruleSpanNearQuery.current; } 
	 EOF 
;

// Rule SpanNearQuery
ruleSpanNearQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"span_near"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanNearQueryAccess().getSpan_nearKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanNearQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSpanNearQueryAccess().getSpanNearQueryObjectParserRuleCall_2()); 
    }
    this_SpanNearQueryObject_2=ruleSpanNearQueryObject
    { 
        $current = $this_SpanNearQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpanNearQueryObject
entryRuleSpanNearQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanNearQueryObjectRule()); }
	 iv_ruleSpanNearQueryObject=ruleSpanNearQueryObject 
	 { $current=$iv_ruleSpanNearQueryObject.current; } 
	 EOF 
;

// Rule SpanNearQueryObject
ruleSpanNearQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanNearQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"clauses"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanNearQueryObjectAccess().getClausesKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpanNearQueryObjectAccess().getColonKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpanNearQueryObjectAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNearQueryObjectAccess().getClausesSpanQueryParserRuleCall_4_0()); 
	    }
		lv_clauses_4_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNearQueryObjectRule());
	        }
       		add(
       			$current, 
       			"clauses",
        		lv_clauses_4_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpanNearQueryObjectAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNearQueryObjectAccess().getClausesSpanQueryParserRuleCall_5_1_0()); 
	    }
		lv_clauses_6_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNearQueryObjectRule());
	        }
       		add(
       			$current, 
       			"clauses",
        		lv_clauses_6_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpanNearQueryObjectAccess().getRightSquareBracketKeyword_6());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpanNearQueryObjectAccess().getCommaKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNearQueryObjectAccess().getSlopSlopParamParserRuleCall_8_0()); 
	    }
		lv_slop_9_0=ruleSlopParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNearQueryObjectRule());
	        }
       		set(
       			$current, 
       			"slop",
        		lv_slop_9_0, 
        		"SlopParam");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSpanNearQueryObjectAccess().getCommaKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNearQueryObjectAccess().getInOrderInOrderParamParserRuleCall_10_0()); 
	    }
		lv_inOrder_11_0=ruleInOrderParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNearQueryObjectRule());
	        }
       		set(
       			$current, 
       			"inOrder",
        		lv_inOrder_11_0, 
        		"InOrderParam");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSpanNearQueryObjectAccess().getCommaKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNearQueryObjectAccess().getCollectPayloadsCollectPayloadsParamParserRuleCall_12_0()); 
	    }
		lv_collectPayloads_13_0=ruleCollectPayloadsParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNearQueryObjectRule());
	        }
       		set(
       			$current, 
       			"collectPayloads",
        		lv_collectPayloads_13_0, 
        		"CollectPayloadsParam");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSpanNearQueryObjectAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleSpanNotQuery
entryRuleSpanNotQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanNotQueryRule()); }
	 iv_ruleSpanNotQuery=ruleSpanNotQuery 
	 { $current=$iv_ruleSpanNotQuery.current; } 
	 EOF 
;

// Rule SpanNotQuery
ruleSpanNotQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"span_not"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanNotQueryAccess().getSpan_notKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanNotQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSpanNotQueryAccess().getSpanNotQueryObjectParserRuleCall_2()); 
    }
    this_SpanNotQueryObject_2=ruleSpanNotQueryObject
    { 
        $current = $this_SpanNotQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpanNotQueryObject
entryRuleSpanNotQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanNotQueryObjectRule()); }
	 iv_ruleSpanNotQueryObject=ruleSpanNotQueryObject 
	 { $current=$iv_ruleSpanNotQueryObject.current; } 
	 EOF 
;

// Rule SpanNotQueryObject
ruleSpanNotQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanNotQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"include"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanNotQueryObjectAccess().getIncludeKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpanNotQueryObjectAccess().getColonKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpanNotQueryObjectAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNotQueryObjectAccess().getIncludeQuerySpanQueryParserRuleCall_4_0()); 
	    }
		lv_includeQuery_4_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNotQueryObjectRule());
	        }
       		set(
       			$current, 
       			"includeQuery",
        		lv_includeQuery_4_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpanNotQueryObjectAccess().getRightCurlyBracketKeyword_5());
    }
	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpanNotQueryObjectAccess().getCommaKeyword_6());
    }
	otherlv_7='"exclude"' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpanNotQueryObjectAccess().getExcludeKeyword_7());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpanNotQueryObjectAccess().getColonKeyword_8());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSpanNotQueryObjectAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanNotQueryObjectAccess().getExcludeQuerySpanQueryParserRuleCall_10_0()); 
	    }
		lv_excludeQuery_10_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanNotQueryObjectRule());
	        }
       		set(
       			$current, 
       			"excludeQuery",
        		lv_excludeQuery_10_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSpanNotQueryObjectAccess().getRightCurlyBracketKeyword_11());
    }
	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSpanNotQueryObjectAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleSpanOrQuery
entryRuleSpanOrQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanOrQueryRule()); }
	 iv_ruleSpanOrQuery=ruleSpanOrQuery 
	 { $current=$iv_ruleSpanOrQuery.current; } 
	 EOF 
;

// Rule SpanOrQuery
ruleSpanOrQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"span_or"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanOrQueryAccess().getSpan_orKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanOrQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSpanOrQueryAccess().getSpanOrQueryObjectParserRuleCall_2()); 
    }
    this_SpanOrQueryObject_2=ruleSpanOrQueryObject
    { 
        $current = $this_SpanOrQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpanOrQueryObject
entryRuleSpanOrQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanOrQueryObjectRule()); }
	 iv_ruleSpanOrQueryObject=ruleSpanOrQueryObject 
	 { $current=$iv_ruleSpanOrQueryObject.current; } 
	 EOF 
;

// Rule SpanOrQueryObject
ruleSpanOrQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanOrQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"clauses"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanOrQueryObjectAccess().getClausesKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpanOrQueryObjectAccess().getColonKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSpanOrQueryObjectAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanOrQueryObjectAccess().getClausesSpanQueryParserRuleCall_4_0()); 
	    }
		lv_clauses_4_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanOrQueryObjectRule());
	        }
       		add(
       			$current, 
       			"clauses",
        		lv_clauses_4_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpanOrQueryObjectAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanOrQueryObjectAccess().getClausesSpanQueryParserRuleCall_5_1_0()); 
	    }
		lv_clauses_6_0=ruleSpanQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanOrQueryObjectRule());
	        }
       		add(
       			$current, 
       			"clauses",
        		lv_clauses_6_0, 
        		"SpanQuery");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSpanOrQueryObjectAccess().getRightSquareBracketKeyword_6());
    }
	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpanOrQueryObjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSpanTermQuery
entryRuleSpanTermQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanTermQueryRule()); }
	 iv_ruleSpanTermQuery=ruleSpanTermQuery 
	 { $current=$iv_ruleSpanTermQuery.current; } 
	 EOF 
;

// Rule SpanTermQuery
ruleSpanTermQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"span_term"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanTermQueryAccess().getSpan_termKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpanTermQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getSpanTermQueryAccess().getSpanTermQueryObjectParserRuleCall_2()); 
    }
    this_SpanTermQueryObject_2=ruleSpanTermQueryObject
    { 
        $current = $this_SpanTermQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSpanTermQueryObject
entryRuleSpanTermQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpanTermQueryObjectRule()); }
	 iv_ruleSpanTermQueryObject=ruleSpanTermQueryObject 
	 { $current=$iv_ruleSpanTermQueryObject.current; } 
	 EOF 
;

// Rule SpanTermQueryObject
ruleSpanTermQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpanTermQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getSpanTermQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpanTermQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpanTermQueryObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpanTermQueryObjectAccess().getParamsTermQueryObjectParserRuleCall_3_0()); 
	    }
		lv_params_3_0=ruleTermQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpanTermQueryObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"TermQueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSpanTermQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTermQuery
entryRuleTermQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermQueryRule()); }
	 iv_ruleTermQuery=ruleTermQuery 
	 { $current=$iv_ruleTermQuery.current; } 
	 EOF 
;

// Rule TermQuery
ruleTermQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"term"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermQueryAccess().getTermKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTermQueryAccess().getTermQueryObjectParserRuleCall_2()); 
    }
    this_TermQueryObject_2=ruleTermQueryObject
    { 
        $current = $this_TermQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTermQueryObject
entryRuleTermQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermQueryObjectRule()); }
	 iv_ruleTermQueryObject=ruleTermQueryObject 
	 { $current=$iv_ruleTermQueryObject.current; } 
	 EOF 
;

// Rule TermQueryObject
ruleTermQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getTermQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermQueryObjectAccess().getColonKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermQueryObjectAccess().getTermSimpleTermParserRuleCall_3_0_0()); 
	    }
		lv_term_3_0=ruleSimpleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermQueryObjectRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_3_0, 
        		"SimpleTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermQueryObjectAccess().getParamsTermQueryParametersObjectParserRuleCall_3_1_0()); 
	    }
		lv_params_4_0=ruleTermQueryParametersObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermQueryObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"TermQueryParametersObject");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTermQueryObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSimpleTerm
entryRuleSimpleTerm returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleTermRule()); } 
	 iv_ruleSimpleTerm=ruleSimpleTerm 
	 { $current=$iv_ruleSimpleTerm.current.getText(); }  
	 EOF 
;

// Rule SimpleTerm
ruleSimpleTerm returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getSimpleTermAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleTermQueryParametersObject
entryRuleTermQueryParametersObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermQueryParametersObjectRule()); }
	 iv_ruleTermQueryParametersObject=ruleTermQueryParametersObject 
	 { $current=$iv_ruleTermQueryParametersObject.current; } 
	 EOF 
;

// Rule TermQueryParametersObject
ruleTermQueryParametersObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermQueryParametersObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(	otherlv_1='"term"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermQueryParametersObjectAccess().getTermKeyword_1_0());
    }

    |	otherlv_2='"value"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermQueryParametersObjectAccess().getValueKeyword_1_1());
    }
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTermQueryParametersObjectAccess().getColonKeyword_2());
    }
(
(
		lv_term_4_0=RULE_STRING
		{
			newLeafNode(lv_term_4_0, grammarAccess.getTermQueryParametersObjectAccess().getTermSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermQueryParametersObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTermQueryParametersObjectAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermQueryParametersObjectAccess().getBoostBoostParamParserRuleCall_5_0()); 
	    }
		lv_boost_6_0=ruleBoostParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermQueryParametersObjectRule());
	        }
       		set(
       			$current, 
       			"boost",
        		lv_boost_6_0, 
        		"BoostParam");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTermQueryParametersObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTermsQuery
entryRuleTermsQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsQueryRule()); }
	 iv_ruleTermsQuery=ruleTermsQuery 
	 { $current=$iv_ruleTermsQuery.current; } 
	 EOF 
;

// Rule TermsQuery
ruleTermsQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"in"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsQueryAccess().getInKeyword_0_0());
    }

    |	otherlv_1='"terms"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermsQueryAccess().getTermsKeyword_0_1());
    }
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermsQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTermsQueryAccess().getTermsQueryObjectParserRuleCall_2()); 
    }
    this_TermsQueryObject_3=ruleTermsQueryObject
    { 
        $current = $this_TermsQueryObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTermsQueryObject
entryRuleTermsQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsQueryObjectRule()); }
	 iv_ruleTermsQueryObject=ruleTermsQueryObject 
	 { $current=$iv_ruleTermsQueryObject.current; } 
	 EOF 
;

// Rule TermsQueryObject
ruleTermsQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getTermsQueryObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermsQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermsQueryObjectAccess().getColonKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTermsQueryObjectAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		lv_terms_4_0=RULE_STRING
		{
			newLeafNode(lv_terms_4_0, grammarAccess.getTermsQueryObjectAccess().getTermsSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermsQueryObjectRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"terms",
        		lv_terms_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTermsQueryObjectAccess().getCommaKeyword_5_0());
    }
(
(
		lv_terms_6_0=RULE_STRING
		{
			newLeafNode(lv_terms_6_0, grammarAccess.getTermsQueryObjectAccess().getTermsSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermsQueryObjectRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"terms",
        		lv_terms_6_0, 
        		"STRING");
	    }

)
))*	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTermsQueryObjectAccess().getRightSquareBracketKeyword_6());
    }
	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTermsQueryObjectAccess().getCommaKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getTermsQueryObjectAccess().getMinimumShouldMatchParamParserRuleCall_8()); 
    }
ruleMinimumShouldMatchParam
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTermsQueryObjectAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleTopChildrenQuery
entryRuleTopChildrenQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopChildrenQueryRule()); }
	 iv_ruleTopChildrenQuery=ruleTopChildrenQuery 
	 { $current=$iv_ruleTopChildrenQuery.current; } 
	 EOF 
;

// Rule TopChildrenQuery
ruleTopChildrenQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"top_children"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTopChildrenQueryAccess().getTop_childrenKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTopChildrenQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTopChildrenQueryAccess().getTopChildrenQueryObjectParserRuleCall_2()); 
    }
    this_TopChildrenQueryObject_2=ruleTopChildrenQueryObject
    { 
        $current = $this_TopChildrenQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTopChildrenQueryObject
entryRuleTopChildrenQueryObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopChildrenQueryObjectRule()); }
	 iv_ruleTopChildrenQueryObject=ruleTopChildrenQueryObject 
	 { $current=$iv_ruleTopChildrenQueryObject.current; } 
	 EOF 
;

// Rule TopChildrenQueryObject
ruleTopChildrenQueryObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTopChildrenQueryObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"type"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTopChildrenQueryObjectAccess().getTypeKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTopChildrenQueryObjectAccess().getColonKeyword_2());
    }
(
(
		lv_childType_3_0=RULE_STRING
		{
			newLeafNode(lv_childType_3_0, grammarAccess.getTopChildrenQueryObjectAccess().getChildTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopChildrenQueryObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"childType",
        		lv_childType_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTopChildrenQueryObjectAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTopChildrenQueryObjectAccess().getQueryQueryParserRuleCall_5_0()); 
	    }
		lv_query_5_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopChildrenQueryObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_5_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTopChildrenQueryObjectAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTopChildrenQueryObjectAccess().getParamsTopChildrenQueryParameterParserRuleCall_6_1_0()); 
	    }
		lv_params_7_0=ruleTopChildrenQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopChildrenQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"TopChildrenQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTopChildrenQueryObjectAccess().getCommaKeyword_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTopChildrenQueryObjectAccess().getParamsTopChildrenQueryParameterParserRuleCall_6_2_1_0()); 
	    }
		lv_params_9_0=ruleTopChildrenQueryParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopChildrenQueryObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_9_0, 
        		"TopChildrenQueryParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTopChildrenQueryObjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTopChildrenQueryParameter
entryRuleTopChildrenQueryParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopChildrenQueryParameterRule()); } 
	 iv_ruleTopChildrenQueryParameter=ruleTopChildrenQueryParameter 
	 { $current=$iv_ruleTopChildrenQueryParameter.current.getText(); }  
	 EOF 
;

// Rule TopChildrenQueryParameter
ruleTopChildrenQueryParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTopChildrenQueryParameterAccess().getScoreParamParserRuleCall_0()); 
    }
    this_ScoreParam_0=ruleScoreParam    {
		$current.merge(this_ScoreParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopChildrenQueryParameterAccess().getFactorParamParserRuleCall_1()); 
    }
    this_FactorParam_1=ruleFactorParam    {
		$current.merge(this_FactorParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopChildrenQueryParameterAccess().getIncrementalFactorParamParserRuleCall_2()); 
    }
    this_IncrementalFactorParam_2=ruleIncrementalFactorParam    {
		$current.merge(this_IncrementalFactorParam_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleWildcardQuery
entryRuleWildcardQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWildcardQueryRule()); }
	 iv_ruleWildcardQuery=ruleWildcardQuery 
	 { $current=$iv_ruleWildcardQuery.current; } 
	 EOF 
;

// Rule WildcardQuery
ruleWildcardQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"wildcard"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWildcardQueryAccess().getWildcardKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWildcardQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getWildcardQueryAccess().getTermQueryObjectParserRuleCall_2()); 
    }
    this_TermQueryObject_2=ruleTermQueryObject
    { 
        $current = $this_TermQueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAndFilter
entryRuleAndFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndFilterRule()); }
	 iv_ruleAndFilter=ruleAndFilter 
	 { $current=$iv_ruleAndFilter.current; } 
	 EOF 
;

// Rule AndFilter
ruleAndFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"and"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAndFilterAccess().getAndKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAndFilterAccess().getColonKeyword_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getAndFilterAccess().getSimpleAndFilterArrayParserRuleCall_2_0()); 
    }
    this_SimpleAndFilterArray_2=ruleSimpleAndFilterArray
    { 
        $current = $this_SimpleAndFilterArray_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAndFilterAccess().getAndFilterObjectParserRuleCall_2_1()); 
    }
    this_AndFilterObject_3=ruleAndFilterObject
    { 
        $current = $this_AndFilterObject_3.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleSimpleAndFilterArray
entryRuleSimpleAndFilterArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleAndFilterArrayRule()); }
	 iv_ruleSimpleAndFilterArray=ruleSimpleAndFilterArray 
	 { $current=$iv_ruleSimpleAndFilterArray.current; } 
	 EOF 
;

// Rule SimpleAndFilterArray
ruleSimpleAndFilterArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleAndFilterArrayAccess().getLeftSquareBracketKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleAndFilterArrayAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleAndFilterArrayAccess().getSubFilterFilterParserRuleCall_2_0()); 
	    }
		lv_subFilter_2_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleAndFilterArrayRule());
	        }
       		add(
       			$current, 
       			"subFilter",
        		lv_subFilter_2_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleAndFilterArrayAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleAndFilterArrayAccess().getSubFilterFilterParserRuleCall_3_1_0()); 
	    }
		lv_subFilter_4_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleAndFilterArrayRule());
	        }
       		add(
       			$current, 
       			"subFilter",
        		lv_subFilter_4_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleAndFilterArrayAccess().getRightCurlyBracketKeyword_4());
    }
	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSimpleAndFilterArrayAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAndFilterObject
entryRuleAndFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndFilterObjectRule()); }
	 iv_ruleAndFilterObject=ruleAndFilterObject 
	 { $current=$iv_ruleAndFilterObject.current; } 
	 EOF 
;

// Rule AndFilterObject
ruleAndFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAndFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"filters"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAndFilterObjectAccess().getFiltersKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAndFilterObjectAccess().getColonKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getAndFilterObjectAccess().getSimpleAndFilterArrayParserRuleCall_3()); 
    }
    this_SimpleAndFilterArray_3=ruleSimpleAndFilterArray
    { 
        $current = $this_SimpleAndFilterArray_3.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAndFilterObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getAndFilterObjectAccess().getCacheParamParserRuleCall_4_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAndFilterObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleBoolFilter
entryRuleBoolFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolFilterRule()); }
	 iv_ruleBoolFilter=ruleBoolFilter 
	 { $current=$iv_ruleBoolFilter.current; } 
	 EOF 
;

// Rule BoolFilter
ruleBoolFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"bool"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolFilterAccess().getBoolKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoolFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getBoolFilterAccess().getBoolFilterObjectParserRuleCall_2()); 
    }
    this_BoolFilterObject_2=ruleBoolFilterObject
    { 
        $current = $this_BoolFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBoolFilterObject
entryRuleBoolFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolFilterObjectRule()); }
	 iv_ruleBoolFilterObject=ruleBoolFilterObject 
	 { $current=$iv_ruleBoolFilterObject.current; } 
	 EOF 
;

// Rule BoolFilterObject
ruleBoolFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoolFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolFilterObjectAccess().getClauseBoolFilterClauseParserRuleCall_1_0()); 
	    }
		lv_clause_1_0=ruleBoolFilterClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolFilterObjectRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_1_0, 
        		"BoolFilterClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBoolFilterObjectAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolFilterObjectAccess().getClauseBoolFilterClauseParserRuleCall_2_1_0()); 
	    }
		lv_clause_3_0=ruleBoolFilterClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolFilterObjectRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_3_0, 
        		"BoolFilterClause");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBoolFilterObjectAccess().getCommaKeyword_3_0());
    }

    { 
        newCompositeNode(grammarAccess.getBoolFilterObjectAccess().getCacheParamParserRuleCall_3_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBoolFilterObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleBoolFilterClause
entryRuleBoolFilterClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolFilterClauseRule()); }
	 iv_ruleBoolFilterClause=ruleBoolFilterClause 
	 { $current=$iv_ruleBoolFilterClause.current; } 
	 EOF 
;

// Rule BoolFilterClause
ruleBoolFilterClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_BOOL_CLAUSE_0=RULE_BOOL_CLAUSE
    { 
    newLeafNode(this_BOOL_CLAUSE_0, grammarAccess.getBoolFilterClauseAccess().getBOOL_CLAUSETerminalRuleCall_0()); 
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoolFilterClauseAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolFilterClauseAccess().getFilterFilterObjectParserRuleCall_2_0()); 
	    }
		lv_filter_2_0=ruleFilterObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolFilterClauseRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_2_0, 
        		"FilterObject");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExistsFilter
entryRuleExistsFilter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistsFilterRule()); } 
	 iv_ruleExistsFilter=ruleExistsFilter 
	 { $current=$iv_ruleExistsFilter.current.getText(); }  
	 EOF 
;

// Rule ExistsFilter
ruleExistsFilter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"exists"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExistsFilterAccess().getExistsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExistsFilterAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getExistsFilterAccess().getExistsFilterObjectParserRuleCall_2()); 
    }
    this_ExistsFilterObject_2=ruleExistsFilterObject    {
		$current.merge(this_ExistsFilterObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleExistsFilterObject
entryRuleExistsFilterObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getExistsFilterObjectRule()); } 
	 iv_ruleExistsFilterObject=ruleExistsFilterObject 
	 { $current=$iv_ruleExistsFilterObject.current.getText(); }  
	 EOF 
;

// Rule ExistsFilterObject
ruleExistsFilterObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExistsFilterObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getExistsFilterObjectAccess().getFieldParamParserRuleCall_1()); 
    }
    this_FieldParam_1=ruleFieldParam    {
		$current.merge(this_FieldParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getExistsFilterObjectAccess().getRightCurlyBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleGeoBoundingBoxFilter
entryRuleGeoBoundingBoxFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoBoundingBoxFilterRule()); }
	 iv_ruleGeoBoundingBoxFilter=ruleGeoBoundingBoxFilter 
	 { $current=$iv_ruleGeoBoundingBoxFilter.current; } 
	 EOF 
;

// Rule GeoBoundingBoxFilter
ruleGeoBoundingBoxFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_bounding_box"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoBoundingBoxFilterAccess().getGeo_bounding_boxKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoBoundingBoxFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoBoundingBoxFilterAccess().getGeoBoundingBoxFilterObjectParserRuleCall_2()); 
    }
    this_GeoBoundingBoxFilterObject_2=ruleGeoBoundingBoxFilterObject
    { 
        $current = $this_GeoBoundingBoxFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoBoundingBoxFilterObject
entryRuleGeoBoundingBoxFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoBoundingBoxFilterObjectRule()); }
	 iv_ruleGeoBoundingBoxFilterObject=ruleGeoBoundingBoxFilterObject 
	 { $current=$iv_ruleGeoBoundingBoxFilterObject.current; } 
	 EOF 
;

// Rule GeoBoundingBoxFilterObject
ruleGeoBoundingBoxFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoBoundingBoxFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getGeoBoundingBoxFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoBoundingBoxFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoBoundingBoxFilterObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoBoundingBoxFilterObjectAccess().getBoundingBoxBoundingBoxObjectParserRuleCall_3_0()); 
	    }
		lv_boundingBox_3_0=ruleBoundingBoxObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoBoundingBoxFilterObjectRule());
	        }
       		set(
       			$current, 
       			"boundingBox",
        		lv_boundingBox_3_0, 
        		"BoundingBoxObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoBoundingBoxFilterObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getGeoBoundingBoxFilterObjectAccess().getTypeParamParserRuleCall_4_1()); 
    }
ruleTypeParam
    { 
        afterParserOrEnumRuleCall();
    }
)?(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGeoBoundingBoxFilterObjectAccess().getCommaKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getGeoBoundingBoxFilterObjectAccess().getCacheParamParserRuleCall_5_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGeoBoundingBoxFilterObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleGeoDistanceFilter
entryRuleGeoDistanceFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceFilterRule()); }
	 iv_ruleGeoDistanceFilter=ruleGeoDistanceFilter 
	 { $current=$iv_ruleGeoDistanceFilter.current; } 
	 EOF 
;

// Rule GeoDistanceFilter
ruleGeoDistanceFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_distance"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoDistanceFilterAccess().getGeo_distanceKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoDistanceFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoDistanceFilterAccess().getGeoDistanceFilterObjectParserRuleCall_2()); 
    }
    this_GeoDistanceFilterObject_2=ruleGeoDistanceFilterObject
    { 
        $current = $this_GeoDistanceFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoDistanceFilterObject
entryRuleGeoDistanceFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceFilterObjectRule()); }
	 iv_ruleGeoDistanceFilterObject=ruleGeoDistanceFilterObject 
	 { $current=$iv_ruleGeoDistanceFilterObject.current; } 
	 EOF 
;

// Rule GeoDistanceFilterObject
ruleGeoDistanceFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoDistanceFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"distance"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoDistanceFilterObjectAccess().getDistanceKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoDistanceFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_distance_3_0=RULE_STRING
		{
			newLeafNode(lv_distance_3_0, grammarAccess.getGeoDistanceFilterObjectAccess().getDistanceSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoDistanceFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"distance",
        		lv_distance_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoDistanceFilterObjectAccess().getCommaKeyword_4());
    }
(
(
		lv_fieldName_5_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_5_0, grammarAccess.getGeoDistanceFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoDistanceFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_5_0, 
        		"STRING");
	    }

)
)	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGeoDistanceFilterObjectAccess().getColonKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoDistanceFilterObjectAccess().getPointLatLonParserRuleCall_7_0()); 
	    }
		lv_point_7_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoDistanceFilterObjectRule());
	        }
       		set(
       			$current, 
       			"point",
        		lv_point_7_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGeoDistanceFilterObjectAccess().getCommaKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoDistanceFilterObjectAccess().getParamsGeoDistanceFilterParameterParserRuleCall_8_1_0()); 
	    }
		lv_params_9_0=ruleGeoDistanceFilterParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoDistanceFilterObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_9_0, 
        		"GeoDistanceFilterParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGeoDistanceFilterObjectAccess().getCommaKeyword_8_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoDistanceFilterObjectAccess().getParamsGeoDistanceFilterParameterParserRuleCall_8_2_1_0()); 
	    }
		lv_params_11_0=ruleGeoDistanceFilterParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoDistanceFilterObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_11_0, 
        		"GeoDistanceFilterParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGeoDistanceFilterObjectAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleGeoDistanceFilterParameter
entryRuleGeoDistanceFilterParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceFilterParameterRule()); } 
	 iv_ruleGeoDistanceFilterParameter=ruleGeoDistanceFilterParameter 
	 { $current=$iv_ruleGeoDistanceFilterParameter.current.getText(); }  
	 EOF 
;

// Rule GeoDistanceFilterParameter
ruleGeoDistanceFilterParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGeoDistanceFilterParameterAccess().getDistanceTypeParamParserRuleCall_0()); 
    }
    this_DistanceTypeParam_0=ruleDistanceTypeParam    {
		$current.merge(this_DistanceTypeParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGeoDistanceFilterParameterAccess().getOptimizeBboxParamParserRuleCall_1()); 
    }
    this_OptimizeBboxParam_1=ruleOptimizeBboxParam    {
		$current.merge(this_OptimizeBboxParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleGeoDistanceRangeFilter
entryRuleGeoDistanceRangeFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceRangeFilterRule()); }
	 iv_ruleGeoDistanceRangeFilter=ruleGeoDistanceRangeFilter 
	 { $current=$iv_ruleGeoDistanceRangeFilter.current; } 
	 EOF 
;

// Rule GeoDistanceRangeFilter
ruleGeoDistanceRangeFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_distance_range"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoDistanceRangeFilterAccess().getGeo_distance_rangeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoDistanceRangeFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoDistanceRangeFilterAccess().getGeoDistanceRangeFilterObjectParserRuleCall_2()); 
    }
    this_GeoDistanceRangeFilterObject_2=ruleGeoDistanceRangeFilterObject
    { 
        $current = $this_GeoDistanceRangeFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoDistanceRangeFilterObject
entryRuleGeoDistanceRangeFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoDistanceRangeFilterObjectRule()); }
	 iv_ruleGeoDistanceRangeFilterObject=ruleGeoDistanceRangeFilterObject 
	 { $current=$iv_ruleGeoDistanceRangeFilterObject.current; } 
	 EOF 
;

// Rule GeoDistanceRangeFilterObject
ruleGeoDistanceRangeFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"from"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getFromKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_from_3_0=RULE_STRING
		{
			newLeafNode(lv_from_3_0, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getFromSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoDistanceRangeFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getCommaKeyword_4());
    }
	otherlv_5='"to"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getToKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getColonKeyword_6());
    }
(
(
		lv_to_7_0=RULE_STRING
		{
			newLeafNode(lv_to_7_0, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getToSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoDistanceRangeFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"to",
        		lv_to_7_0, 
        		"STRING");
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getCommaKeyword_8());
    }
(
(
		lv_fieldName_9_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_9_0, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoDistanceRangeFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_9_0, 
        		"STRING");
	    }

)
)	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getColonKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoDistanceRangeFilterObjectAccess().getPointLatLonParserRuleCall_11_0()); 
	    }
		lv_point_11_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoDistanceRangeFilterObjectRule());
	        }
       		set(
       			$current, 
       			"point",
        		lv_point_11_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGeoDistanceRangeFilterObjectAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleGeoPolygonFilter
entryRuleGeoPolygonFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoPolygonFilterRule()); }
	 iv_ruleGeoPolygonFilter=ruleGeoPolygonFilter 
	 { $current=$iv_ruleGeoPolygonFilter.current; } 
	 EOF 
;

// Rule GeoPolygonFilter
ruleGeoPolygonFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_polygon"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoPolygonFilterAccess().getGeo_polygonKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoPolygonFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoPolygonFilterAccess().getGeoPolygonFilterObjectParserRuleCall_2()); 
    }
    this_GeoPolygonFilterObject_2=ruleGeoPolygonFilterObject
    { 
        $current = $this_GeoPolygonFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoPolygonFilterObject
entryRuleGeoPolygonFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoPolygonFilterObjectRule()); }
	 iv_ruleGeoPolygonFilterObject=ruleGeoPolygonFilterObject 
	 { $current=$iv_ruleGeoPolygonFilterObject.current; } 
	 EOF 
;

// Rule GeoPolygonFilterObject
ruleGeoPolygonFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoPolygonFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getGeoPolygonFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoPolygonFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoPolygonFilterObjectAccess().getColonKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGeoPolygonFilterObjectAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='"points"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoPolygonFilterObjectAccess().getPointsKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGeoPolygonFilterObjectAccess().getColonKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoPolygonFilterObjectAccess().getPolygonPolygonParserRuleCall_6_0()); 
	    }
		lv_polygon_6_0=rulePolygon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoPolygonFilterObjectRule());
	        }
       		set(
       			$current, 
       			"polygon",
        		lv_polygon_6_0, 
        		"Polygon");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGeoPolygonFilterObjectAccess().getRightCurlyBracketKeyword_7());
    }
(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGeoPolygonFilterObjectAccess().getCommaKeyword_8_0());
    }

    { 
        newCompositeNode(grammarAccess.getGeoPolygonFilterObjectAccess().getCacheParamParserRuleCall_8_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGeoPolygonFilterObjectAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleGeoShapeFilter
entryRuleGeoShapeFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoShapeFilterRule()); }
	 iv_ruleGeoShapeFilter=ruleGeoShapeFilter 
	 { $current=$iv_ruleGeoShapeFilter.current; } 
	 EOF 
;

// Rule GeoShapeFilter
ruleGeoShapeFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geo_shape"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoShapeFilterAccess().getGeo_shapeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeoShapeFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeoShapeFilterAccess().getGeoShapeFilterObjectParserRuleCall_2()); 
    }
    this_GeoShapeFilterObject_2=ruleGeoShapeFilterObject
    { 
        $current = $this_GeoShapeFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeoShapeFilterObject
entryRuleGeoShapeFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoShapeFilterObjectRule()); }
	 iv_ruleGeoShapeFilterObject=ruleGeoShapeFilterObject 
	 { $current=$iv_ruleGeoShapeFilterObject.current; } 
	 EOF 
;

// Rule GeoShapeFilterObject
ruleGeoShapeFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoShapeFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getGeoShapeFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGeoShapeFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoShapeFilterObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoShapeFilterObjectAccess().getShapeGeoShapeObjectParserRuleCall_3_0()); 
	    }
		lv_shape_3_0=ruleGeoShapeObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoShapeFilterObjectRule());
	        }
       		set(
       			$current, 
       			"shape",
        		lv_shape_3_0, 
        		"GeoShapeObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeoShapeFilterObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getGeoShapeFilterObjectAccess().getCacheParamParserRuleCall_4_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGeoShapeFilterObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleGeohashCellFilter
entryRuleGeohashCellFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeohashCellFilterRule()); }
	 iv_ruleGeohashCellFilter=ruleGeohashCellFilter 
	 { $current=$iv_ruleGeohashCellFilter.current; } 
	 EOF 
;

// Rule GeohashCellFilter
ruleGeohashCellFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"geohash_cell"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeohashCellFilterAccess().getGeohash_cellKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeohashCellFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getGeohashCellFilterAccess().getGeohashCellFilterObjectParserRuleCall_2()); 
    }
    this_GeohashCellFilterObject_2=ruleGeohashCellFilterObject
    { 
        $current = $this_GeohashCellFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleGeohashCellFilterObject
entryRuleGeohashCellFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeohashCellFilterObjectRule()); }
	 iv_ruleGeohashCellFilterObject=ruleGeohashCellFilterObject 
	 { $current=$iv_ruleGeohashCellFilterObject.current; } 
	 EOF 
;

// Rule GeohashCellFilterObject
ruleGeohashCellFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeohashCellFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"pin"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGeohashCellFilterObjectAccess().getPinKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeohashCellFilterObjectAccess().getColonKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getGeohashCellFilterObjectAccess().getLatLonParserRuleCall_3()); 
    }
    this_LatLon_3=ruleLatLon
    { 
        $current = $this_LatLon_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGeohashCellFilterObjectAccess().getCommaKeyword_4());
    }
	otherlv_5='"precision"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGeohashCellFilterObjectAccess().getPrecisionKeyword_5());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGeohashCellFilterObjectAccess().getColonKeyword_6());
    }
(
    { 
        newCompositeNode(grammarAccess.getGeohashCellFilterObjectAccess().getNUMBERParserRuleCall_7_0()); 
    }
ruleNUMBER
    { 
        afterParserOrEnumRuleCall();
    }

    |this_STRING_8=RULE_STRING
    { 
    newLeafNode(this_STRING_8, grammarAccess.getGeohashCellFilterObjectAccess().getSTRINGTerminalRuleCall_7_1()); 
    }
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGeohashCellFilterObjectAccess().getCommaKeyword_8_0());
    }
	otherlv_10='"neighbors"' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGeohashCellFilterObjectAccess().getNeighborsKeyword_8_1());
    }
	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGeohashCellFilterObjectAccess().getColonKeyword_8_2());
    }
this_BOOLEAN_12=RULE_BOOLEAN
    { 
    newLeafNode(this_BOOLEAN_12, grammarAccess.getGeohashCellFilterObjectAccess().getBOOLEANTerminalRuleCall_8_3()); 
    }
)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGeohashCellFilterObjectAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleHasChildFilter
entryRuleHasChildFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasChildFilterRule()); }
	 iv_ruleHasChildFilter=ruleHasChildFilter 
	 { $current=$iv_ruleHasChildFilter.current; } 
	 EOF 
;

// Rule HasChildFilter
ruleHasChildFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"has_child"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasChildFilterAccess().getHas_childKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasChildFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getHasChildFilterAccess().getHasChildFilterObjectParserRuleCall_2()); 
    }
    this_HasChildFilterObject_2=ruleHasChildFilterObject
    { 
        $current = $this_HasChildFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHasChildFilterObject
entryRuleHasChildFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasChildFilterObjectRule()); }
	 iv_ruleHasChildFilterObject=ruleHasChildFilterObject 
	 { $current=$iv_ruleHasChildFilterObject.current; } 
	 EOF 
;

// Rule HasChildFilterObject
ruleHasChildFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasChildFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='""type""' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasChildFilterObjectAccess().getTypeKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHasChildFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_childType_3_0=RULE_STRING
		{
			newLeafNode(lv_childType_3_0, grammarAccess.getHasChildFilterObjectAccess().getChildTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasChildFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"childType",
        		lv_childType_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHasChildFilterObjectAccess().getCommaKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getHasChildFilterObjectAccess().getQueryQueryParserRuleCall_5_0_0()); 
	    }
		lv_query_5_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasChildFilterObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_5_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHasChildFilterObjectAccess().getFilterFilterParserRuleCall_5_1_0()); 
	    }
		lv_filter_6_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasChildFilterObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_6_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getHasChildFilterObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleHasParentFilter
entryRuleHasParentFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasParentFilterRule()); }
	 iv_ruleHasParentFilter=ruleHasParentFilter 
	 { $current=$iv_ruleHasParentFilter.current; } 
	 EOF 
;

// Rule HasParentFilter
ruleHasParentFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"has_parent"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasParentFilterAccess().getHas_parentKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasParentFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getHasParentFilterAccess().getHasParentFilterObjectParserRuleCall_2()); 
    }
    this_HasParentFilterObject_2=ruleHasParentFilterObject
    { 
        $current = $this_HasParentFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHasParentFilterObject
entryRuleHasParentFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasParentFilterObjectRule()); }
	 iv_ruleHasParentFilterObject=ruleHasParentFilterObject 
	 { $current=$iv_ruleHasParentFilterObject.current; } 
	 EOF 
;

// Rule HasParentFilterObject
ruleHasParentFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHasParentFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(	otherlv_1='"type"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasParentFilterObjectAccess().getTypeKeyword_1_0());
    }

    |	otherlv_2='"parent_type"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHasParentFilterObjectAccess().getParent_typeKeyword_1_1());
    }
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHasParentFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_parentType_4_0=RULE_STRING
		{
			newLeafNode(lv_parentType_4_0, grammarAccess.getHasParentFilterObjectAccess().getParentTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasParentFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parentType",
        		lv_parentType_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getHasParentFilterObjectAccess().getCommaKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getHasParentFilterObjectAccess().getQueryQueryParserRuleCall_5_0_0()); 
	    }
		lv_query_6_0=ruleQuery		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasParentFilterObjectRule());
	        }
       		set(
       			$current, 
       			"query",
        		lv_query_6_0, 
        		"Query");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getHasParentFilterObjectAccess().getFilterFilterParserRuleCall_5_1_0()); 
	    }
		lv_filter_7_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasParentFilterObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_7_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getHasParentFilterObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleIdsFilter
entryRuleIdsFilter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdsFilterRule()); } 
	 iv_ruleIdsFilter=ruleIdsFilter 
	 { $current=$iv_ruleIdsFilter.current.getText(); }  
	 EOF 
;

// Rule IdsFilter
ruleIdsFilter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"ids"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsFilterAccess().getIdsKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdsFilterAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getIdsFilterAccess().getIdsObjectParserRuleCall_2()); 
    }
    this_IdsObject_2=ruleIdsObject    {
		$current.merge(this_IdsObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleIndicesFilter
entryRuleIndicesFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndicesFilterRule()); }
	 iv_ruleIndicesFilter=ruleIndicesFilter 
	 { $current=$iv_ruleIndicesFilter.current; } 
	 EOF 
;

// Rule IndicesFilter
ruleIndicesFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"indices"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndicesFilterAccess().getIndicesKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIndicesFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getIndicesFilterAccess().getIndicesFilterObjectParserRuleCall_2()); 
    }
    this_IndicesFilterObject_2=ruleIndicesFilterObject
    { 
        $current = $this_IndicesFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIndicesFilterObject
entryRuleIndicesFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndicesFilterObjectRule()); }
	 iv_ruleIndicesFilterObject=ruleIndicesFilterObject 
	 { $current=$iv_ruleIndicesFilterObject.current; } 
	 EOF 
;

// Rule IndicesFilterObject
ruleIndicesFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getIndicesFilterObjectAccess().getIndicesParamParserRuleCall_0_0()); 
    }
ruleIndicesParam
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIndicesFilterObjectAccess().getIndexParamParserRuleCall_0_1()); 
    }
ruleIndexParam
    { 
        afterParserOrEnumRuleCall();
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndicesFilterObjectAccess().getFilterFilterParserRuleCall_1_0()); 
	    }
		lv_filter_2_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndicesFilterObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_2_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIndicesFilterObjectAccess().getCommaKeyword_2_0());
    }
	otherlv_4='"no_match_filter"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIndicesFilterObjectAccess().getNo_match_filterKeyword_2_1());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIndicesFilterObjectAccess().getColonKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndicesFilterObjectAccess().getNoMatchFilterFilterObjectParserRuleCall_2_3_0()); 
	    }
		lv_noMatchFilter_6_0=ruleFilterObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndicesFilterObjectRule());
	        }
       		set(
       			$current, 
       			"noMatchFilter",
        		lv_noMatchFilter_6_0, 
        		"FilterObject");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleLimitFilter
entryRuleLimitFilter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitFilterRule()); } 
	 iv_ruleLimitFilter=ruleLimitFilter 
	 { $current=$iv_ruleLimitFilter.current.getText(); }  
	 EOF 
;

// Rule LimitFilter
ruleLimitFilter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"limit"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLimitFilterAccess().getLimitKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLimitFilterAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getLimitFilterAccess().getLimitFilterObjectParserRuleCall_2()); 
    }
    this_LimitFilterObject_2=ruleLimitFilterObject    {
		$current.merge(this_LimitFilterObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleLimitFilterObject
entryRuleLimitFilterObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLimitFilterObjectRule()); } 
	 iv_ruleLimitFilterObject=ruleLimitFilterObject 
	 { $current=$iv_ruleLimitFilterObject.current.getText(); }  
	 EOF 
;

// Rule LimitFilterObject
ruleLimitFilterObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLimitFilterObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }

	kw='"value"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLimitFilterObjectAccess().getValueKeyword_1()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLimitFilterObjectAccess().getColonKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getLimitFilterObjectAccess().getINTTerminalRuleCall_3()); 
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLimitFilterObjectAccess().getRightCurlyBracketKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleMatchAllFilter
entryRuleMatchAllFilter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchAllFilterRule()); } 
	 iv_ruleMatchAllFilter=ruleMatchAllFilter 
	 { $current=$iv_ruleMatchAllFilter.current.getText(); }  
	 EOF 
;

// Rule MatchAllFilter
ruleMatchAllFilter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"match_all"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllFilterAccess().getMatch_allKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllFilterAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getMatchAllFilterAccess().getMatchAllFilterObjectParserRuleCall_2()); 
    }
    this_MatchAllFilterObject_2=ruleMatchAllFilterObject    {
		$current.merge(this_MatchAllFilterObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMatchAllFilterObject
entryRuleMatchAllFilterObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchAllFilterObjectRule()); } 
	 iv_ruleMatchAllFilterObject=ruleMatchAllFilterObject 
	 { $current=$iv_ruleMatchAllFilterObject.current.getText(); }  
	 EOF 
;

// Rule MatchAllFilterObject
ruleMatchAllFilterObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllFilterObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMatchAllFilterObjectAccess().getRightCurlyBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleMissingFilter
entryRuleMissingFilter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMissingFilterRule()); } 
	 iv_ruleMissingFilter=ruleMissingFilter 
	 { $current=$iv_ruleMissingFilter.current.getText(); }  
	 EOF 
;

// Rule MissingFilter
ruleMissingFilter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"missing"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMissingFilterAccess().getMissingKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMissingFilterAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getMissingFilterAccess().getMissingFilterObjectParserRuleCall_2()); 
    }
    this_MissingFilterObject_2=ruleMissingFilterObject    {
		$current.merge(this_MissingFilterObject_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMissingFilterObject
entryRuleMissingFilterObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMissingFilterObjectRule()); } 
	 iv_ruleMissingFilterObject=ruleMissingFilterObject 
	 { $current=$iv_ruleMissingFilterObject.current.getText(); }  
	 EOF 
;

// Rule MissingFilterObject
ruleMissingFilterObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMissingFilterObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getMissingFilterObjectAccess().getFieldParamParserRuleCall_1()); 
    }
    this_FieldParam_1=ruleFieldParam    {
		$current.merge(this_FieldParam_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMissingFilterObjectAccess().getCommaKeyword_2_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getMissingFilterObjectAccess().getExistenceParamParserRuleCall_2_1()); 
    }
    this_ExistenceParam_3=ruleExistenceParam    {
		$current.merge(this_ExistenceParam_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMissingFilterObjectAccess().getCommaKeyword_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getMissingFilterObjectAccess().getNullValueParamParserRuleCall_3_1()); 
    }
    this_NullValueParam_5=ruleNullValueParam    {
		$current.merge(this_NullValueParam_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMissingFilterObjectAccess().getRightCurlyBracketKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleNestedFilter
entryRuleNestedFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedFilterRule()); }
	 iv_ruleNestedFilter=ruleNestedFilter 
	 { $current=$iv_ruleNestedFilter.current; } 
	 EOF 
;

// Rule NestedFilter
ruleNestedFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"nested"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNestedFilterAccess().getNestedKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNestedFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getNestedFilterAccess().getNestedFilterObjectParserRuleCall_2()); 
    }
    this_NestedFilterObject_2=ruleNestedFilterObject
    { 
        $current = $this_NestedFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNestedFilterObject
entryRuleNestedFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedFilterObjectRule()); }
	 iv_ruleNestedFilterObject=ruleNestedFilterObject 
	 { $current=$iv_ruleNestedFilterObject.current; } 
	 EOF 
;

// Rule NestedFilterObject
ruleNestedFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNestedFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='""path""' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNestedFilterObjectAccess().getPathKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNestedFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_path_3_0=RULE_STRING
		{
			newLeafNode(lv_path_3_0, grammarAccess.getNestedFilterObjectAccess().getPathSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNestedFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"path",
        		lv_path_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNestedFilterObjectAccess().getCommaKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedFilterObjectAccess().getFilterFilterParserRuleCall_5_0()); 
	    }
		lv_filter_5_0=ruleFilter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedFilterObjectRule());
	        }
       		set(
       			$current, 
       			"filter",
        		lv_filter_5_0, 
        		"Filter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNestedFilterObjectAccess().getCommaKeyword_6_0());
    }

    { 
        newCompositeNode(grammarAccess.getNestedFilterObjectAccess().getCacheParamParserRuleCall_6_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNestedFilterObjectAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleNotFilter
entryRuleNotFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotFilterRule()); }
	 iv_ruleNotFilter=ruleNotFilter 
	 { $current=$iv_ruleNotFilter.current; } 
	 EOF 
;

// Rule NotFilter
ruleNotFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"not"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNotFilterAccess().getNotKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNotFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getNotFilterAccess().getNotFilterObjectParserRuleCall_2()); 
    }
    this_NotFilterObject_2=ruleNotFilterObject
    { 
        $current = $this_NotFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNotFilterObject
entryRuleNotFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotFilterObjectRule()); }
	 iv_ruleNotFilterObject=ruleNotFilterObject 
	 { $current=$iv_ruleNotFilterObject.current; } 
	 EOF 
;

// Rule NotFilterObject
ruleNotFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNotFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getNotFilterObjectAccess().getQueryParserRuleCall_1()); 
    }
    this_Query_1=ruleQuery
    { 
        $current = $this_Query_1.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNotFilterObjectAccess().getCommaKeyword_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getNotFilterObjectAccess().getCacheParamParserRuleCall_2_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNotFilterObjectAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleOrFilter
entryRuleOrFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrFilterRule()); }
	 iv_ruleOrFilter=ruleOrFilter 
	 { $current=$iv_ruleOrFilter.current; } 
	 EOF 
;

// Rule OrFilter
ruleOrFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"or"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrFilterAccess().getOrKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOrFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getOrFilterAccess().getOrFilterArrayParserRuleCall_2()); 
    }
    this_OrFilterArray_2=ruleOrFilterArray
    { 
        $current = $this_OrFilterArray_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOrFilterArray
entryRuleOrFilterArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrFilterArrayRule()); }
	 iv_ruleOrFilterArray=ruleOrFilterArray 
	 { $current=$iv_ruleOrFilterArray.current; } 
	 EOF 
;

// Rule OrFilterArray
ruleOrFilterArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrFilterArrayAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrFilterArrayAccess().getSubQueryQueryObjectParserRuleCall_1_0()); 
	    }
		lv_subQuery_1_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrFilterArrayRule());
	        }
       		add(
       			$current, 
       			"subQuery",
        		lv_subQuery_1_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrFilterArrayAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrFilterArrayAccess().getSubQueryQueryObjectParserRuleCall_2_1_0()); 
	    }
		lv_subQuery_3_0=ruleQueryObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrFilterArrayRule());
	        }
       		add(
       			$current, 
       			"subQuery",
        		lv_subQuery_3_0, 
        		"QueryObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrFilterArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRulePrefixFilter
entryRulePrefixFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixFilterRule()); }
	 iv_rulePrefixFilter=rulePrefixFilter 
	 { $current=$iv_rulePrefixFilter.current; } 
	 EOF 
;

// Rule PrefixFilter
rulePrefixFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"prefix"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefixFilterAccess().getPrefixKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrefixFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getPrefixFilterAccess().getPrefixFilterObjectParserRuleCall_2()); 
    }
    this_PrefixFilterObject_2=rulePrefixFilterObject
    { 
        $current = $this_PrefixFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrefixFilterObject
entryRulePrefixFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixFilterObjectRule()); }
	 iv_rulePrefixFilterObject=rulePrefixFilterObject 
	 { $current=$iv_rulePrefixFilterObject.current; } 
	 EOF 
;

// Rule PrefixFilterObject
rulePrefixFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefixFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getPrefixFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrefixFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrefixFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_prefix_3_0=RULE_STRING
		{
			newLeafNode(lv_prefix_3_0, grammarAccess.getPrefixFilterObjectAccess().getPrefixSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrefixFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prefix",
        		lv_prefix_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrefixFilterObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getPrefixFilterObjectAccess().getCacheParamParserRuleCall_4_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrefixFilterObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleQueryFilter
entryRuleQueryFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueryFilterRule()); }
	 iv_ruleQueryFilter=ruleQueryFilter 
	 { $current=$iv_ruleQueryFilter.current; } 
	 EOF 
;

// Rule QueryFilter
ruleQueryFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQueryFilterAccess().getQueryParserRuleCall_0()); 
    }
    this_Query_0=ruleQuery
    { 
        $current = $this_Query_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQueryFilterAccess().getFQueryParserRuleCall_1()); 
    }
    this_FQuery_1=ruleFQuery
    { 
        $current = $this_FQuery_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFQuery
entryRuleFQuery returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQueryRule()); }
	 iv_ruleFQuery=ruleFQuery 
	 { $current=$iv_ruleFQuery.current; } 
	 EOF 
;

// Rule FQuery
ruleFQuery returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"fquery"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFQueryAccess().getFqueryKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFQueryAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getFQueryAccess().getQueryObjectParserRuleCall_2()); 
    }
    this_QueryObject_2=ruleQueryObject
    { 
        $current = $this_QueryObject_2.current; 
        afterParserOrEnumRuleCall();
    }
(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFQueryAccess().getCommaKeyword_3_0());
    }

    { 
        newCompositeNode(grammarAccess.getFQueryAccess().getCacheParamParserRuleCall_3_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?)
;







// Entry rule entryRuleRangeFilterObject
entryRuleRangeFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeFilterObjectRule()); }
	 iv_ruleRangeFilterObject=ruleRangeFilterObject 
	 { $current=$iv_ruleRangeFilterObject.current; } 
	 EOF 
;

// Rule RangeFilterObject
ruleRangeFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRangeFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getRangeFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRangeFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRangeFilterObjectAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRangeFilterObjectAccess().getParamsRangeQueryParametersObjectParserRuleCall_3_0()); 
	    }
		lv_params_3_0=ruleRangeQueryParametersObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRangeFilterObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"RangeQueryParametersObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRangeFilterObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getRangeFilterObjectAccess().getRangeFilterExecutionParamParserRuleCall_4_1()); 
    }
ruleRangeFilterExecutionParam
    { 
        afterParserOrEnumRuleCall();
    }
)?(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRangeFilterObjectAccess().getCommaKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getRangeFilterObjectAccess().getCacheParamParserRuleCall_5_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRangeFilterObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRangeFilterExecutionParam
entryRuleRangeFilterExecutionParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRangeFilterExecutionParamRule()); } 
	 iv_ruleRangeFilterExecutionParam=ruleRangeFilterExecutionParam 
	 { $current=$iv_ruleRangeFilterExecutionParam.current.getText(); }  
	 EOF 
;

// Rule RangeFilterExecutionParam
ruleRangeFilterExecutionParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"execution"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFilterExecutionParamAccess().getExecutionKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFilterExecutionParamAccess().getColonKeyword_1()); 
    }
(
	kw='"index"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFilterExecutionParamAccess().getIndexKeyword_2_0()); 
    }

    |
	kw='"fielddata"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFilterExecutionParamAccess().getFielddataKeyword_2_1()); 
    }
))
    ;









// Entry rule entryRuleRegexpFilter
entryRuleRegexpFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpFilterRule()); }
	 iv_ruleRegexpFilter=ruleRegexpFilter 
	 { $current=$iv_ruleRegexpFilter.current; } 
	 EOF 
;

// Rule RegexpFilter
ruleRegexpFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"regexp"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegexpFilterAccess().getRegexpKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRegexpFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getRegexpFilterAccess().getRegexpFilterObjectParserRuleCall_2()); 
    }
    this_RegexpFilterObject_2=ruleRegexpFilterObject
    { 
        $current = $this_RegexpFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRegexpFilterObject
entryRuleRegexpFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpFilterObjectRule()); }
	 iv_ruleRegexpFilterObject=ruleRegexpFilterObject 
	 { $current=$iv_ruleRegexpFilterObject.current; } 
	 EOF 
;

// Rule RegexpFilterObject
ruleRegexpFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegexpFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getRegexpFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexpFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRegexpFilterObjectAccess().getColonKeyword_2());
    }
((
(
		lv_regexp_3_0=RULE_STRING
		{
			newLeafNode(lv_regexp_3_0, grammarAccess.getRegexpFilterObjectAccess().getRegexpSTRINGTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexpFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regexp",
        		lv_regexp_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRegexpFilterObjectAccess().getParamsRegexpFilterParameterObjectParserRuleCall_3_1_0()); 
	    }
		lv_params_4_0=ruleRegexpFilterParameterObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegexpFilterObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"RegexpFilterParameterObject");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRegexpFilterObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleRegexpFilterParameterObject
entryRuleRegexpFilterParameterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpFilterParameterObjectRule()); }
	 iv_ruleRegexpFilterParameterObject=ruleRegexpFilterParameterObject 
	 { $current=$iv_ruleRegexpFilterParameterObject.current; } 
	 EOF 
;

// Rule RegexpFilterParameterObject
ruleRegexpFilterParameterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRegexpFilterParameterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"value"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRegexpFilterParameterObjectAccess().getValueKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRegexpFilterParameterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_regexp_3_0=RULE_STRING
		{
			newLeafNode(lv_regexp_3_0, grammarAccess.getRegexpFilterParameterObjectAccess().getRegexpSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexpFilterParameterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"regexp",
        		lv_regexp_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRegexpFilterParameterObjectAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegexpFilterParameterObjectAccess().getParamsRegexpFilterParameterParserRuleCall_4_1_0()); 
	    }
		lv_params_5_0=ruleRegexpFilterParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegexpFilterParameterObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"RegexpFilterParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRegexpFilterParameterObjectAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRegexpFilterParameterObjectAccess().getParamsRegexpFilterParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_params_7_0=ruleRegexpFilterParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRegexpFilterParameterObjectRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"RegexpFilterParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRegexpFilterParameterObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRegexpFilterParameter
entryRuleRegexpFilterParameter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexpFilterParameterRule()); } 
	 iv_ruleRegexpFilterParameter=ruleRegexpFilterParameter 
	 { $current=$iv_ruleRegexpFilterParameter.current.getText(); }  
	 EOF 
;

// Rule RegexpFilterParameter
ruleRegexpFilterParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRegexpFilterParameterAccess().getBoostParamParserRuleCall()); 
    }
    this_BoostParam_0=ruleBoostParam    {
		$current.merge(this_BoostParam_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleScriptFilter
entryRuleScriptFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptFilterRule()); }
	 iv_ruleScriptFilter=ruleScriptFilter 
	 { $current=$iv_ruleScriptFilter.current; } 
	 EOF 
;

// Rule ScriptFilter
ruleScriptFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"script"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptFilterAccess().getScriptKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScriptFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getScriptFilterAccess().getScriptFilterObjectParserRuleCall_2()); 
    }
    this_ScriptFilterObject_2=ruleScriptFilterObject
    { 
        $current = $this_ScriptFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScriptFilterObject
entryRuleScriptFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScriptFilterObjectRule()); }
	 iv_ruleScriptFilterObject=ruleScriptFilterObject 
	 { $current=$iv_ruleScriptFilterObject.current; } 
	 EOF 
;

// Rule ScriptFilterObject
ruleScriptFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScriptFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"script"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScriptFilterObjectAccess().getScriptKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScriptFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_script_3_0=RULE_STRING
		{
			newLeafNode(lv_script_3_0, grammarAccess.getScriptFilterObjectAccess().getScriptSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScriptFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"script",
        		lv_script_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getScriptFilterObjectAccess().getCommaKeyword_4_0());
    }
	otherlv_5='"params"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScriptFilterObjectAccess().getParamsKeyword_4_1());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getScriptFilterObjectAccess().getColonKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScriptFilterObjectAccess().getParamsObjectParserRuleCall_4_3_0()); 
	    }
		lv_params_7_0=ruleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScriptFilterObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_7_0, 
        		"Object");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getScriptFilterObjectAccess().getCommaKeyword_5_0());
    }

    { 
        newCompositeNode(grammarAccess.getScriptFilterObjectAccess().getCacheParamParserRuleCall_5_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getScriptFilterObjectAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTermFilter
entryRuleTermFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermFilterRule()); }
	 iv_ruleTermFilter=ruleTermFilter 
	 { $current=$iv_ruleTermFilter.current; } 
	 EOF 
;

// Rule TermFilter
ruleTermFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"term"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermFilterAccess().getTermKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTermFilterAccess().getTermFilterObjectParserRuleCall_2()); 
    }
    this_TermFilterObject_2=ruleTermFilterObject
    { 
        $current = $this_TermFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTermFilterObject
entryRuleTermFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermFilterObjectRule()); }
	 iv_ruleTermFilterObject=ruleTermFilterObject 
	 { $current=$iv_ruleTermFilterObject.current; } 
	 EOF 
;

// Rule TermFilterObject
ruleTermFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getTermFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_term_3_0=RULE_STRING
		{
			newLeafNode(lv_term_3_0, grammarAccess.getTermFilterObjectAccess().getTermSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTermFilterObjectAccess().getCommaKeyword_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getTermFilterObjectAccess().getCacheParamParserRuleCall_4_1()); 
    }
ruleCacheParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTermFilterObjectAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTermsFilter
entryRuleTermsFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsFilterRule()); }
	 iv_ruleTermsFilter=ruleTermsFilter 
	 { $current=$iv_ruleTermsFilter.current; } 
	 EOF 
;

// Rule TermsFilter
ruleTermsFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"in"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsFilterAccess().getInKeyword_0_0());
    }

    |	otherlv_1='"terms"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermsFilterAccess().getTermsKeyword_0_1());
    }
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermsFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTermsFilterAccess().getTermsFilterObjectParserRuleCall_2()); 
    }
    this_TermsFilterObject_3=ruleTermsFilterObject
    { 
        $current = $this_TermsFilterObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTermsFilterObject
entryRuleTermsFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsFilterObjectRule()); }
	 iv_ruleTermsFilterObject=ruleTermsFilterObject 
	 { $current=$iv_ruleTermsFilterObject.current; } 
	 EOF 
;

// Rule TermsFilterObject
ruleTermsFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTermsFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		lv_fieldName_1_0=RULE_STRING
		{
			newLeafNode(lv_fieldName_1_0, grammarAccess.getTermsFilterObjectAccess().getFieldNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermsFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fieldName",
        		lv_fieldName_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTermsFilterObjectAccess().getColonKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTermsFilterObjectAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		lv_terms_4_0=RULE_STRING
		{
			newLeafNode(lv_terms_4_0, grammarAccess.getTermsFilterObjectAccess().getTermsSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermsFilterObjectRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"terms",
        		lv_terms_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTermsFilterObjectAccess().getCommaKeyword_5_0());
    }
(
(
		lv_terms_6_0=RULE_STRING
		{
			newLeafNode(lv_terms_6_0, grammarAccess.getTermsFilterObjectAccess().getTermsSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermsFilterObjectRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"terms",
        		lv_terms_6_0, 
        		"STRING");
	    }

)
))*	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTermsFilterObjectAccess().getRightSquareBracketKeyword_6());
    }
(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTermsFilterObjectAccess().getCommaKeyword_7_0());
    }

    { 
        newCompositeNode(grammarAccess.getTermsFilterObjectAccess().getTermsFilterExecutionParamParserRuleCall_7_1()); 
    }
ruleTermsFilterExecutionParam
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTermsFilterObjectAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleTermsFilterExecutionParam
entryRuleTermsFilterExecutionParam returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsFilterExecutionParamRule()); } 
	 iv_ruleTermsFilterExecutionParam=ruleTermsFilterExecutionParam 
	 { $current=$iv_ruleTermsFilterExecutionParam.current.getText(); }  
	 EOF 
;

// Rule TermsFilterExecutionParam
ruleTermsFilterExecutionParam returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"execution"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getExecutionKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getColonKeyword_1()); 
    }
(
	kw='"plain"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getPlainKeyword_2_0()); 
    }

    |
	kw='"fielddata"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getFielddataKeyword_2_1()); 
    }

    |
	kw='"bool"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getBoolKeyword_2_2()); 
    }

    |
	kw='"and"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getAndKeyword_2_3()); 
    }

    |
	kw='"or"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getOrKeyword_2_4()); 
    }

    |
	kw='"bool_nocache"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getBool_nocacheKeyword_2_5()); 
    }

    |
	kw='"and_nocache"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getAnd_nocacheKeyword_2_6()); 
    }

    |
	kw='"or_nocache"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTermsFilterExecutionParamAccess().getOr_nocacheKeyword_2_7()); 
    }
))
    ;





// Entry rule entryRuleTypeFilter
entryRuleTypeFilter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeFilterRule()); }
	 iv_ruleTypeFilter=ruleTypeFilter 
	 { $current=$iv_ruleTypeFilter.current; } 
	 EOF 
;

// Rule TypeFilter
ruleTypeFilter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"type"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeFilterAccess().getTypeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeFilterAccess().getColonKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getTypeFilterAccess().getTypeFilterObjectParserRuleCall_2()); 
    }
    this_TypeFilterObject_2=ruleTypeFilterObject
    { 
        $current = $this_TypeFilterObject_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypeFilterObject
entryRuleTypeFilterObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeFilterObjectRule()); }
	 iv_ruleTypeFilterObject=ruleTypeFilterObject 
	 { $current=$iv_ruleTypeFilterObject.current; } 
	 EOF 
;

// Rule TypeFilterObject
ruleTypeFilterObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeFilterObjectAccess().getLeftCurlyBracketKeyword_0());
    }
	otherlv_1='"value"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeFilterObjectAccess().getValueKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeFilterObjectAccess().getColonKeyword_2());
    }
(
(
		lv_type_3_0=RULE_STRING
		{
			newLeafNode(lv_type_3_0, grammarAccess.getTypeFilterObjectAccess().getTypeSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFilterObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeFilterObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleGeoShapeObject
entryRuleGeoShapeObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoShapeObjectRule()); }
	 iv_ruleGeoShapeObject=ruleGeoShapeObject 
	 { $current=$iv_ruleGeoShapeObject.current; } 
	 EOF 
;

// Rule GeoShapeObject
ruleGeoShapeObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGeoShapeObjectAccess().getLeftCurlyBracketKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getGeoShapeObjectAccess().getGeoShapeParserRuleCall_1()); 
    }
    this_GeoShape_1=ruleGeoShape
    { 
        $current = $this_GeoShape_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGeoShapeObjectAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleGeoShape
entryRuleGeoShape returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeoShapeRule()); }
	 iv_ruleGeoShape=ruleGeoShape 
	 { $current=$iv_ruleGeoShape.current; } 
	 EOF 
;

// Rule GeoShape
ruleGeoShape returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGeoShapeAccess().getShapeShapeParserRuleCall_0_0()); 
	    }
		lv_shape_0_0=ruleShape		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoShapeRule());
	        }
       		set(
       			$current, 
       			"shape",
        		lv_shape_0_0, 
        		"Shape");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGeoShapeAccess().getIndexedShapeIndexedShapeParserRuleCall_1_0()); 
	    }
		lv_indexedShape_1_0=ruleIndexedShape		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeoShapeRule());
	        }
       		set(
       			$current, 
       			"indexedShape",
        		lv_indexedShape_1_0, 
        		"IndexedShape");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIndexedShape
entryRuleIndexedShape returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexedShapeRule()); } 
	 iv_ruleIndexedShape=ruleIndexedShape 
	 { $current=$iv_ruleIndexedShape.current.getText(); }  
	 EOF 
;

// Rule IndexedShape
ruleIndexedShape returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"indexed_shape"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getIndexed_shapeKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getColonKeyword_1()); 
    }

	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getLeftCurlyBracketKeyword_2()); 
    }

	kw='"id"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getIdKeyword_3()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getColonKeyword_4()); 
    }
    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getIndexedShapeAccess().getSTRINGTerminalRuleCall_5()); 
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getCommaKeyword_6()); 
    }

	kw='"type"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getTypeKeyword_7()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getColonKeyword_8()); 
    }
    this_STRING_9=RULE_STRING    {
		$current.merge(this_STRING_9);
    }

    { 
    newLeafNode(this_STRING_9, grammarAccess.getIndexedShapeAccess().getSTRINGTerminalRuleCall_9()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getCommaKeyword_10_0()); 
    }

	kw='"index"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getIndexKeyword_10_1()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getColonKeyword_10_2()); 
    }
    this_STRING_13=RULE_STRING    {
		$current.merge(this_STRING_13);
    }

    { 
    newLeafNode(this_STRING_13, grammarAccess.getIndexedShapeAccess().getSTRINGTerminalRuleCall_10_3()); 
    }
)?(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getCommaKeyword_11_0()); 
    }

	kw='"path"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getPathKeyword_11_1()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getColonKeyword_11_2()); 
    }
    this_STRING_17=RULE_STRING    {
		$current.merge(this_STRING_17);
    }

    { 
    newLeafNode(this_STRING_17, grammarAccess.getIndexedShapeAccess().getSTRINGTerminalRuleCall_11_3()); 
    }
)?
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIndexedShapeAccess().getRightCurlyBracketKeyword_12()); 
    }
)
    ;





// Entry rule entryRulePolygon
entryRulePolygon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolygonRule()); }
	 iv_rulePolygon=rulePolygon 
	 { $current=$iv_rulePolygon.current; } 
	 EOF 
;

// Rule Polygon
rulePolygon returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPolygonAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolygonAccess().getPointsLatLonParserRuleCall_1_0()); 
	    }
		lv_points_1_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolygonRule());
	        }
       		add(
       			$current, 
       			"points",
        		lv_points_1_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPolygonAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolygonAccess().getPointsLatLonParserRuleCall_2_1_0()); 
	    }
		lv_points_3_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolygonRule());
	        }
       		add(
       			$current, 
       			"points",
        		lv_points_3_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPolygonAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleBoundingBoxObject
entryRuleBoundingBoxObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoundingBoxObjectRule()); }
	 iv_ruleBoundingBoxObject=ruleBoundingBoxObject 
	 { $current=$iv_ruleBoundingBoxObject.current; } 
	 EOF 
;

// Rule BoundingBoxObject
ruleBoundingBoxObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBoundingBoxObjectAccess().getLeftCurlyBracketKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoundingBoxObjectAccess().getTwoPointBoundingBoxTwoPointBoundingBoxParserRuleCall_0_1_0()); 
	    }
		lv_twoPointBoundingBox_1_0=ruleTwoPointBoundingBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoundingBoxObjectRule());
	        }
       		set(
       			$current, 
       			"twoPointBoundingBox",
        		lv_twoPointBoundingBox_1_0, 
        		"TwoPointBoundingBox");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getBoundingBoxObjectAccess().getVerticesBoundingBoxVerticesBoundingBoxParserRuleCall_1_0_0()); 
	    }
		lv_verticesBoundingBox_2_0=ruleVerticesBoundingBox		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoundingBoxObjectRule());
	        }
       		set(
       			$current, 
       			"verticesBoundingBox",
        		lv_verticesBoundingBox_2_0, 
        		"VerticesBoundingBox");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBoundingBoxObjectAccess().getRightCurlyBracketKeyword_1_1());
    }
))
;





// Entry rule entryRuleTwoPointBoundingBox
entryRuleTwoPointBoundingBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTwoPointBoundingBoxRule()); }
	 iv_ruleTwoPointBoundingBox=ruleTwoPointBoundingBox 
	 { $current=$iv_ruleTwoPointBoundingBox.current; } 
	 EOF 
;

// Rule TwoPointBoundingBox
ruleTwoPointBoundingBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"top_left"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTwoPointBoundingBoxAccess().getTop_leftKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTwoPointBoundingBoxAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoPointBoundingBoxAccess().getTopLeftLatLonParserRuleCall_2_0()); 
	    }
		lv_topLeft_2_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoPointBoundingBoxRule());
	        }
       		set(
       			$current, 
       			"topLeft",
        		lv_topLeft_2_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTwoPointBoundingBoxAccess().getCommaKeyword_3());
    }
	otherlv_4='"bottom_right"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTwoPointBoundingBoxAccess().getBottom_rightKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTwoPointBoundingBoxAccess().getColonKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTwoPointBoundingBoxAccess().getBottomRightLatLonParserRuleCall_6_0()); 
	    }
		lv_bottomRight_6_0=ruleLatLon		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTwoPointBoundingBoxRule());
	        }
       		set(
       			$current, 
       			"bottomRight",
        		lv_bottomRight_6_0, 
        		"LatLon");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVerticesBoundingBox
entryRuleVerticesBoundingBox returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerticesBoundingBoxRule()); } 
	 iv_ruleVerticesBoundingBox=ruleVerticesBoundingBox 
	 { $current=$iv_ruleVerticesBoundingBox.current.getText(); }  
	 EOF 
;

// Rule VerticesBoundingBox
ruleVerticesBoundingBox returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"top"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getTopKeyword_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getColonKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getVerticesBoundingBoxAccess().getFLOATParserRuleCall_2()); 
    }
    this_FLOAT_2=ruleFLOAT    {
		$current.merge(this_FLOAT_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getCommaKeyword_3()); 
    }

	kw='"left"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getLeftKeyword_4()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getColonKeyword_5()); 
    }

    { 
        newCompositeNode(grammarAccess.getVerticesBoundingBoxAccess().getFLOATParserRuleCall_6()); 
    }
    this_FLOAT_6=ruleFLOAT    {
		$current.merge(this_FLOAT_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getCommaKeyword_7()); 
    }

	kw='"bottom"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getBottomKeyword_8()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getColonKeyword_9()); 
    }

    { 
        newCompositeNode(grammarAccess.getVerticesBoundingBoxAccess().getFLOATParserRuleCall_10()); 
    }
    this_FLOAT_10=ruleFLOAT    {
		$current.merge(this_FLOAT_10);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getCommaKeyword_11()); 
    }

	kw='"right"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getRightKeyword_12()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerticesBoundingBoxAccess().getColonKeyword_13()); 
    }

    { 
        newCompositeNode(grammarAccess.getVerticesBoundingBoxAccess().getFLOATParserRuleCall_14()); 
    }
    this_FLOAT_14=ruleFLOAT    {
		$current.merge(this_FLOAT_14);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleLatLon
entryRuleLatLon returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatLonRule()); }
	 iv_ruleLatLon=ruleLatLon 
	 { $current=$iv_ruleLatLon.current; } 
	 EOF 
;

// Rule LatLon
ruleLatLon returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLatLonAccess().getLatLonObjectLatLonPropertyObjectParserRuleCall_0_0()); 
	    }
		lv_latLonObject_0_0=ruleLatLonPropertyObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatLonRule());
	        }
       		set(
       			$current, 
       			"latLonObject",
        		lv_latLonObject_0_0, 
        		"LatLonPropertyObject");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLatLonAccess().getLatLonArrayLatLonArrayParserRuleCall_1_0()); 
	    }
		lv_latLonArray_1_0=ruleLatLonArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatLonRule());
	        }
       		set(
       			$current, 
       			"latLonArray",
        		lv_latLonArray_1_0, 
        		"LatLonArray");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLatLonAccess().getLatLonStringLatLonStringParserRuleCall_2_0()); 
	    }
		lv_latLonString_2_0=ruleLatLonString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatLonRule());
	        }
       		set(
       			$current, 
       			"latLonString",
        		lv_latLonString_2_0, 
        		"LatLonString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLatLonPropertyObject
entryRuleLatLonPropertyObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatLonPropertyObjectRule()); } 
	 iv_ruleLatLonPropertyObject=ruleLatLonPropertyObject 
	 { $current=$iv_ruleLatLonPropertyObject.current.getText(); }  
	 EOF 
;

// Rule LatLonPropertyObject
ruleLatLonPropertyObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getLeftCurlyBracketKeyword_0()); 
    }

	kw='"lat"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getLatKeyword_1()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getColonKeyword_2()); 
    }

    { 
        newCompositeNode(grammarAccess.getLatLonPropertyObjectAccess().getFLOATParserRuleCall_3()); 
    }
    this_FLOAT_3=ruleFLOAT    {
		$current.merge(this_FLOAT_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getCommaKeyword_4()); 
    }

	kw='"lon"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getLonKeyword_5()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getColonKeyword_6()); 
    }

    { 
        newCompositeNode(grammarAccess.getLatLonPropertyObjectAccess().getFLOATParserRuleCall_7()); 
    }
    this_FLOAT_7=ruleFLOAT    {
		$current.merge(this_FLOAT_7);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLatLonPropertyObjectAccess().getRightCurlyBracketKeyword_8()); 
    }
)
    ;





// Entry rule entryRuleLatLonArray
entryRuleLatLonArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatLonArrayRule()); }
	 iv_ruleLatLonArray=ruleLatLonArray 
	 { $current=$iv_ruleLatLonArray.current; } 
	 EOF 
;

// Rule LatLonArray
ruleLatLonArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLatLonArrayAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLatLonArrayAccess().getLonFLOATParserRuleCall_1_0()); 
	    }
		lv_lon_1_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatLonArrayRule());
	        }
       		set(
       			$current, 
       			"lon",
        		lv_lon_1_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLatLonArrayAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLatLonArrayAccess().getLatFLOATParserRuleCall_3_0()); 
	    }
		lv_lat_3_0=ruleFLOAT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLatLonArrayRule());
	        }
       		set(
       			$current, 
       			"lat",
        		lv_lat_3_0, 
        		"FLOAT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLatLonArrayAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleLatLonString
entryRuleLatLonString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLatLonStringRule()); }
	 iv_ruleLatLonString=ruleLatLonString 
	 { $current=$iv_ruleLatLonString.current; } 
	 EOF 
;

// Rule LatLonString
ruleLatLonString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_latLonOrHash_0_0=RULE_STRING
		{
			newLeafNode(lv_latLonOrHash_0_0, grammarAccess.getLatLonStringAccess().getLatLonOrHashSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLatLonStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"latLonOrHash",
        		lv_latLonOrHash_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleShapeObject
entryRuleShapeObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShapeObjectRule()); }
	 iv_ruleShapeObject=ruleShapeObject 
	 { $current=$iv_ruleShapeObject.current; } 
	 EOF 
;

// Rule ShapeObject
ruleShapeObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShapeObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShapeObjectAccess().getShapeShapeParserRuleCall_1_0()); 
	    }
		lv_shape_1_0=ruleShape		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShapeObjectRule());
	        }
       		set(
       			$current, 
       			"shape",
        		lv_shape_1_0, 
        		"Shape");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShapeObjectAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleShape
entryRuleShape returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShapeRule()); }
	 iv_ruleShape=ruleShape 
	 { $current=$iv_ruleShape.current; } 
	 EOF 
;

// Rule Shape
ruleShape returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"shape"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShapeAccess().getShapeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShapeAccess().getColonKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShapeAccess().getLeftCurlyBracketKeyword_2());
    }

    { 
        newCompositeNode(grammarAccess.getShapeAccess().getShapeTypeParserRuleCall_3()); 
    }
    this_ShapeType_3=ruleShapeType
    { 
        $current = $this_ShapeType_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShapeAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleShapeType
entryRuleShapeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShapeTypeRule()); }
	 iv_ruleShapeType=ruleShapeType 
	 { $current=$iv_ruleShapeType.current; } 
	 EOF 
;

// Rule ShapeType
ruleShapeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getShapeTypeAccess().getShapeTypeEnvelopeParserRuleCall()); 
    }
    this_ShapeTypeEnvelope_0=ruleShapeTypeEnvelope
    { 
        $current = $this_ShapeTypeEnvelope_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleShapeTypeEnvelope
entryRuleShapeTypeEnvelope returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShapeTypeEnvelopeRule()); }
	 iv_ruleShapeTypeEnvelope=ruleShapeTypeEnvelope 
	 { $current=$iv_ruleShapeTypeEnvelope.current; } 
	 EOF 
;

// Rule ShapeTypeEnvelope
ruleShapeTypeEnvelope returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='"type"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShapeTypeEnvelopeAccess().getTypeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShapeTypeEnvelopeAccess().getColonKeyword_1());
    }
	otherlv_2='"envelope"' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShapeTypeEnvelopeAccess().getEnvelopeKeyword_2());
    }
	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getShapeTypeEnvelopeAccess().getCommaKeyword_3());
    }
	otherlv_4='"coordinates"' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShapeTypeEnvelopeAccess().getCoordinatesKeyword_4());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getShapeTypeEnvelopeAccess().getColonKeyword_5());
    }
	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getShapeTypeEnvelopeAccess().getLeftSquareBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShapeTypeEnvelopeAccess().getPointsLatLonArrayParserRuleCall_7_0()); 
	    }
		lv_points_7_0=ruleLatLonArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShapeTypeEnvelopeRule());
	        }
       		add(
       			$current, 
       			"points",
        		lv_points_7_0, 
        		"LatLonArray");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getShapeTypeEnvelopeAccess().getCommaKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShapeTypeEnvelopeAccess().getPointsLatLonArrayParserRuleCall_8_1_0()); 
	    }
		lv_points_9_0=ruleLatLonArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShapeTypeEnvelopeRule());
	        }
       		add(
       			$current, 
       			"points",
        		lv_points_9_0, 
        		"LatLonArray");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getShapeTypeEnvelopeAccess().getRightSquareBracketKeyword_9());
    }
)
;





// Entry rule entryRuleObject
entryRuleObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectRule()); }
	 iv_ruleObject=ruleObject 
	 { $current=$iv_ruleObject.current; } 
	 EOF 
;

// Rule Object
ruleObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectAccess().getLeftCurlyBracketKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getObjectAccess().getObjectAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectAccess().getMembersMemberParserRuleCall_2_0()); 
	    }
		lv_members_2_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_2_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getObjectAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectAccess().getMembersMemberParserRuleCall_3_1_0()); 
	    }
		lv_members_4_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_4_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_STRING
		{
			newLeafNode(lv_key_0_0, grammarAccess.getMemberAccess().getKeySTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMemberRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMemberAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getObjectObjectParserRuleCall_0_0()); 
	    }
		lv_object_0_0=ruleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_0_0, 
        		"Object");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_string_1_0=RULE_STRING
		{
			newLeafNode(lv_string_1_0, grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getArrayArrayParserRuleCall_2_0()); 
	    }
		lv_array_2_0=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_2_0, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_bool_3_0=RULE_BOOLEAN
		{
			newLeafNode(lv_bool_3_0, grammarAccess.getValueAccess().getBoolBOOLEANTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bool",
        		lv_bool_3_0, 
        		"BOOLEAN");
	    }

)
)
    |(
(
		lv_null_4_0=RULE_NULL
		{
			newLeafNode(lv_null_4_0, grammarAccess.getValueAccess().getNullNULLTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"null",
        		lv_null_4_0, 
        		"NULL");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getNumberNUMBERParserRuleCall_5_0()); 
	    }
		lv_number_5_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_5_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	 iv_ruleArray=ruleArray 
	 { $current=$iv_ruleArray.current; } 
	 EOF 
;

// Rule Array
ruleArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayAccess().getArrayAction_1(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_2_0()); 
	    }
		lv_values_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_3_1_0()); 
	    }
		lv_values_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); } 
	 iv_ruleNUMBER=ruleNUMBER 
	 { $current=$iv_ruleNUMBER.current.getText(); }  
	 EOF 
;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNUMBERAccess().getFLOATParserRuleCall_0()); 
    }
    this_FLOAT_0=ruleFLOAT    {
		$current.merge(this_FLOAT_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleFLOAT
entryRuleFLOAT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFLOATRule()); } 
	 iv_ruleFLOAT=ruleFLOAT 
	 { $current=$iv_ruleFLOAT.current.getText(); }  
	 EOF 
;

// Rule FLOAT
ruleFLOAT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFLOATAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFLOATAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFLOATAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFLOATAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFLOATAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getFLOATAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Entry rule entryRuleAND_OR
entryRuleAND_OR returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAND_ORRule()); } 
	 iv_ruleAND_OR=ruleAND_OR 
	 { $current=$iv_ruleAND_OR.current.getText(); }  
	 EOF 
;

// Rule AND_OR
ruleAND_OR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"and"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAND_ORAccess().getAndKeyword_0()); 
    }

    |
	kw='"or"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAND_ORAccess().getOrKeyword_1()); 
    }
)
    ;





RULE_BOOLEAN : ('true'|'false');

RULE_NULL : 'null';

RULE_NONE_ALL : ('"none"'|'"all"');

RULE_BOOL_CLAUSE : ('"must"'|'"must_not"'|'"should"');

RULE_SCORE_MODES : ('"max"'|'"sum"'|'"avg"'|'"none"');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


