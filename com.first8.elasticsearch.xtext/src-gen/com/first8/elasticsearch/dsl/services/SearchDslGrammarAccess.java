/*
* generated by Xtext
*/
package com.first8.elasticsearch.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class SearchDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class SearchDSLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SearchDSL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cFieldsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cFieldsFieldsParserRuleCall_1_0_0 = (RuleCall)cFieldsAssignment_1_0.eContents().get(0);
		private final Keyword cCommaKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cFromFromParserRuleCall_2_0_0 = (RuleCall)cFromAssignment_2_0.eContents().get(0);
		private final Keyword cCommaKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cSizeAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cSizeSizeParserRuleCall_3_0_0 = (RuleCall)cSizeAssignment_3_0.eContents().get(0);
		private final Keyword cCommaKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cSortAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cSortSortParserRuleCall_4_0_0 = (RuleCall)cSortAssignment_4_0.eContents().get(0);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cQueryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cQueryQueryParserRuleCall_5_0 = (RuleCall)cQueryAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFacetsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFacetsFacetsParserRuleCall_6_1_0 = (RuleCall)cFacetsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cStatsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cStatsStatsParserRuleCall_7_1_0 = (RuleCall)cStatsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//// conventions used:
		//// xxxObject includes the brackets (e.g. '{' something '}')
		//// xxxParam are generic optional parameters (e.g. '"size"' ':' INT)
		//// xxxParameter is an allowed parameter for the query type xxx
		//// a xxQuery or xxFilter definition maps the query/filter name. 
		//// The actual definition is done in a xxQueryObject or xxFilterObject.
		//// If the definition is the same for bot a filter or a query, the object is simply called xxObject.
		//// TODO add _source parameter
		//// TODO add script_fields
		//// TODO add fielddata_fields
		//// TODO http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-multi-term-rewrite.html
		//// TODO http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-template-query.html
		//// TODO add BoostingQuery, FunctionScoreQUery
		//// TODO Aggregations
		//SearchDSL:
		//	"{" (fields=Fields ",")? (from=From ",")? (size=Size ",")? (sort=Sort ",")? query=Query ("," facets=Facets)? (","
		//	stats=Stats)? "}";
		public ParserRule getRule() { return rule; }

		//"{" (fields=Fields ",")? (from=From ",")? (size=Size ",")? (sort=Sort ",")? query=Query ("," facets=Facets)? (","
		//stats=Stats)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//(fields=Fields ",")?
		public Group getGroup_1() { return cGroup_1; }

		//fields=Fields
		public Assignment getFieldsAssignment_1_0() { return cFieldsAssignment_1_0; }

		//Fields
		public RuleCall getFieldsFieldsParserRuleCall_1_0_0() { return cFieldsFieldsParserRuleCall_1_0_0; }

		//","
		public Keyword getCommaKeyword_1_1() { return cCommaKeyword_1_1; }

		//(from=From ",")?
		public Group getGroup_2() { return cGroup_2; }

		//from=From
		public Assignment getFromAssignment_2_0() { return cFromAssignment_2_0; }

		//From
		public RuleCall getFromFromParserRuleCall_2_0_0() { return cFromFromParserRuleCall_2_0_0; }

		//","
		public Keyword getCommaKeyword_2_1() { return cCommaKeyword_2_1; }

		//(size=Size ",")?
		public Group getGroup_3() { return cGroup_3; }

		//size=Size
		public Assignment getSizeAssignment_3_0() { return cSizeAssignment_3_0; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_3_0_0() { return cSizeSizeParserRuleCall_3_0_0; }

		//","
		public Keyword getCommaKeyword_3_1() { return cCommaKeyword_3_1; }

		//(sort=Sort ",")?
		public Group getGroup_4() { return cGroup_4; }

		//sort=Sort
		public Assignment getSortAssignment_4_0() { return cSortAssignment_4_0; }

		//Sort
		public RuleCall getSortSortParserRuleCall_4_0_0() { return cSortSortParserRuleCall_4_0_0; }

		//","
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }

		//query=Query
		public Assignment getQueryAssignment_5() { return cQueryAssignment_5; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_5_0() { return cQueryQueryParserRuleCall_5_0; }

		//("," facets=Facets)?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//facets=Facets
		public Assignment getFacetsAssignment_6_1() { return cFacetsAssignment_6_1; }

		//Facets
		public RuleCall getFacetsFacetsParserRuleCall_6_1_0() { return cFacetsFacetsParserRuleCall_6_1_0; }

		//("," stats=Stats)?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//stats=Stats
		public Assignment getStatsAssignment_7_1() { return cStatsAssignment_7_1; }

		//Stats
		public RuleCall getStatsStatsParserRuleCall_7_1_0() { return cStatsStatsParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class SearchFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SearchField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cFieldsAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cFieldsFieldsParserRuleCall_0_0 = (RuleCall)cFieldsAssignment_0.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cFromFromParserRuleCall_1_0 = (RuleCall)cFromAssignment_1.eContents().get(0);
		private final Assignment cSizeAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cSizeSizeParserRuleCall_2_0 = (RuleCall)cSizeAssignment_2.eContents().get(0);
		private final Assignment cSortAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cSortSortParserRuleCall_3_0 = (RuleCall)cSortAssignment_3.eContents().get(0);
		private final Assignment cQueryAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cQueryQueryParserRuleCall_4_0 = (RuleCall)cQueryAssignment_4.eContents().get(0);
		private final Assignment cFacetsAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cFacetsFacetsParserRuleCall_5_0 = (RuleCall)cFacetsAssignment_5.eContents().get(0);
		private final Assignment cStatsAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cStatsStatsParserRuleCall_6_0 = (RuleCall)cStatsAssignment_6.eContents().get(0);
		
		//SearchField:
		//	fields=Fields | from=From | size=Size | sort=Sort | query=Query | facets=Facets | stats=Stats;
		public ParserRule getRule() { return rule; }

		//fields=Fields | from=From | size=Size | sort=Sort | query=Query | facets=Facets | stats=Stats
		public Alternatives getAlternatives() { return cAlternatives; }

		//fields=Fields
		public Assignment getFieldsAssignment_0() { return cFieldsAssignment_0; }

		//Fields
		public RuleCall getFieldsFieldsParserRuleCall_0_0() { return cFieldsFieldsParserRuleCall_0_0; }

		//from=From
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//From
		public RuleCall getFromFromParserRuleCall_1_0() { return cFromFromParserRuleCall_1_0; }

		//size=Size
		public Assignment getSizeAssignment_2() { return cSizeAssignment_2; }

		//Size
		public RuleCall getSizeSizeParserRuleCall_2_0() { return cSizeSizeParserRuleCall_2_0; }

		//sort=Sort
		public Assignment getSortAssignment_3() { return cSortAssignment_3; }

		//Sort
		public RuleCall getSortSortParserRuleCall_3_0() { return cSortSortParserRuleCall_3_0; }

		//query=Query
		public Assignment getQueryAssignment_4() { return cQueryAssignment_4; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_4_0() { return cQueryQueryParserRuleCall_4_0; }

		//facets=Facets
		public Assignment getFacetsAssignment_5() { return cFacetsAssignment_5; }

		//Facets
		public RuleCall getFacetsFacetsParserRuleCall_5_0() { return cFacetsFacetsParserRuleCall_5_0; }

		//stats=Stats
		public Assignment getStatsAssignment_6() { return cStatsAssignment_6; }

		//Stats
		public RuleCall getStatsStatsParserRuleCall_6_0() { return cStatsStatsParserRuleCall_6_0; }
	}

	public class StatsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stats");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStatsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGroupsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGroupsSTRINGTerminalRuleCall_3_0 = (RuleCall)cGroupsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cGroupsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cGroupsSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cGroupsAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Stats:
		//	"\"stats\"" ":" "[" groups+=STRING ("," groups+=STRING)* "]";
		public ParserRule getRule() { return rule; }

		//"\"stats\"" ":" "[" groups+=STRING ("," groups+=STRING)* "]"
		public Group getGroup() { return cGroup; }

		//"\"stats\""
		public Keyword getStatsKeyword_0() { return cStatsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//groups+=STRING
		public Assignment getGroupsAssignment_3() { return cGroupsAssignment_3; }

		//STRING
		public RuleCall getGroupsSTRINGTerminalRuleCall_3_0() { return cGroupsSTRINGTerminalRuleCall_3_0; }

		//("," groups+=STRING)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//groups+=STRING
		public Assignment getGroupsAssignment_4_1() { return cGroupsAssignment_4_1; }

		//STRING
		public RuleCall getGroupsSTRINGTerminalRuleCall_4_1_0() { return cGroupsSTRINGTerminalRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class FromElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "From");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//From:
		//	"\"from\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"from\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"from\""
		public Keyword getFromKeyword_0() { return cFromKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class SizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Size");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Size:
		//	"\"size\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"size\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"size\""
		public Keyword getSizeKeyword_0() { return cSizeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class SortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Sort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSortKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSortvaluesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSortvaluesSortValueParserRuleCall_3_0 = (RuleCall)cSortvaluesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSortvaluesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSortvaluesSortValueParserRuleCall_4_1_0 = (RuleCall)cSortvaluesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Sort:
		//	"\"sort\"" ":" "[" sortvalues+=SortValue ("," sortvalues+=SortValue)* "]";
		public ParserRule getRule() { return rule; }

		//"\"sort\"" ":" "[" sortvalues+=SortValue ("," sortvalues+=SortValue)* "]"
		public Group getGroup() { return cGroup; }

		//"\"sort\""
		public Keyword getSortKeyword_0() { return cSortKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//sortvalues+=SortValue
		public Assignment getSortvaluesAssignment_3() { return cSortvaluesAssignment_3; }

		//SortValue
		public RuleCall getSortvaluesSortValueParserRuleCall_3_0() { return cSortvaluesSortValueParserRuleCall_3_0; }

		//("," sortvalues+=SortValue)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//sortvalues+=SortValue
		public Assignment getSortvaluesAssignment_4_1() { return cSortvaluesAssignment_4_1; }

		//SortValue
		public RuleCall getSortvaluesSortValueParserRuleCall_4_1_0() { return cSortvaluesSortValueParserRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class SortValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SortValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSortFieldNameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cSortFieldNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cSortFieldNameAssignment_0.eContents().get(0);
		private final Assignment cSortShortObjectAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cSortShortObjectShortSortOjectParserRuleCall_1_0 = (RuleCall)cSortShortObjectAssignment_1.eContents().get(0);
		private final Assignment cSortObjectAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cSortObjectSortObjectParserRuleCall_2_0 = (RuleCall)cSortObjectAssignment_2.eContents().get(0);
		private final Assignment cSortByScoreAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cSortByScore_scoreKeyword_3_0 = (Keyword)cSortByScoreAssignment_3.eContents().get(0);
		
		//SortValue:
		//	sortFieldName=STRING | sortShortObject=ShortSortOject | sortObject=SortObject | sortByScore="\"_score\"";
		public ParserRule getRule() { return rule; }

		//sortFieldName=STRING | sortShortObject=ShortSortOject | sortObject=SortObject | sortByScore="\"_score\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//sortFieldName=STRING
		public Assignment getSortFieldNameAssignment_0() { return cSortFieldNameAssignment_0; }

		//STRING
		public RuleCall getSortFieldNameSTRINGTerminalRuleCall_0_0() { return cSortFieldNameSTRINGTerminalRuleCall_0_0; }

		//sortShortObject=ShortSortOject
		public Assignment getSortShortObjectAssignment_1() { return cSortShortObjectAssignment_1; }

		//ShortSortOject
		public RuleCall getSortShortObjectShortSortOjectParserRuleCall_1_0() { return cSortShortObjectShortSortOjectParserRuleCall_1_0; }

		//sortObject=SortObject
		public Assignment getSortObjectAssignment_2() { return cSortObjectAssignment_2; }

		//SortObject
		public RuleCall getSortObjectSortObjectParserRuleCall_2_0() { return cSortObjectSortObjectParserRuleCall_2_0; }

		//sortByScore="\"_score\""
		public Assignment getSortByScoreAssignment_3() { return cSortByScoreAssignment_3; }

		//"\"_score\""
		public Keyword getSortByScore_scoreKeyword_3_0() { return cSortByScore_scoreKeyword_3_0; }
	}

	public class ShortSortOjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShortSortOject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSortFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSortFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cSortFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAscDescAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAscDescASC_DESCParserRuleCall_3_0 = (RuleCall)cAscDescAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ShortSortOject:
		//	"{" sortFieldName=STRING ":" ascDesc=ASC_DESC "}";
		public ParserRule getRule() { return rule; }

		//"{" sortFieldName=STRING ":" ascDesc=ASC_DESC "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//sortFieldName=STRING
		public Assignment getSortFieldNameAssignment_1() { return cSortFieldNameAssignment_1; }

		//STRING
		public RuleCall getSortFieldNameSTRINGTerminalRuleCall_1_0() { return cSortFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//ascDesc=ASC_DESC
		public Assignment getAscDescAssignment_3() { return cAscDescAssignment_3; }

		//ASC_DESC
		public RuleCall getAscDescASC_DESCParserRuleCall_3_0() { return cAscDescASC_DESCParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SortObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SortObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSortFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSortFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cSortFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSortPropertiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSortPropertiesSortObjectPropertiesObjectParserRuleCall_3_0 = (RuleCall)cSortPropertiesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SortObject:
		//	"{" sortFieldName=STRING ":" sortProperties=SortObjectPropertiesObject "}";
		public ParserRule getRule() { return rule; }

		//"{" sortFieldName=STRING ":" sortProperties=SortObjectPropertiesObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//sortFieldName=STRING
		public Assignment getSortFieldNameAssignment_1() { return cSortFieldNameAssignment_1; }

		//STRING
		public RuleCall getSortFieldNameSTRINGTerminalRuleCall_1_0() { return cSortFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//sortProperties=SortObjectPropertiesObject
		public Assignment getSortPropertiesAssignment_3() { return cSortPropertiesAssignment_3; }

		//SortObjectPropertiesObject
		public RuleCall getSortPropertiesSortObjectPropertiesObjectParserRuleCall_3_0() { return cSortPropertiesSortObjectPropertiesObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SortObjectPropertiesObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SortObjectPropertiesObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSortAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSortSortObjectPropertyParserRuleCall_1_0 = (RuleCall)cSortAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSortAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSortSortObjectPropertyParserRuleCall_2_1_0 = (RuleCall)cSortAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SortObjectPropertiesObject:
		//	"{" sort+=SortObjectProperty ("," sort+=SortObjectProperty)* "}";
		public ParserRule getRule() { return rule; }

		//"{" sort+=SortObjectProperty ("," sort+=SortObjectProperty)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//sort+=SortObjectProperty
		public Assignment getSortAssignment_1() { return cSortAssignment_1; }

		//SortObjectProperty
		public RuleCall getSortSortObjectPropertyParserRuleCall_1_0() { return cSortSortObjectPropertyParserRuleCall_1_0; }

		//("," sort+=SortObjectProperty)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//sort+=SortObjectProperty
		public Assignment getSortAssignment_2_1() { return cSortAssignment_2_1; }

		//SortObjectProperty
		public RuleCall getSortSortObjectPropertyParserRuleCall_2_1_0() { return cSortSortObjectPropertyParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class SortObjectPropertyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SortObjectProperty");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cOrderKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOrderAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cOrderASC_DESCParserRuleCall_0_2_0 = (RuleCall)cOrderAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cModeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cSortModeAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSortModeSORT_MODEParserRuleCall_1_2_0 = (RuleCall)cSortModeAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cMissingKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cMissingAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cMissingSTRINGTerminalRuleCall_2_2_0 = (RuleCall)cMissingAssignment_2_2.eContents().get(0);
		
		//SortObjectProperty:
		//	"\"order\"" ":" order=ASC_DESC | "\"mode\"" ":" sortMode=SORT_MODE | "\"missing\"" ":" missing=STRING;
		public ParserRule getRule() { return rule; }

		//"\"order\"" ":" order=ASC_DESC | "\"mode\"" ":" sortMode=SORT_MODE | "\"missing\"" ":" missing=STRING
		public Alternatives getAlternatives() { return cAlternatives; }

		//"\"order\"" ":" order=ASC_DESC
		public Group getGroup_0() { return cGroup_0; }

		//"\"order\""
		public Keyword getOrderKeyword_0_0() { return cOrderKeyword_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//order=ASC_DESC
		public Assignment getOrderAssignment_0_2() { return cOrderAssignment_0_2; }

		//ASC_DESC
		public RuleCall getOrderASC_DESCParserRuleCall_0_2_0() { return cOrderASC_DESCParserRuleCall_0_2_0; }

		//"\"mode\"" ":" sortMode=SORT_MODE
		public Group getGroup_1() { return cGroup_1; }

		//"\"mode\""
		public Keyword getModeKeyword_1_0() { return cModeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//sortMode=SORT_MODE
		public Assignment getSortModeAssignment_1_2() { return cSortModeAssignment_1_2; }

		//SORT_MODE
		public RuleCall getSortModeSORT_MODEParserRuleCall_1_2_0() { return cSortModeSORT_MODEParserRuleCall_1_2_0; }

		//"\"missing\"" ":" missing=STRING
		public Group getGroup_2() { return cGroup_2; }

		//"\"missing\""
		public Keyword getMissingKeyword_2_0() { return cMissingKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//missing=STRING
		public Assignment getMissingAssignment_2_2() { return cMissingAssignment_2_2; }

		//STRING
		public RuleCall getMissingSTRINGTerminalRuleCall_2_2_0() { return cMissingSTRINGTerminalRuleCall_2_2_0; }
	}

	public class SORT_MODEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SORT_MODE");
		private final Assignment cSortModeAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cSortModeAlternatives_0 = (Alternatives)cSortModeAssignment.eContents().get(0);
		private final Keyword cSortModeMinKeyword_0_0 = (Keyword)cSortModeAlternatives_0.eContents().get(0);
		private final Keyword cSortModeMaxKeyword_0_1 = (Keyword)cSortModeAlternatives_0.eContents().get(1);
		private final Keyword cSortModeAvgKeyword_0_2 = (Keyword)cSortModeAlternatives_0.eContents().get(2);
		private final Keyword cSortModeSumKeyword_0_3 = (Keyword)cSortModeAlternatives_0.eContents().get(3);
		
		//SORT_MODE:
		//	sortMode=("\"min\"" | "\"max\"" | "\"avg\"" | "\'sum\'");
		public ParserRule getRule() { return rule; }

		//sortMode=("\"min\"" | "\"max\"" | "\"avg\"" | "\'sum\'")
		public Assignment getSortModeAssignment() { return cSortModeAssignment; }

		//"\"min\"" | "\"max\"" | "\"avg\"" | "\'sum\'"
		public Alternatives getSortModeAlternatives_0() { return cSortModeAlternatives_0; }

		//"\"min\""
		public Keyword getSortModeMinKeyword_0_0() { return cSortModeMinKeyword_0_0; }

		//"\"max\""
		public Keyword getSortModeMaxKeyword_0_1() { return cSortModeMaxKeyword_0_1; }

		//"\"avg\""
		public Keyword getSortModeAvgKeyword_0_2() { return cSortModeAvgKeyword_0_2; }

		//"\'sum\'"
		public Keyword getSortModeSumKeyword_0_3() { return cSortModeSumKeyword_0_3; }
	}

	public class ASC_DESCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ASC_DESC");
		private final Assignment cAscDescAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cAscDescAlternatives_0 = (Alternatives)cAscDescAssignment.eContents().get(0);
		private final Keyword cAscDescAscKeyword_0_0 = (Keyword)cAscDescAlternatives_0.eContents().get(0);
		private final Keyword cAscDescDescKeyword_0_1 = (Keyword)cAscDescAlternatives_0.eContents().get(1);
		
		//ASC_DESC:
		//	ascDesc=("\"asc\"" | "\"desc\"");
		public ParserRule getRule() { return rule; }

		//ascDesc=("\"asc\"" | "\"desc\"")
		public Assignment getAscDescAssignment() { return cAscDescAssignment; }

		//"\"asc\"" | "\"desc\""
		public Alternatives getAscDescAlternatives_0() { return cAscDescAlternatives_0; }

		//"\"asc\""
		public Keyword getAscDescAscKeyword_0_0() { return cAscDescAscKeyword_0_0; }

		//"\"desc\""
		public Keyword getAscDescDescKeyword_0_1() { return cAscDescDescKeyword_0_1; }
	}

	public class FieldsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fields");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSelectfieldsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSelectfieldsArrayParserRuleCall_2_0 = (RuleCall)cSelectfieldsAssignment_2.eContents().get(0);
		
		//Fields:
		//	"\"fields\"" ":" selectfields=Array;
		public ParserRule getRule() { return rule; }

		//"\"fields\"" ":" selectfields=Array
		public Group getGroup() { return cGroup; }

		//"\"fields\""
		public Keyword getFieldsKeyword_0() { return cFieldsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//selectfields=Array
		public Assignment getSelectfieldsAssignment_2() { return cSelectfieldsAssignment_2; }

		//Array
		public RuleCall getSelectfieldsArrayParserRuleCall_2_0() { return cSelectfieldsArrayParserRuleCall_2_0; }
	}

	public class QueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Query");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQueryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cQueryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQueryQueryObjectParserRuleCall_2_0 = (RuleCall)cQueryAssignment_2.eContents().get(0);
		
		//Query:
		//	"\"query\"" ":" query=QueryObject;
		public ParserRule getRule() { return rule; }

		//"\"query\"" ":" query=QueryObject
		public Group getGroup() { return cGroup; }

		//"\"query\""
		public Keyword getQueryKeyword_0() { return cQueryKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//query=QueryObject
		public Assignment getQueryAssignment_2() { return cQueryAssignment_2; }

		//QueryObject
		public RuleCall getQueryQueryObjectParserRuleCall_2_0() { return cQueryQueryObjectParserRuleCall_2_0; }
	}

	public class FilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Filter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFilterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFilterFilterObjectParserRuleCall_2_0 = (RuleCall)cFilterAssignment_2.eContents().get(0);
		
		//Filter:
		//	"\"filter\"" ":" filter=FilterObject;
		public ParserRule getRule() { return rule; }

		//"\"filter\"" ":" filter=FilterObject
		public Group getGroup() { return cGroup; }

		//"\"filter\""
		public Keyword getFilterKeyword_0() { return cFilterKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//filter=FilterObject
		public Assignment getFilterAssignment_2() { return cFilterAssignment_2; }

		//FilterObject
		public RuleCall getFilterFilterObjectParserRuleCall_2_0() { return cFilterFilterObjectParserRuleCall_2_0; }
	}

	public class FilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFilterTypeParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FilterObject:
		//	"{" FilterType "}";
		public ParserRule getRule() { return rule; }

		//"{" FilterType "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//FilterType
		public RuleCall getFilterTypeParserRuleCall_1() { return cFilterTypeParserRuleCall_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class FilterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cAndAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cAndAndFilterParserRuleCall_0_0 = (RuleCall)cAndAssignment_0.eContents().get(0);
		private final Assignment cBoolAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cBoolBoolFilterParserRuleCall_1_0 = (RuleCall)cBoolAssignment_1.eContents().get(0);
		private final Assignment cExistsAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cExistsExistsFilterParserRuleCall_2_0 = (RuleCall)cExistsAssignment_2.eContents().get(0);
		private final Assignment cGeoBoundingBoxAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cGeoBoundingBoxGeoBoundingBoxFilterParserRuleCall_3_0 = (RuleCall)cGeoBoundingBoxAssignment_3.eContents().get(0);
		private final Assignment cGeoDistanceAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cGeoDistanceGeoDistanceFilterParserRuleCall_4_0 = (RuleCall)cGeoDistanceAssignment_4.eContents().get(0);
		private final Assignment cGeoDistanceRangeAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cGeoDistanceRangeGeoDistanceRangeFilterParserRuleCall_5_0 = (RuleCall)cGeoDistanceRangeAssignment_5.eContents().get(0);
		private final Assignment cGeoPolygonAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cGeoPolygonGeoPolygonFilterParserRuleCall_6_0 = (RuleCall)cGeoPolygonAssignment_6.eContents().get(0);
		private final Assignment cGeoShapeAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cGeoShapeGeoShapeFilterParserRuleCall_7_0 = (RuleCall)cGeoShapeAssignment_7.eContents().get(0);
		private final Assignment cGeoHashCellAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cGeoHashCellGeohashCellFilterParserRuleCall_8_0 = (RuleCall)cGeoHashCellAssignment_8.eContents().get(0);
		private final Assignment cHasChildAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cHasChildHasChildFilterParserRuleCall_9_0 = (RuleCall)cHasChildAssignment_9.eContents().get(0);
		private final Assignment cHasParentAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final RuleCall cHasParentHasParentFilterParserRuleCall_10_0 = (RuleCall)cHasParentAssignment_10.eContents().get(0);
		private final Assignment cIdsAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final RuleCall cIdsIdsFilterParserRuleCall_11_0 = (RuleCall)cIdsAssignment_11.eContents().get(0);
		private final Assignment cIndicesAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final RuleCall cIndicesIndicesFilterParserRuleCall_12_0 = (RuleCall)cIndicesAssignment_12.eContents().get(0);
		private final Assignment cLimitAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final RuleCall cLimitLimitFilterParserRuleCall_13_0 = (RuleCall)cLimitAssignment_13.eContents().get(0);
		private final Assignment cMatchAllAssignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final RuleCall cMatchAllMatchAllFilterParserRuleCall_14_0 = (RuleCall)cMatchAllAssignment_14.eContents().get(0);
		private final Assignment cMissingAssignment_15 = (Assignment)cAlternatives.eContents().get(15);
		private final RuleCall cMissingMissingFilterParserRuleCall_15_0 = (RuleCall)cMissingAssignment_15.eContents().get(0);
		private final Assignment cNestedAssignment_16 = (Assignment)cAlternatives.eContents().get(16);
		private final RuleCall cNestedNestedFilterParserRuleCall_16_0 = (RuleCall)cNestedAssignment_16.eContents().get(0);
		private final Assignment cNotAssignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final RuleCall cNotNotFilterParserRuleCall_17_0 = (RuleCall)cNotAssignment_17.eContents().get(0);
		private final Assignment cOrAssignment_18 = (Assignment)cAlternatives.eContents().get(18);
		private final RuleCall cOrOrFilterParserRuleCall_18_0 = (RuleCall)cOrAssignment_18.eContents().get(0);
		private final Assignment cPrefixAssignment_19 = (Assignment)cAlternatives.eContents().get(19);
		private final RuleCall cPrefixPrefixFilterParserRuleCall_19_0 = (RuleCall)cPrefixAssignment_19.eContents().get(0);
		private final Assignment cQueryAssignment_20 = (Assignment)cAlternatives.eContents().get(20);
		private final RuleCall cQueryQueryFilterParserRuleCall_20_0 = (RuleCall)cQueryAssignment_20.eContents().get(0);
		private final Assignment cRegexpAssignment_21 = (Assignment)cAlternatives.eContents().get(21);
		private final RuleCall cRegexpRegexpFilterParserRuleCall_21_0 = (RuleCall)cRegexpAssignment_21.eContents().get(0);
		private final Assignment cScriptAssignment_22 = (Assignment)cAlternatives.eContents().get(22);
		private final RuleCall cScriptScriptFilterParserRuleCall_22_0 = (RuleCall)cScriptAssignment_22.eContents().get(0);
		private final Assignment cTermAssignment_23 = (Assignment)cAlternatives.eContents().get(23);
		private final RuleCall cTermTermFilterParserRuleCall_23_0 = (RuleCall)cTermAssignment_23.eContents().get(0);
		private final Assignment cTermsAssignment_24 = (Assignment)cAlternatives.eContents().get(24);
		private final RuleCall cTermsTermsFilterParserRuleCall_24_0 = (RuleCall)cTermsAssignment_24.eContents().get(0);
		private final Assignment cTypeAssignment_25 = (Assignment)cAlternatives.eContents().get(25);
		private final RuleCall cTypeTypeFilterParserRuleCall_25_0 = (RuleCall)cTypeAssignment_25.eContents().get(0);
		
		//FilterType:
		//	and=AndFilter | bool=BoolFilter | exists=ExistsFilter | geoBoundingBox=GeoBoundingBoxFilter |
		//	geoDistance=GeoDistanceFilter | geoDistanceRange=GeoDistanceRangeFilter | geoPolygon=GeoPolygonFilter |
		//	geoShape=GeoShapeFilter | geoHashCell=GeohashCellFilter | hasChild=HasChildFilter | hasParent=HasParentFilter |
		//	ids=IdsFilter | indices=IndicesFilter | limit=LimitFilter | matchAll=MatchAllFilter | missing=MissingFilter |
		//	nested=NestedFilter | not=NotFilter | or=OrFilter | prefix=PrefixFilter | query=QueryFilter | regexp=RegexpFilter |
		//	script=ScriptFilter | term=TermFilter | terms=TermsFilter | type=TypeFilter;
		public ParserRule getRule() { return rule; }

		//and=AndFilter | bool=BoolFilter | exists=ExistsFilter | geoBoundingBox=GeoBoundingBoxFilter |
		//geoDistance=GeoDistanceFilter | geoDistanceRange=GeoDistanceRangeFilter | geoPolygon=GeoPolygonFilter |
		//geoShape=GeoShapeFilter | geoHashCell=GeohashCellFilter | hasChild=HasChildFilter | hasParent=HasParentFilter |
		//ids=IdsFilter | indices=IndicesFilter | limit=LimitFilter | matchAll=MatchAllFilter | missing=MissingFilter |
		//nested=NestedFilter | not=NotFilter | or=OrFilter | prefix=PrefixFilter | query=QueryFilter | regexp=RegexpFilter |
		//script=ScriptFilter | term=TermFilter | terms=TermsFilter | type=TypeFilter
		public Alternatives getAlternatives() { return cAlternatives; }

		//and=AndFilter
		public Assignment getAndAssignment_0() { return cAndAssignment_0; }

		//AndFilter
		public RuleCall getAndAndFilterParserRuleCall_0_0() { return cAndAndFilterParserRuleCall_0_0; }

		//bool=BoolFilter
		public Assignment getBoolAssignment_1() { return cBoolAssignment_1; }

		//BoolFilter
		public RuleCall getBoolBoolFilterParserRuleCall_1_0() { return cBoolBoolFilterParserRuleCall_1_0; }

		//exists=ExistsFilter
		public Assignment getExistsAssignment_2() { return cExistsAssignment_2; }

		//ExistsFilter
		public RuleCall getExistsExistsFilterParserRuleCall_2_0() { return cExistsExistsFilterParserRuleCall_2_0; }

		//geoBoundingBox=GeoBoundingBoxFilter
		public Assignment getGeoBoundingBoxAssignment_3() { return cGeoBoundingBoxAssignment_3; }

		//GeoBoundingBoxFilter
		public RuleCall getGeoBoundingBoxGeoBoundingBoxFilterParserRuleCall_3_0() { return cGeoBoundingBoxGeoBoundingBoxFilterParserRuleCall_3_0; }

		//geoDistance=GeoDistanceFilter
		public Assignment getGeoDistanceAssignment_4() { return cGeoDistanceAssignment_4; }

		//GeoDistanceFilter
		public RuleCall getGeoDistanceGeoDistanceFilterParserRuleCall_4_0() { return cGeoDistanceGeoDistanceFilterParserRuleCall_4_0; }

		//geoDistanceRange=GeoDistanceRangeFilter
		public Assignment getGeoDistanceRangeAssignment_5() { return cGeoDistanceRangeAssignment_5; }

		//GeoDistanceRangeFilter
		public RuleCall getGeoDistanceRangeGeoDistanceRangeFilterParserRuleCall_5_0() { return cGeoDistanceRangeGeoDistanceRangeFilterParserRuleCall_5_0; }

		//geoPolygon=GeoPolygonFilter
		public Assignment getGeoPolygonAssignment_6() { return cGeoPolygonAssignment_6; }

		//GeoPolygonFilter
		public RuleCall getGeoPolygonGeoPolygonFilterParserRuleCall_6_0() { return cGeoPolygonGeoPolygonFilterParserRuleCall_6_0; }

		//geoShape=GeoShapeFilter
		public Assignment getGeoShapeAssignment_7() { return cGeoShapeAssignment_7; }

		//GeoShapeFilter
		public RuleCall getGeoShapeGeoShapeFilterParserRuleCall_7_0() { return cGeoShapeGeoShapeFilterParserRuleCall_7_0; }

		//geoHashCell=GeohashCellFilter
		public Assignment getGeoHashCellAssignment_8() { return cGeoHashCellAssignment_8; }

		//GeohashCellFilter
		public RuleCall getGeoHashCellGeohashCellFilterParserRuleCall_8_0() { return cGeoHashCellGeohashCellFilterParserRuleCall_8_0; }

		//hasChild=HasChildFilter
		public Assignment getHasChildAssignment_9() { return cHasChildAssignment_9; }

		//HasChildFilter
		public RuleCall getHasChildHasChildFilterParserRuleCall_9_0() { return cHasChildHasChildFilterParserRuleCall_9_0; }

		//hasParent=HasParentFilter
		public Assignment getHasParentAssignment_10() { return cHasParentAssignment_10; }

		//HasParentFilter
		public RuleCall getHasParentHasParentFilterParserRuleCall_10_0() { return cHasParentHasParentFilterParserRuleCall_10_0; }

		//ids=IdsFilter
		public Assignment getIdsAssignment_11() { return cIdsAssignment_11; }

		//IdsFilter
		public RuleCall getIdsIdsFilterParserRuleCall_11_0() { return cIdsIdsFilterParserRuleCall_11_0; }

		//indices=IndicesFilter
		public Assignment getIndicesAssignment_12() { return cIndicesAssignment_12; }

		//IndicesFilter
		public RuleCall getIndicesIndicesFilterParserRuleCall_12_0() { return cIndicesIndicesFilterParserRuleCall_12_0; }

		//limit=LimitFilter
		public Assignment getLimitAssignment_13() { return cLimitAssignment_13; }

		//LimitFilter
		public RuleCall getLimitLimitFilterParserRuleCall_13_0() { return cLimitLimitFilterParserRuleCall_13_0; }

		//matchAll=MatchAllFilter
		public Assignment getMatchAllAssignment_14() { return cMatchAllAssignment_14; }

		//MatchAllFilter
		public RuleCall getMatchAllMatchAllFilterParserRuleCall_14_0() { return cMatchAllMatchAllFilterParserRuleCall_14_0; }

		//missing=MissingFilter
		public Assignment getMissingAssignment_15() { return cMissingAssignment_15; }

		//MissingFilter
		public RuleCall getMissingMissingFilterParserRuleCall_15_0() { return cMissingMissingFilterParserRuleCall_15_0; }

		//nested=NestedFilter
		public Assignment getNestedAssignment_16() { return cNestedAssignment_16; }

		//NestedFilter
		public RuleCall getNestedNestedFilterParserRuleCall_16_0() { return cNestedNestedFilterParserRuleCall_16_0; }

		//not=NotFilter
		public Assignment getNotAssignment_17() { return cNotAssignment_17; }

		//NotFilter
		public RuleCall getNotNotFilterParserRuleCall_17_0() { return cNotNotFilterParserRuleCall_17_0; }

		//or=OrFilter
		public Assignment getOrAssignment_18() { return cOrAssignment_18; }

		//OrFilter
		public RuleCall getOrOrFilterParserRuleCall_18_0() { return cOrOrFilterParserRuleCall_18_0; }

		//prefix=PrefixFilter
		public Assignment getPrefixAssignment_19() { return cPrefixAssignment_19; }

		//PrefixFilter
		public RuleCall getPrefixPrefixFilterParserRuleCall_19_0() { return cPrefixPrefixFilterParserRuleCall_19_0; }

		//query=QueryFilter
		public Assignment getQueryAssignment_20() { return cQueryAssignment_20; }

		//QueryFilter
		public RuleCall getQueryQueryFilterParserRuleCall_20_0() { return cQueryQueryFilterParserRuleCall_20_0; }

		//regexp=RegexpFilter
		public Assignment getRegexpAssignment_21() { return cRegexpAssignment_21; }

		//RegexpFilter
		public RuleCall getRegexpRegexpFilterParserRuleCall_21_0() { return cRegexpRegexpFilterParserRuleCall_21_0; }

		//script=ScriptFilter
		public Assignment getScriptAssignment_22() { return cScriptAssignment_22; }

		//ScriptFilter
		public RuleCall getScriptScriptFilterParserRuleCall_22_0() { return cScriptScriptFilterParserRuleCall_22_0; }

		//term=TermFilter
		public Assignment getTermAssignment_23() { return cTermAssignment_23; }

		//TermFilter
		public RuleCall getTermTermFilterParserRuleCall_23_0() { return cTermTermFilterParserRuleCall_23_0; }

		//terms=TermsFilter
		public Assignment getTermsAssignment_24() { return cTermsAssignment_24; }

		//TermsFilter
		public RuleCall getTermsTermsFilterParserRuleCall_24_0() { return cTermsTermsFilterParserRuleCall_24_0; }

		//type=TypeFilter
		public Assignment getTypeAssignment_25() { return cTypeAssignment_25; }

		//TypeFilter
		public RuleCall getTypeTypeFilterParserRuleCall_25_0() { return cTypeTypeFilterParserRuleCall_25_0; }
	}

	public class QueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cQueryTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cQueryTypeQueryTypeParserRuleCall_1_0 = (RuleCall)cQueryTypeAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QueryObject:
		//	"{" queryType=QueryType "}";
		public ParserRule getRule() { return rule; }

		//"{" queryType=QueryType "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//queryType=QueryType
		public Assignment getQueryTypeAssignment_1() { return cQueryTypeAssignment_1; }

		//QueryType
		public RuleCall getQueryTypeQueryTypeParserRuleCall_1_0() { return cQueryTypeQueryTypeParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class QueryTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMatchAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMatchMatchQueryParserRuleCall_0_0 = (RuleCall)cMatchAssignment_0.eContents().get(0);
		private final Assignment cMultiMatchAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cMultiMatchMultiMatchQueryParserRuleCall_1_0 = (RuleCall)cMultiMatchAssignment_1.eContents().get(0);
		private final Assignment cBoolAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cBoolBoolQueryParserRuleCall_2_0 = (RuleCall)cBoolAssignment_2.eContents().get(0);
		private final Assignment cCommonAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cCommonCommonQueryParserRuleCall_3_0 = (RuleCall)cCommonAssignment_3.eContents().get(0);
		private final Assignment cConstantScoreAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cConstantScoreConstantScoreQueryParserRuleCall_4_0 = (RuleCall)cConstantScoreAssignment_4.eContents().get(0);
		private final Assignment cDisMaxAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cDisMaxDisMaxQueryParserRuleCall_5_0 = (RuleCall)cDisMaxAssignment_5.eContents().get(0);
		private final Assignment cFilteredAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cFilteredFilteredQueryParserRuleCall_6_0 = (RuleCall)cFilteredAssignment_6.eContents().get(0);
		private final Assignment cFuzzyLikeThisAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cFuzzyLikeThisFuzzyLikeThisQueryParserRuleCall_7_0 = (RuleCall)cFuzzyLikeThisAssignment_7.eContents().get(0);
		private final Assignment cFuzzyLikeThisFieldAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cFuzzyLikeThisFieldFuzzyLikeThisFieldQueryParserRuleCall_8_0 = (RuleCall)cFuzzyLikeThisFieldAssignment_8.eContents().get(0);
		private final Assignment cGeoshapeAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cGeoshapeGeoshapeQueryParserRuleCall_9_0 = (RuleCall)cGeoshapeAssignment_9.eContents().get(0);
		private final Assignment cHasChildAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final RuleCall cHasChildHasChildQueryParserRuleCall_10_0 = (RuleCall)cHasChildAssignment_10.eContents().get(0);
		private final Assignment cHasParentAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final RuleCall cHasParentHasParentQueryParserRuleCall_11_0 = (RuleCall)cHasParentAssignment_11.eContents().get(0);
		private final Assignment cIdsAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final RuleCall cIdsIdsQueryParserRuleCall_12_0 = (RuleCall)cIdsAssignment_12.eContents().get(0);
		private final Assignment cIndicesAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final RuleCall cIndicesIndicesQueryParserRuleCall_13_0 = (RuleCall)cIndicesAssignment_13.eContents().get(0);
		private final Assignment cMatchAllAssignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final RuleCall cMatchAllMatchAllQueryParserRuleCall_14_0 = (RuleCall)cMatchAllAssignment_14.eContents().get(0);
		private final Assignment cMoreLikeThisAssignment_15 = (Assignment)cAlternatives.eContents().get(15);
		private final RuleCall cMoreLikeThisMoreLikeThisQueryParserRuleCall_15_0 = (RuleCall)cMoreLikeThisAssignment_15.eContents().get(0);
		private final Assignment cMoreLikeThisFieldAssignment_16 = (Assignment)cAlternatives.eContents().get(16);
		private final RuleCall cMoreLikeThisFieldMoreLikeThisFieldQueryParserRuleCall_16_0 = (RuleCall)cMoreLikeThisFieldAssignment_16.eContents().get(0);
		private final Assignment cNestedAssignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final RuleCall cNestedNestedQueryParserRuleCall_17_0 = (RuleCall)cNestedAssignment_17.eContents().get(0);
		private final Assignment cQueryStringAssignment_18 = (Assignment)cAlternatives.eContents().get(18);
		private final RuleCall cQueryStringQueryStringQueryParserRuleCall_18_0 = (RuleCall)cQueryStringAssignment_18.eContents().get(0);
		private final Assignment cSimpleQueryAssignment_19 = (Assignment)cAlternatives.eContents().get(19);
		private final RuleCall cSimpleQuerySimpleQueryStringQueryParserRuleCall_19_0 = (RuleCall)cSimpleQueryAssignment_19.eContents().get(0);
		private final Assignment cSpanFirstAssignment_20 = (Assignment)cAlternatives.eContents().get(20);
		private final RuleCall cSpanFirstSpanFirstQueryParserRuleCall_20_0 = (RuleCall)cSpanFirstAssignment_20.eContents().get(0);
		private final Assignment cSpanMultiAssignment_21 = (Assignment)cAlternatives.eContents().get(21);
		private final RuleCall cSpanMultiSpanMultiQueryParserRuleCall_21_0 = (RuleCall)cSpanMultiAssignment_21.eContents().get(0);
		private final Assignment cSpanNearAssignment_22 = (Assignment)cAlternatives.eContents().get(22);
		private final RuleCall cSpanNearSpanNearQueryParserRuleCall_22_0 = (RuleCall)cSpanNearAssignment_22.eContents().get(0);
		private final Assignment cSpanNotAssignment_23 = (Assignment)cAlternatives.eContents().get(23);
		private final RuleCall cSpanNotSpanNotQueryParserRuleCall_23_0 = (RuleCall)cSpanNotAssignment_23.eContents().get(0);
		private final Assignment cSpanOrAssignment_24 = (Assignment)cAlternatives.eContents().get(24);
		private final RuleCall cSpanOrSpanOrQueryParserRuleCall_24_0 = (RuleCall)cSpanOrAssignment_24.eContents().get(0);
		private final Assignment cSpanTermAssignment_25 = (Assignment)cAlternatives.eContents().get(25);
		private final RuleCall cSpanTermSpanTermQueryParserRuleCall_25_0 = (RuleCall)cSpanTermAssignment_25.eContents().get(0);
		private final Assignment cFuzzyAssignment_26 = (Assignment)cAlternatives.eContents().get(26);
		private final RuleCall cFuzzyFuzzyQueryParserRuleCall_26_0 = (RuleCall)cFuzzyAssignment_26.eContents().get(0);
		private final Assignment cPrefixAssignment_27 = (Assignment)cAlternatives.eContents().get(27);
		private final RuleCall cPrefixPrefixQueryParserRuleCall_27_0 = (RuleCall)cPrefixAssignment_27.eContents().get(0);
		private final Assignment cTermAssignment_28 = (Assignment)cAlternatives.eContents().get(28);
		private final RuleCall cTermTermQueryParserRuleCall_28_0 = (RuleCall)cTermAssignment_28.eContents().get(0);
		private final Assignment cRangeAssignment_29 = (Assignment)cAlternatives.eContents().get(29);
		private final RuleCall cRangeRangeQueryParserRuleCall_29_0 = (RuleCall)cRangeAssignment_29.eContents().get(0);
		private final Assignment cRegexpAssignment_30 = (Assignment)cAlternatives.eContents().get(30);
		private final RuleCall cRegexpRegexpQueryParserRuleCall_30_0 = (RuleCall)cRegexpAssignment_30.eContents().get(0);
		private final Assignment cWildcardAssignment_31 = (Assignment)cAlternatives.eContents().get(31);
		private final RuleCall cWildcardWildcardQueryParserRuleCall_31_0 = (RuleCall)cWildcardAssignment_31.eContents().get(0);
		private final Assignment cTermsAssignment_32 = (Assignment)cAlternatives.eContents().get(32);
		private final RuleCall cTermsTermsQueryParserRuleCall_32_0 = (RuleCall)cTermsAssignment_32.eContents().get(0);
		private final Assignment cTopChildrenAssignment_33 = (Assignment)cAlternatives.eContents().get(33);
		private final RuleCall cTopChildrenTopChildrenQueryParserRuleCall_33_0 = (RuleCall)cTopChildrenAssignment_33.eContents().get(0);
		
		//QueryType:
		//	match=MatchQuery | multiMatch=MultiMatchQuery | bool=BoolQuery | common=CommonQuery | constantScore=ConstantScoreQuery
		//	| disMax=DisMaxQuery | filtered=FilteredQuery | fuzzyLikeThis=FuzzyLikeThisQuery |
		//	fuzzyLikeThisField=FuzzyLikeThisFieldQuery | geoshape=GeoshapeQuery | hasChild=HasChildQuery |
		//	hasParent=HasParentQuery | ids=IdsQuery | indices=IndicesQuery | matchAll=MatchAllQuery |
		//	moreLikeThis=MoreLikeThisQuery | moreLikeThisField=MoreLikeThisFieldQuery | nested=NestedQuery |
		//	queryString=QueryStringQuery | simpleQuery=SimpleQueryStringQuery | spanFirst=SpanFirstQuery |
		//	spanMulti=SpanMultiQuery | spanNear=SpanNearQuery | spanNot=SpanNotQuery | spanOr=SpanOrQuery | spanTerm=SpanTermQuery
		//	| fuzzy=FuzzyQuery | prefix=PrefixQuery | term=TermQuery | range=RangeQuery | regexp=RegexpQuery |
		//	wildcard=WildcardQuery | terms=TermsQuery | topChildren=TopChildrenQuery;
		public ParserRule getRule() { return rule; }

		//match=MatchQuery | multiMatch=MultiMatchQuery | bool=BoolQuery | common=CommonQuery | constantScore=ConstantScoreQuery |
		//disMax=DisMaxQuery | filtered=FilteredQuery | fuzzyLikeThis=FuzzyLikeThisQuery |
		//fuzzyLikeThisField=FuzzyLikeThisFieldQuery | geoshape=GeoshapeQuery | hasChild=HasChildQuery | hasParent=HasParentQuery
		//| ids=IdsQuery | indices=IndicesQuery | matchAll=MatchAllQuery | moreLikeThis=MoreLikeThisQuery |
		//moreLikeThisField=MoreLikeThisFieldQuery | nested=NestedQuery | queryString=QueryStringQuery |
		//simpleQuery=SimpleQueryStringQuery | spanFirst=SpanFirstQuery | spanMulti=SpanMultiQuery | spanNear=SpanNearQuery |
		//spanNot=SpanNotQuery | spanOr=SpanOrQuery | spanTerm=SpanTermQuery | fuzzy=FuzzyQuery | prefix=PrefixQuery |
		//term=TermQuery | range=RangeQuery | regexp=RegexpQuery | wildcard=WildcardQuery | terms=TermsQuery |
		//topChildren=TopChildrenQuery
		public Alternatives getAlternatives() { return cAlternatives; }

		//match=MatchQuery
		public Assignment getMatchAssignment_0() { return cMatchAssignment_0; }

		//MatchQuery
		public RuleCall getMatchMatchQueryParserRuleCall_0_0() { return cMatchMatchQueryParserRuleCall_0_0; }

		//multiMatch=MultiMatchQuery
		public Assignment getMultiMatchAssignment_1() { return cMultiMatchAssignment_1; }

		//MultiMatchQuery
		public RuleCall getMultiMatchMultiMatchQueryParserRuleCall_1_0() { return cMultiMatchMultiMatchQueryParserRuleCall_1_0; }

		//bool=BoolQuery
		public Assignment getBoolAssignment_2() { return cBoolAssignment_2; }

		//BoolQuery
		public RuleCall getBoolBoolQueryParserRuleCall_2_0() { return cBoolBoolQueryParserRuleCall_2_0; }

		//common=CommonQuery
		public Assignment getCommonAssignment_3() { return cCommonAssignment_3; }

		//CommonQuery
		public RuleCall getCommonCommonQueryParserRuleCall_3_0() { return cCommonCommonQueryParserRuleCall_3_0; }

		//constantScore=ConstantScoreQuery
		public Assignment getConstantScoreAssignment_4() { return cConstantScoreAssignment_4; }

		//ConstantScoreQuery
		public RuleCall getConstantScoreConstantScoreQueryParserRuleCall_4_0() { return cConstantScoreConstantScoreQueryParserRuleCall_4_0; }

		//disMax=DisMaxQuery
		public Assignment getDisMaxAssignment_5() { return cDisMaxAssignment_5; }

		//DisMaxQuery
		public RuleCall getDisMaxDisMaxQueryParserRuleCall_5_0() { return cDisMaxDisMaxQueryParserRuleCall_5_0; }

		//filtered=FilteredQuery
		public Assignment getFilteredAssignment_6() { return cFilteredAssignment_6; }

		//FilteredQuery
		public RuleCall getFilteredFilteredQueryParserRuleCall_6_0() { return cFilteredFilteredQueryParserRuleCall_6_0; }

		//fuzzyLikeThis=FuzzyLikeThisQuery
		public Assignment getFuzzyLikeThisAssignment_7() { return cFuzzyLikeThisAssignment_7; }

		//FuzzyLikeThisQuery
		public RuleCall getFuzzyLikeThisFuzzyLikeThisQueryParserRuleCall_7_0() { return cFuzzyLikeThisFuzzyLikeThisQueryParserRuleCall_7_0; }

		//fuzzyLikeThisField=FuzzyLikeThisFieldQuery
		public Assignment getFuzzyLikeThisFieldAssignment_8() { return cFuzzyLikeThisFieldAssignment_8; }

		//FuzzyLikeThisFieldQuery
		public RuleCall getFuzzyLikeThisFieldFuzzyLikeThisFieldQueryParserRuleCall_8_0() { return cFuzzyLikeThisFieldFuzzyLikeThisFieldQueryParserRuleCall_8_0; }

		//geoshape=GeoshapeQuery
		public Assignment getGeoshapeAssignment_9() { return cGeoshapeAssignment_9; }

		//GeoshapeQuery
		public RuleCall getGeoshapeGeoshapeQueryParserRuleCall_9_0() { return cGeoshapeGeoshapeQueryParserRuleCall_9_0; }

		//hasChild=HasChildQuery
		public Assignment getHasChildAssignment_10() { return cHasChildAssignment_10; }

		//HasChildQuery
		public RuleCall getHasChildHasChildQueryParserRuleCall_10_0() { return cHasChildHasChildQueryParserRuleCall_10_0; }

		//hasParent=HasParentQuery
		public Assignment getHasParentAssignment_11() { return cHasParentAssignment_11; }

		//HasParentQuery
		public RuleCall getHasParentHasParentQueryParserRuleCall_11_0() { return cHasParentHasParentQueryParserRuleCall_11_0; }

		//ids=IdsQuery
		public Assignment getIdsAssignment_12() { return cIdsAssignment_12; }

		//IdsQuery
		public RuleCall getIdsIdsQueryParserRuleCall_12_0() { return cIdsIdsQueryParserRuleCall_12_0; }

		//indices=IndicesQuery
		public Assignment getIndicesAssignment_13() { return cIndicesAssignment_13; }

		//IndicesQuery
		public RuleCall getIndicesIndicesQueryParserRuleCall_13_0() { return cIndicesIndicesQueryParserRuleCall_13_0; }

		//matchAll=MatchAllQuery
		public Assignment getMatchAllAssignment_14() { return cMatchAllAssignment_14; }

		//MatchAllQuery
		public RuleCall getMatchAllMatchAllQueryParserRuleCall_14_0() { return cMatchAllMatchAllQueryParserRuleCall_14_0; }

		//moreLikeThis=MoreLikeThisQuery
		public Assignment getMoreLikeThisAssignment_15() { return cMoreLikeThisAssignment_15; }

		//MoreLikeThisQuery
		public RuleCall getMoreLikeThisMoreLikeThisQueryParserRuleCall_15_0() { return cMoreLikeThisMoreLikeThisQueryParserRuleCall_15_0; }

		//moreLikeThisField=MoreLikeThisFieldQuery
		public Assignment getMoreLikeThisFieldAssignment_16() { return cMoreLikeThisFieldAssignment_16; }

		//MoreLikeThisFieldQuery
		public RuleCall getMoreLikeThisFieldMoreLikeThisFieldQueryParserRuleCall_16_0() { return cMoreLikeThisFieldMoreLikeThisFieldQueryParserRuleCall_16_0; }

		//nested=NestedQuery
		public Assignment getNestedAssignment_17() { return cNestedAssignment_17; }

		//NestedQuery
		public RuleCall getNestedNestedQueryParserRuleCall_17_0() { return cNestedNestedQueryParserRuleCall_17_0; }

		//queryString=QueryStringQuery
		public Assignment getQueryStringAssignment_18() { return cQueryStringAssignment_18; }

		//QueryStringQuery
		public RuleCall getQueryStringQueryStringQueryParserRuleCall_18_0() { return cQueryStringQueryStringQueryParserRuleCall_18_0; }

		//simpleQuery=SimpleQueryStringQuery
		public Assignment getSimpleQueryAssignment_19() { return cSimpleQueryAssignment_19; }

		//SimpleQueryStringQuery
		public RuleCall getSimpleQuerySimpleQueryStringQueryParserRuleCall_19_0() { return cSimpleQuerySimpleQueryStringQueryParserRuleCall_19_0; }

		//spanFirst=SpanFirstQuery
		public Assignment getSpanFirstAssignment_20() { return cSpanFirstAssignment_20; }

		//SpanFirstQuery
		public RuleCall getSpanFirstSpanFirstQueryParserRuleCall_20_0() { return cSpanFirstSpanFirstQueryParserRuleCall_20_0; }

		//spanMulti=SpanMultiQuery
		public Assignment getSpanMultiAssignment_21() { return cSpanMultiAssignment_21; }

		//SpanMultiQuery
		public RuleCall getSpanMultiSpanMultiQueryParserRuleCall_21_0() { return cSpanMultiSpanMultiQueryParserRuleCall_21_0; }

		//spanNear=SpanNearQuery
		public Assignment getSpanNearAssignment_22() { return cSpanNearAssignment_22; }

		//SpanNearQuery
		public RuleCall getSpanNearSpanNearQueryParserRuleCall_22_0() { return cSpanNearSpanNearQueryParserRuleCall_22_0; }

		//spanNot=SpanNotQuery
		public Assignment getSpanNotAssignment_23() { return cSpanNotAssignment_23; }

		//SpanNotQuery
		public RuleCall getSpanNotSpanNotQueryParserRuleCall_23_0() { return cSpanNotSpanNotQueryParserRuleCall_23_0; }

		//spanOr=SpanOrQuery
		public Assignment getSpanOrAssignment_24() { return cSpanOrAssignment_24; }

		//SpanOrQuery
		public RuleCall getSpanOrSpanOrQueryParserRuleCall_24_0() { return cSpanOrSpanOrQueryParserRuleCall_24_0; }

		//spanTerm=SpanTermQuery
		public Assignment getSpanTermAssignment_25() { return cSpanTermAssignment_25; }

		//SpanTermQuery
		public RuleCall getSpanTermSpanTermQueryParserRuleCall_25_0() { return cSpanTermSpanTermQueryParserRuleCall_25_0; }

		//fuzzy=FuzzyQuery
		public Assignment getFuzzyAssignment_26() { return cFuzzyAssignment_26; }

		//FuzzyQuery
		public RuleCall getFuzzyFuzzyQueryParserRuleCall_26_0() { return cFuzzyFuzzyQueryParserRuleCall_26_0; }

		//prefix=PrefixQuery
		public Assignment getPrefixAssignment_27() { return cPrefixAssignment_27; }

		//PrefixQuery
		public RuleCall getPrefixPrefixQueryParserRuleCall_27_0() { return cPrefixPrefixQueryParserRuleCall_27_0; }

		//term=TermQuery
		public Assignment getTermAssignment_28() { return cTermAssignment_28; }

		//TermQuery
		public RuleCall getTermTermQueryParserRuleCall_28_0() { return cTermTermQueryParserRuleCall_28_0; }

		//range=RangeQuery
		public Assignment getRangeAssignment_29() { return cRangeAssignment_29; }

		//RangeQuery
		public RuleCall getRangeRangeQueryParserRuleCall_29_0() { return cRangeRangeQueryParserRuleCall_29_0; }

		//regexp=RegexpQuery
		public Assignment getRegexpAssignment_30() { return cRegexpAssignment_30; }

		//RegexpQuery
		public RuleCall getRegexpRegexpQueryParserRuleCall_30_0() { return cRegexpRegexpQueryParserRuleCall_30_0; }

		//wildcard=WildcardQuery
		public Assignment getWildcardAssignment_31() { return cWildcardAssignment_31; }

		//WildcardQuery
		public RuleCall getWildcardWildcardQueryParserRuleCall_31_0() { return cWildcardWildcardQueryParserRuleCall_31_0; }

		//terms=TermsQuery
		public Assignment getTermsAssignment_32() { return cTermsAssignment_32; }

		//TermsQuery
		public RuleCall getTermsTermsQueryParserRuleCall_32_0() { return cTermsTermsQueryParserRuleCall_32_0; }

		//topChildren=TopChildrenQuery
		public Assignment getTopChildrenAssignment_33() { return cTopChildrenAssignment_33; }

		//TopChildrenQuery
		public RuleCall getTopChildrenTopChildrenQueryParserRuleCall_33_0() { return cTopChildrenTopChildrenQueryParserRuleCall_33_0; }
	}

	public class SpanQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanQuery");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSpanQueryAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cSpanQuerySpanFirstQueryParserRuleCall_0_0 = (RuleCall)cSpanQueryAssignment_0.eContents().get(0);
		private final RuleCall cSpanMultiQueryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSpanNearQueryParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSpanNotQueryParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSpanOrQueryParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSpanTermQueryParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//SpanQuery:
		//	spanQuery=SpanFirstQuery | SpanMultiQuery | SpanNearQuery | SpanNotQuery | SpanOrQuery | SpanTermQuery;
		public ParserRule getRule() { return rule; }

		//spanQuery=SpanFirstQuery | SpanMultiQuery | SpanNearQuery | SpanNotQuery | SpanOrQuery | SpanTermQuery
		public Alternatives getAlternatives() { return cAlternatives; }

		//spanQuery=SpanFirstQuery
		public Assignment getSpanQueryAssignment_0() { return cSpanQueryAssignment_0; }

		//SpanFirstQuery
		public RuleCall getSpanQuerySpanFirstQueryParserRuleCall_0_0() { return cSpanQuerySpanFirstQueryParserRuleCall_0_0; }

		//SpanMultiQuery
		public RuleCall getSpanMultiQueryParserRuleCall_1() { return cSpanMultiQueryParserRuleCall_1; }

		//SpanNearQuery
		public RuleCall getSpanNearQueryParserRuleCall_2() { return cSpanNearQueryParserRuleCall_2; }

		//SpanNotQuery
		public RuleCall getSpanNotQueryParserRuleCall_3() { return cSpanNotQueryParserRuleCall_3; }

		//SpanOrQuery
		public RuleCall getSpanOrQueryParserRuleCall_4() { return cSpanOrQueryParserRuleCall_4; }

		//SpanTermQuery
		public RuleCall getSpanTermQueryParserRuleCall_5() { return cSpanTermQueryParserRuleCall_5; }
	}

	public class MultiTermQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiTermQuery");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cMultiTermQueryAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cMultiTermQueryFuzzyQueryParserRuleCall_0_0 = (RuleCall)cMultiTermQueryAssignment_0.eContents().get(0);
		private final RuleCall cPrefixQueryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTermQueryParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRangeQueryParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRegexpQueryParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cWildcardQueryParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//MultiTermQuery:
		//	multiTermQuery=FuzzyQuery | PrefixQuery | TermQuery | RangeQuery | RegexpQuery | WildcardQuery;
		public ParserRule getRule() { return rule; }

		//multiTermQuery=FuzzyQuery | PrefixQuery | TermQuery | RangeQuery | RegexpQuery | WildcardQuery
		public Alternatives getAlternatives() { return cAlternatives; }

		//multiTermQuery=FuzzyQuery
		public Assignment getMultiTermQueryAssignment_0() { return cMultiTermQueryAssignment_0; }

		//FuzzyQuery
		public RuleCall getMultiTermQueryFuzzyQueryParserRuleCall_0_0() { return cMultiTermQueryFuzzyQueryParserRuleCall_0_0; }

		//PrefixQuery
		public RuleCall getPrefixQueryParserRuleCall_1() { return cPrefixQueryParserRuleCall_1; }

		//TermQuery
		public RuleCall getTermQueryParserRuleCall_2() { return cTermQueryParserRuleCall_2; }

		//RangeQuery
		public RuleCall getRangeQueryParserRuleCall_3() { return cRangeQueryParserRuleCall_3; }

		//RegexpQuery
		public RuleCall getRegexpQueryParserRuleCall_4() { return cRegexpQueryParserRuleCall_4; }

		//WildcardQuery
		public RuleCall getWildcardQueryParserRuleCall_5() { return cWildcardQueryParserRuleCall_5; }
	}

	public class FacetsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Facets");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFacetsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFacetsObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Facets:
		//	"\"facets\"" ":" FacetsObject;
		public ParserRule getRule() { return rule; }

		//"\"facets\"" ":" FacetsObject
		public Group getGroup() { return cGroup; }

		//"\"facets\""
		public Keyword getFacetsKeyword_0() { return cFacetsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FacetsObject
		public RuleCall getFacetsObjectParserRuleCall_2() { return cFacetsObjectParserRuleCall_2; }
	}

	public class FacetsObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetsObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFacetNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFacetNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFacetNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConfigAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConfigFacetTypeObjectParserRuleCall_3_0 = (RuleCall)cConfigAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FacetsObject:
		//	"{" facetName=STRING ":" config=FacetTypeObject "}";
		public ParserRule getRule() { return rule; }

		//"{" facetName=STRING ":" config=FacetTypeObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//facetName=STRING
		public Assignment getFacetNameAssignment_1() { return cFacetNameAssignment_1; }

		//STRING
		public RuleCall getFacetNameSTRINGTerminalRuleCall_1_0() { return cFacetNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//config=FacetTypeObject
		public Assignment getConfigAssignment_3() { return cConfigAssignment_3; }

		//FacetTypeObject
		public RuleCall getConfigFacetTypeObjectParserRuleCall_3_0() { return cConfigFacetTypeObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FacetTypeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetTypeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFacetTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFacetTypeFacetTypeParserRuleCall_1_0 = (RuleCall)cFacetTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParamsFacetParameterParserRuleCall_2_1_0 = (RuleCall)cParamsAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FacetTypeObject:
		//	"{" facetType=FacetType ("," params+=FacetParameter)* "}";
		public ParserRule getRule() { return rule; }

		//"{" facetType=FacetType ("," params+=FacetParameter)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//facetType=FacetType
		public Assignment getFacetTypeAssignment_1() { return cFacetTypeAssignment_1; }

		//FacetType
		public RuleCall getFacetTypeFacetTypeParserRuleCall_1_0() { return cFacetTypeFacetTypeParserRuleCall_1_0; }

		//("," params+=FacetParameter)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//params+=FacetParameter
		public Assignment getParamsAssignment_2_1() { return cParamsAssignment_2_1; }

		//FacetParameter
		public RuleCall getParamsFacetParameterParserRuleCall_2_1_0() { return cParamsFacetParameterParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class FacetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cFacetTypeAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cFacetTypeTermsFacetParserRuleCall_0_0 = (RuleCall)cFacetTypeAssignment_0.eContents().get(0);
		private final RuleCall cRangeFacetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHistogramFacetParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDateHistogramFacetParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cFilterFacetParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cQueryFacetParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cStatisticalFacetParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTermsStatsFacetParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cGeoDistanceFacetParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		
		//FacetType:
		//	facetType=TermsFacet | RangeFacet | HistogramFacet | DateHistogramFacet | FilterFacet | QueryFacet | StatisticalFacet
		//	| TermsStatsFacet | GeoDistanceFacet;
		public ParserRule getRule() { return rule; }

		//facetType=TermsFacet | RangeFacet | HistogramFacet | DateHistogramFacet | FilterFacet | QueryFacet | StatisticalFacet |
		//TermsStatsFacet | GeoDistanceFacet
		public Alternatives getAlternatives() { return cAlternatives; }

		//facetType=TermsFacet
		public Assignment getFacetTypeAssignment_0() { return cFacetTypeAssignment_0; }

		//TermsFacet
		public RuleCall getFacetTypeTermsFacetParserRuleCall_0_0() { return cFacetTypeTermsFacetParserRuleCall_0_0; }

		//RangeFacet
		public RuleCall getRangeFacetParserRuleCall_1() { return cRangeFacetParserRuleCall_1; }

		//HistogramFacet
		public RuleCall getHistogramFacetParserRuleCall_2() { return cHistogramFacetParserRuleCall_2; }

		//DateHistogramFacet
		public RuleCall getDateHistogramFacetParserRuleCall_3() { return cDateHistogramFacetParserRuleCall_3; }

		//FilterFacet
		public RuleCall getFilterFacetParserRuleCall_4() { return cFilterFacetParserRuleCall_4; }

		//QueryFacet
		public RuleCall getQueryFacetParserRuleCall_5() { return cQueryFacetParserRuleCall_5; }

		//StatisticalFacet
		public RuleCall getStatisticalFacetParserRuleCall_6() { return cStatisticalFacetParserRuleCall_6; }

		//TermsStatsFacet
		public RuleCall getTermsStatsFacetParserRuleCall_7() { return cTermsStatsFacetParserRuleCall_7; }

		//GeoDistanceFacet
		public RuleCall getGeoDistanceFacetParserRuleCall_8() { return cGeoDistanceFacetParserRuleCall_8; }
	}

	public class GeoDistanceFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_distanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoDistanceFacetObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoDistanceFacet:
		//	"\"geo_distance\"" ":" GeoDistanceFacetObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_distance\"" ":" GeoDistanceFacetObject
		public Group getGroup() { return cGroup; }

		//"\"geo_distance\""
		public Keyword getGeo_distanceKeyword_0() { return cGeo_distanceKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoDistanceFacetObject
		public RuleCall getGeoDistanceFacetObjectParserRuleCall_2() { return cGeoDistanceFacetObjectParserRuleCall_2; }
	}

	public class GeoDistanceFacetObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceFacetObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPointAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPointLatLonParserRuleCall_3_0 = (RuleCall)cPointAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cRangesParamParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GeoDistanceFacetObject:
		//	"{" fieldName=STRING ":" point=LatLon "," RangesParam "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" point=LatLon "," RangesParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//point=LatLon
		public Assignment getPointAssignment_3() { return cPointAssignment_3; }

		//LatLon
		public RuleCall getPointLatLonParserRuleCall_3_0() { return cPointLatLonParserRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//RangesParam
		public RuleCall getRangesParamParserRuleCall_5() { return cRangesParamParserRuleCall_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class TermsStatsFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsStatsFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerms_statsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//// TODO
		//TermsStatsFacet:
		//	"\"terms_stats\"" ":" Object;
		public ParserRule getRule() { return rule; }

		//"\"terms_stats\"" ":" Object
		public Group getGroup() { return cGroup; }

		//"\"terms_stats\""
		public Keyword getTerms_statsKeyword_0() { return cTerms_statsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//Object
		public RuleCall getObjectParserRuleCall_2() { return cObjectParserRuleCall_2; }
	}

	public class StatisticalFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StatisticalFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStatisticalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cStatisticalFacetObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//StatisticalFacet:
		//	"\"statistical\"" ":" StatisticalFacetObject;
		public ParserRule getRule() { return rule; }

		//"\"statistical\"" ":" StatisticalFacetObject
		public Group getGroup() { return cGroup; }

		//"\"statistical\""
		public Keyword getStatisticalKeyword_0() { return cStatisticalKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//StatisticalFacetObject
		public RuleCall getStatisticalFacetObjectParserRuleCall_2() { return cStatisticalFacetObjectParserRuleCall_2; }
	}

	public class StatisticalFacetObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StatisticalFacetObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cFieldAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cFieldFieldParamParserRuleCall_0_1_0 = (RuleCall)cFieldAssignment_0_1.eContents().get(0);
		private final Assignment cScriptAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScriptScriptParamParserRuleCall_1_0 = (RuleCall)cScriptAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cFieldsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cFieldsFieldsParamParserRuleCall_2_0_0 = (RuleCall)cFieldsAssignment_2_0.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//StatisticalFacetObject:
		//	"{" field=FieldParam | script=ScriptParam | fields=FieldsParam "}";
		public ParserRule getRule() { return rule; }

		//"{" field=FieldParam | script=ScriptParam | fields=FieldsParam "}"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"{" field=FieldParam
		public Group getGroup_0() { return cGroup_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_0() { return cLeftCurlyBracketKeyword_0_0; }

		//field=FieldParam
		public Assignment getFieldAssignment_0_1() { return cFieldAssignment_0_1; }

		//FieldParam
		public RuleCall getFieldFieldParamParserRuleCall_0_1_0() { return cFieldFieldParamParserRuleCall_0_1_0; }

		//script=ScriptParam
		public Assignment getScriptAssignment_1() { return cScriptAssignment_1; }

		//ScriptParam
		public RuleCall getScriptScriptParamParserRuleCall_1_0() { return cScriptScriptParamParserRuleCall_1_0; }

		//fields=FieldsParam "}"
		public Group getGroup_2() { return cGroup_2; }

		//fields=FieldsParam
		public Assignment getFieldsAssignment_2_0() { return cFieldsAssignment_2_0; }

		//FieldsParam
		public RuleCall getFieldsFieldsParamParserRuleCall_2_0_0() { return cFieldsFieldsParamParserRuleCall_2_0_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1() { return cRightCurlyBracketKeyword_2_1; }
	}

	public class QueryFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryFacet");
		private final RuleCall cQueryParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//QueryFacet:
		//	Query;
		public ParserRule getRule() { return rule; }

		//Query
		public RuleCall getQueryParserRuleCall() { return cQueryParserRuleCall; }
	}

	public class FilterFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilterFacet");
		private final RuleCall cFilterParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//FilterFacet:
		//	Filter;
		public ParserRule getRule() { return rule; }

		//Filter
		public RuleCall getFilterParserRuleCall() { return cFilterParserRuleCall; }
	}

	public class DateHistogramFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DateHistogramFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDate_histogramKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cDateHistogramFacetObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//DateHistogramFacet:
		//	"\"date_histogram\"" ":" DateHistogramFacetObject;
		public ParserRule getRule() { return rule; }

		//"\"date_histogram\"" ":" DateHistogramFacetObject
		public Group getGroup() { return cGroup; }

		//"\"date_histogram\""
		public Keyword getDate_histogramKeyword_0() { return cDate_histogramKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//DateHistogramFacetObject
		public RuleCall getDateHistogramFacetObjectParserRuleCall_2() { return cDateHistogramFacetObjectParserRuleCall_2; }
	}

	public class DateHistogramFacetObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DateHistogramFacetObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cFieldAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cFieldFieldParamParserRuleCall_1_0_0 = (RuleCall)cFieldAssignment_1_0.eContents().get(0);
		private final Assignment cKeyValueAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cKeyValueKeyValueFieldParserRuleCall_1_1_0 = (RuleCall)cKeyValueAssignment_1_1.eContents().get(0);
		private final Assignment cKeyValueScriptAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cKeyValueScriptKeyValueScriptParserRuleCall_1_2_0 = (RuleCall)cKeyValueScriptAssignment_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIntervalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DateHistogramFacetObject:
		//	"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) "," "\"interval\"" ":" STRING "}";
		public ParserRule getRule() { return rule; }

		//"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) "," "\"interval\"" ":" STRING "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//field=FieldParam
		public Assignment getFieldAssignment_1_0() { return cFieldAssignment_1_0; }

		//FieldParam
		public RuleCall getFieldFieldParamParserRuleCall_1_0_0() { return cFieldFieldParamParserRuleCall_1_0_0; }

		//keyValue=KeyValueField
		public Assignment getKeyValueAssignment_1_1() { return cKeyValueAssignment_1_1; }

		//KeyValueField
		public RuleCall getKeyValueKeyValueFieldParserRuleCall_1_1_0() { return cKeyValueKeyValueFieldParserRuleCall_1_1_0; }

		//keyValueScript=KeyValueScript
		public Assignment getKeyValueScriptAssignment_1_2() { return cKeyValueScriptAssignment_1_2; }

		//KeyValueScript
		public RuleCall getKeyValueScriptKeyValueScriptParserRuleCall_1_2_0() { return cKeyValueScriptKeyValueScriptParserRuleCall_1_2_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//"\"interval\""
		public Keyword getIntervalKeyword_3() { return cIntervalKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_5() { return cSTRINGTerminalRuleCall_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class HistogramFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HistogramFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHistogramKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cHistogramFacetObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//HistogramFacet:
		//	"\"histogram\"" ":" HistogramFacetObject;
		public ParserRule getRule() { return rule; }

		//"\"histogram\"" ":" HistogramFacetObject
		public Group getGroup() { return cGroup; }

		//"\"histogram\""
		public Keyword getHistogramKeyword_0() { return cHistogramKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//HistogramFacetObject
		public RuleCall getHistogramFacetObjectParserRuleCall_2() { return cHistogramFacetObjectParserRuleCall_2; }
	}

	public class HistogramFacetObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HistogramFacetObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cFieldAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cFieldFieldParamParserRuleCall_1_0_0 = (RuleCall)cFieldAssignment_1_0.eContents().get(0);
		private final Assignment cKeyValueAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cKeyValueKeyValueFieldParserRuleCall_1_1_0 = (RuleCall)cKeyValueAssignment_1_1.eContents().get(0);
		private final Assignment cKeyValueScriptAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cKeyValueScriptKeyValueScriptParserRuleCall_1_2_0 = (RuleCall)cKeyValueScriptAssignment_1_2.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cHistogramFacetParameterParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//HistogramFacetObject:
		//	"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) ("," HistogramFacetParameter)* "}";
		public ParserRule getRule() { return rule; }

		//"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) ("," HistogramFacetParameter)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//field=FieldParam
		public Assignment getFieldAssignment_1_0() { return cFieldAssignment_1_0; }

		//FieldParam
		public RuleCall getFieldFieldParamParserRuleCall_1_0_0() { return cFieldFieldParamParserRuleCall_1_0_0; }

		//keyValue=KeyValueField
		public Assignment getKeyValueAssignment_1_1() { return cKeyValueAssignment_1_1; }

		//KeyValueField
		public RuleCall getKeyValueKeyValueFieldParserRuleCall_1_1_0() { return cKeyValueKeyValueFieldParserRuleCall_1_1_0; }

		//keyValueScript=KeyValueScript
		public Assignment getKeyValueScriptAssignment_1_2() { return cKeyValueScriptAssignment_1_2; }

		//KeyValueScript
		public RuleCall getKeyValueScriptKeyValueScriptParserRuleCall_1_2_0() { return cKeyValueScriptKeyValueScriptParserRuleCall_1_2_0; }

		//("," HistogramFacetParameter)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//HistogramFacetParameter
		public RuleCall getHistogramFacetParameterParserRuleCall_2_1() { return cHistogramFacetParameterParserRuleCall_2_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class HistogramFacetParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HistogramFacetParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntervalParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTimeIntervalParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//HistogramFacetParameter:
		//	IntervalParam | TimeIntervalParam;
		public ParserRule getRule() { return rule; }

		//IntervalParam | TimeIntervalParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//IntervalParam
		public RuleCall getIntervalParamParserRuleCall_0() { return cIntervalParamParserRuleCall_0; }

		//TimeIntervalParam
		public RuleCall getTimeIntervalParamParserRuleCall_1() { return cTimeIntervalParamParserRuleCall_1; }
	}

	public class RangeFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRangeFacetObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RangeFacet:
		//	"\"range\"" ":" RangeFacetObject;
		public ParserRule getRule() { return rule; }

		//"\"range\"" ":" RangeFacetObject
		public Group getGroup() { return cGroup; }

		//"\"range\""
		public Keyword getRangeKeyword_0() { return cRangeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//RangeFacetObject
		public RuleCall getRangeFacetObjectParserRuleCall_2() { return cRangeFacetObjectParserRuleCall_2; }
	}

	public class RangeFacetObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFacetObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cFieldAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cFieldFieldParamParserRuleCall_1_0_0 = (RuleCall)cFieldAssignment_1_0.eContents().get(0);
		private final Assignment cKeyValueAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cKeyValueKeyValueFieldParserRuleCall_1_1_0 = (RuleCall)cKeyValueAssignment_1_1.eContents().get(0);
		private final Assignment cKeyValueScriptAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cKeyValueScriptKeyValueScriptParserRuleCall_1_2_0 = (RuleCall)cKeyValueScriptAssignment_1_2.eContents().get(0);
		private final RuleCall cRangesParamParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//RangeFacetObject:
		//	"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) RangesParam "}";
		public ParserRule getRule() { return rule; }

		//"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) RangesParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//field=FieldParam
		public Assignment getFieldAssignment_1_0() { return cFieldAssignment_1_0; }

		//FieldParam
		public RuleCall getFieldFieldParamParserRuleCall_1_0_0() { return cFieldFieldParamParserRuleCall_1_0_0; }

		//keyValue=KeyValueField
		public Assignment getKeyValueAssignment_1_1() { return cKeyValueAssignment_1_1; }

		//KeyValueField
		public RuleCall getKeyValueKeyValueFieldParserRuleCall_1_1_0() { return cKeyValueKeyValueFieldParserRuleCall_1_1_0; }

		//keyValueScript=KeyValueScript
		public Assignment getKeyValueScriptAssignment_1_2() { return cKeyValueScriptAssignment_1_2; }

		//KeyValueScript
		public RuleCall getKeyValueScriptKeyValueScriptParserRuleCall_1_2_0() { return cKeyValueScriptKeyValueScriptParserRuleCall_1_2_0; }

		//RangesParam
		public RuleCall getRangesParamParserRuleCall_2() { return cRangesParamParserRuleCall_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class RangesParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangesParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRangesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cRangeObjectParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cRangeObjectParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RangesParam:
		//	"\"ranges\"" ":" "[" RangeObject ("," RangeObject)* "]";
		public ParserRule getRule() { return rule; }

		//"\"ranges\"" ":" "[" RangeObject ("," RangeObject)* "]"
		public Group getGroup() { return cGroup; }

		//"\"ranges\""
		public Keyword getRangesKeyword_0() { return cRangesKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//RangeObject
		public RuleCall getRangeObjectParserRuleCall_3() { return cRangeObjectParserRuleCall_3; }

		//("," RangeObject)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//RangeObject
		public RuleCall getRangeObjectParserRuleCall_4_1() { return cRangeObjectParserRuleCall_4_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class KeyValueFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeyValueField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKey_fieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKeyFieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeyFieldSTRINGTerminalRuleCall_2_0 = (RuleCall)cKeyFieldAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cValue_fieldKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValueFieldAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValueFieldSTRINGTerminalRuleCall_6_0 = (RuleCall)cValueFieldAssignment_6.eContents().get(0);
		
		//KeyValueField:
		//	"\"key_field\"" ":" keyField=STRING "," "\"value_field\"" ":" valueField=STRING;
		public ParserRule getRule() { return rule; }

		//"\"key_field\"" ":" keyField=STRING "," "\"value_field\"" ":" valueField=STRING
		public Group getGroup() { return cGroup; }

		//"\"key_field\""
		public Keyword getKey_fieldKeyword_0() { return cKey_fieldKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//keyField=STRING
		public Assignment getKeyFieldAssignment_2() { return cKeyFieldAssignment_2; }

		//STRING
		public RuleCall getKeyFieldSTRINGTerminalRuleCall_2_0() { return cKeyFieldSTRINGTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"\"value_field\""
		public Keyword getValue_fieldKeyword_4() { return cValue_fieldKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//valueField=STRING
		public Assignment getValueFieldAssignment_6() { return cValueFieldAssignment_6; }

		//STRING
		public RuleCall getValueFieldSTRINGTerminalRuleCall_6_0() { return cValueFieldSTRINGTerminalRuleCall_6_0; }
	}

	public class KeyValueScriptElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeyValueScript");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKey_scriptKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKeyScriptAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKeyScriptSTRINGTerminalRuleCall_2_0 = (RuleCall)cKeyScriptAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cValue_scriptKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cValueScriptAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cValueScriptSTRINGTerminalRuleCall_6_0 = (RuleCall)cValueScriptAssignment_6.eContents().get(0);
		
		//KeyValueScript:
		//	"\"key_script\"" ":" keyScript=STRING "," "\"value_script\"" ":" valueScript=STRING;
		public ParserRule getRule() { return rule; }

		//"\"key_script\"" ":" keyScript=STRING "," "\"value_script\"" ":" valueScript=STRING
		public Group getGroup() { return cGroup; }

		//"\"key_script\""
		public Keyword getKey_scriptKeyword_0() { return cKey_scriptKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//keyScript=STRING
		public Assignment getKeyScriptAssignment_2() { return cKeyScriptAssignment_2; }

		//STRING
		public RuleCall getKeyScriptSTRINGTerminalRuleCall_2_0() { return cKeyScriptSTRINGTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"\"value_script\""
		public Keyword getValue_scriptKeyword_4() { return cValue_scriptKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//valueScript=STRING
		public Assignment getValueScriptAssignment_6() { return cValueScriptAssignment_6; }

		//STRING
		public RuleCall getValueScriptSTRINGTerminalRuleCall_6_0() { return cValueScriptSTRINGTerminalRuleCall_6_0; }
	}

	public class RangeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cFromParamParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cFromParamParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cCommaKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cToParamParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cToParamParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		
		//RangeObject:
		//	"{" FromParam | FromParam "," ToParam | ToParam "}";
		public ParserRule getRule() { return rule; }

		//"{" FromParam | FromParam "," ToParam | ToParam "}"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"{" FromParam
		public Group getGroup_0() { return cGroup_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_0() { return cLeftCurlyBracketKeyword_0_0; }

		//FromParam
		public RuleCall getFromParamParserRuleCall_0_1() { return cFromParamParserRuleCall_0_1; }

		//FromParam "," ToParam
		public Group getGroup_1() { return cGroup_1; }

		//FromParam
		public RuleCall getFromParamParserRuleCall_1_0() { return cFromParamParserRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_1_1() { return cCommaKeyword_1_1; }

		//ToParam
		public RuleCall getToParamParserRuleCall_1_2() { return cToParamParserRuleCall_1_2; }

		//ToParam "}"
		public Group getGroup_2() { return cGroup_2; }

		//ToParam
		public RuleCall getToParamParserRuleCall_2_0() { return cToParamParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_1() { return cRightCurlyBracketKeyword_2_1; }
	}

	public class TermsFacetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsFacet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTermsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTermsFacetObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TermsFacet:
		//	"\"terms\"" ":" TermsFacetObject;
		public ParserRule getRule() { return rule; }

		//"\"terms\"" ":" TermsFacetObject
		public Group getGroup() { return cGroup; }

		//"\"terms\""
		public Keyword getTermsKeyword_0() { return cTermsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TermsFacetObject
		public RuleCall getTermsFacetObjectParserRuleCall_2() { return cTermsFacetObjectParserRuleCall_2; }
	}

	public class TermsFacetObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsFacetObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParamsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamsTermsFacetParameterParserRuleCall_1_0 = (RuleCall)cParamsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParamsTermsFacetParameterParserRuleCall_2_1_0 = (RuleCall)cParamsAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TermsFacetObject:
		//	"{" params+=TermsFacetParameter ("," params+=TermsFacetParameter)* "}";
		public ParserRule getRule() { return rule; }

		//"{" params+=TermsFacetParameter ("," params+=TermsFacetParameter)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//params+=TermsFacetParameter
		public Assignment getParamsAssignment_1() { return cParamsAssignment_1; }

		//TermsFacetParameter
		public RuleCall getParamsTermsFacetParameterParserRuleCall_1_0() { return cParamsTermsFacetParameterParserRuleCall_1_0; }

		//("," params+=TermsFacetParameter)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//params+=TermsFacetParameter
		public Assignment getParamsAssignment_2_1() { return cParamsAssignment_2_1; }

		//TermsFacetParameter
		public RuleCall getParamsTermsFacetParameterParserRuleCall_2_1_0() { return cParamsTermsFacetParameterParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class TermsFacetParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsFacetParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cFieldAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cFieldFieldParamParserRuleCall_0_0 = (RuleCall)cFieldAssignment_0.eContents().get(0);
		private final Assignment cFieldsAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cFieldsFieldsParamParserRuleCall_1_0 = (RuleCall)cFieldsAssignment_1.eContents().get(0);
		private final Assignment cSizeAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cSizeSizeParamParserRuleCall_2_0 = (RuleCall)cSizeAssignment_2.eContents().get(0);
		private final Assignment cOrderAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cOrderOrderParamParserRuleCall_3_0 = (RuleCall)cOrderAssignment_3.eContents().get(0);
		private final Assignment cAllTermsAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cAllTermsAllTermsParamParserRuleCall_4_0 = (RuleCall)cAllTermsAssignment_4.eContents().get(0);
		private final Assignment cExcludeAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cExcludeExcludeParamParserRuleCall_5_0 = (RuleCall)cExcludeAssignment_5.eContents().get(0);
		private final Assignment cRegexAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cRegexRegexParamParserRuleCall_6_0 = (RuleCall)cRegexAssignment_6.eContents().get(0);
		private final Assignment cRegexFlagsAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cRegexFlagsRegexFlagsParamParserRuleCall_7_0 = (RuleCall)cRegexFlagsAssignment_7.eContents().get(0);
		private final Assignment cScriptAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cScriptScriptParamParserRuleCall_8_0 = (RuleCall)cScriptAssignment_8.eContents().get(0);
		private final Assignment cScriptFieldAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cScriptFieldScriptFieldParamParserRuleCall_9_0 = (RuleCall)cScriptFieldAssignment_9.eContents().get(0);
		
		//TermsFacetParameter:
		//	field=FieldParam | fields=FieldsParam | size=SizeParam | order=OrderParam | allTerms=AllTermsParam |
		//	exclude=ExcludeParam | regex=RegexParam | regexFlags=RegexFlagsParam | script=ScriptParam |
		//	scriptField=ScriptFieldParam;
		public ParserRule getRule() { return rule; }

		//field=FieldParam | fields=FieldsParam | size=SizeParam | order=OrderParam | allTerms=AllTermsParam |
		//exclude=ExcludeParam | regex=RegexParam | regexFlags=RegexFlagsParam | script=ScriptParam |
		//scriptField=ScriptFieldParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//field=FieldParam
		public Assignment getFieldAssignment_0() { return cFieldAssignment_0; }

		//FieldParam
		public RuleCall getFieldFieldParamParserRuleCall_0_0() { return cFieldFieldParamParserRuleCall_0_0; }

		//fields=FieldsParam
		public Assignment getFieldsAssignment_1() { return cFieldsAssignment_1; }

		//FieldsParam
		public RuleCall getFieldsFieldsParamParserRuleCall_1_0() { return cFieldsFieldsParamParserRuleCall_1_0; }

		//size=SizeParam
		public Assignment getSizeAssignment_2() { return cSizeAssignment_2; }

		//SizeParam
		public RuleCall getSizeSizeParamParserRuleCall_2_0() { return cSizeSizeParamParserRuleCall_2_0; }

		//order=OrderParam
		public Assignment getOrderAssignment_3() { return cOrderAssignment_3; }

		//OrderParam
		public RuleCall getOrderOrderParamParserRuleCall_3_0() { return cOrderOrderParamParserRuleCall_3_0; }

		//allTerms=AllTermsParam
		public Assignment getAllTermsAssignment_4() { return cAllTermsAssignment_4; }

		//AllTermsParam
		public RuleCall getAllTermsAllTermsParamParserRuleCall_4_0() { return cAllTermsAllTermsParamParserRuleCall_4_0; }

		//exclude=ExcludeParam
		public Assignment getExcludeAssignment_5() { return cExcludeAssignment_5; }

		//ExcludeParam
		public RuleCall getExcludeExcludeParamParserRuleCall_5_0() { return cExcludeExcludeParamParserRuleCall_5_0; }

		//regex=RegexParam
		public Assignment getRegexAssignment_6() { return cRegexAssignment_6; }

		//RegexParam
		public RuleCall getRegexRegexParamParserRuleCall_6_0() { return cRegexRegexParamParserRuleCall_6_0; }

		//regexFlags=RegexFlagsParam
		public Assignment getRegexFlagsAssignment_7() { return cRegexFlagsAssignment_7; }

		//RegexFlagsParam
		public RuleCall getRegexFlagsRegexFlagsParamParserRuleCall_7_0() { return cRegexFlagsRegexFlagsParamParserRuleCall_7_0; }

		//script=ScriptParam
		public Assignment getScriptAssignment_8() { return cScriptAssignment_8; }

		//ScriptParam
		public RuleCall getScriptScriptParamParserRuleCall_8_0() { return cScriptScriptParamParserRuleCall_8_0; }

		//scriptField=ScriptFieldParam
		public Assignment getScriptFieldAssignment_9() { return cScriptFieldAssignment_9; }

		//ScriptFieldParam
		public RuleCall getScriptFieldScriptFieldParamParserRuleCall_9_0() { return cScriptFieldScriptFieldParamParserRuleCall_9_0; }
	}

	public class FacetParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cGlobalAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cGlobalGlobalParamParserRuleCall_0_0 = (RuleCall)cGlobalAssignment_0.eContents().get(0);
		private final Assignment cFaceFilterAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cFaceFilterFacetFilterParamParserRuleCall_1_0 = (RuleCall)cFaceFilterAssignment_1.eContents().get(0);
		
		//FacetParameter:
		//	global=GlobalParam | faceFilter=FacetFilterParam;
		public ParserRule getRule() { return rule; }

		//global=GlobalParam | faceFilter=FacetFilterParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//global=GlobalParam
		public Assignment getGlobalAssignment_0() { return cGlobalAssignment_0; }

		//GlobalParam
		public RuleCall getGlobalGlobalParamParserRuleCall_0_0() { return cGlobalGlobalParamParserRuleCall_0_0; }

		//faceFilter=FacetFilterParam
		public Assignment getFaceFilterAssignment_1() { return cFaceFilterAssignment_1; }

		//FacetFilterParam
		public RuleCall getFaceFilterFacetFilterParamParserRuleCall_1_0() { return cFaceFilterFacetFilterParamParserRuleCall_1_0; }
	}

	public class FacetFilterParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FacetFilterParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFacet_filterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFilterParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FacetFilterParam:
		//	"\"facet_filter\"" ":" Filter;
		public ParserRule getRule() { return rule; }

		//"\"facet_filter\"" ":" Filter
		public Group getGroup() { return cGroup; }

		//"\"facet_filter\""
		public Keyword getFacet_filterKeyword_0() { return cFacet_filterKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//Filter
		public RuleCall getFilterParserRuleCall_2() { return cFilterParserRuleCall_2; }
	}

	public class IntervalParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntervalParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntervalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//// Common parameters for queries, filters and facets
		//IntervalParam:
		//	"\"interval\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"interval\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"interval\""
		public Keyword getIntervalKeyword_0() { return cIntervalKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class TimeIntervalParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TimeIntervalParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTime_intervalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TimeIntervalParam:
		//	"\"time_interval\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"time_interval\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"time_interval\""
		public Keyword getTime_intervalKeyword_0() { return cTime_intervalKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class FromParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FromParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFromKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cNUMBERParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//FromParam:
		//	"\"from\"" ":" (NUMBER | STRING);
		public ParserRule getRule() { return rule; }

		//"\"from\"" ":" (NUMBER | STRING)
		public Group getGroup() { return cGroup; }

		//"\"from\""
		public Keyword getFromKeyword_0() { return cFromKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NUMBER | STRING
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2_0() { return cNUMBERParserRuleCall_2_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_1() { return cSTRINGTerminalRuleCall_2_1; }
	}

	public class ToParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ToParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cToKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cNUMBERParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//ToParam:
		//	"\"to\"" ":" (NUMBER | STRING);
		public ParserRule getRule() { return rule; }

		//"\"to\"" ":" (NUMBER | STRING)
		public Group getGroup() { return cGroup; }

		//"\"to\""
		public Keyword getToKeyword_0() { return cToKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NUMBER | STRING
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2_0() { return cNUMBERParserRuleCall_2_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_1() { return cSTRINGTerminalRuleCall_2_1; }
	}

	public class SizeParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SizeParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SizeParam:
		//	"\"size\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"size\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"size\""
		public Keyword getSizeKeyword_0() { return cSizeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class OrderParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrderParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cCountKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cTermKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cReverse_countKeyword_2_2 = (Keyword)cAlternatives_2.eContents().get(2);
		private final Keyword cReverse_termKeyword_2_3 = (Keyword)cAlternatives_2.eContents().get(3);
		
		//OrderParam:
		//	"\"order\"" ":" ("\"count\"" | "\"term\"" | "\"reverse_count\"" | "\"reverse_term\"");
		public ParserRule getRule() { return rule; }

		//"\"order\"" ":" ("\"count\"" | "\"term\"" | "\"reverse_count\"" | "\"reverse_term\"")
		public Group getGroup() { return cGroup; }

		//"\"order\""
		public Keyword getOrderKeyword_0() { return cOrderKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"count\"" | "\"term\"" | "\"reverse_count\"" | "\"reverse_term\""
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"\"count\""
		public Keyword getCountKeyword_2_0() { return cCountKeyword_2_0; }

		//"\"term\""
		public Keyword getTermKeyword_2_1() { return cTermKeyword_2_1; }

		//"\"reverse_count\""
		public Keyword getReverse_countKeyword_2_2() { return cReverse_countKeyword_2_2; }

		//"\"reverse_term\""
		public Keyword getReverse_termKeyword_2_3() { return cReverse_termKeyword_2_3; }
	}

	public class AllTermsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AllTermsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAll_termsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAllTermsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAllTermsBOOLEANTerminalRuleCall_2_0 = (RuleCall)cAllTermsAssignment_2.eContents().get(0);
		
		//AllTermsParam:
		//	"\"all_terms\"" ":" allTerms=BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"all_terms\"" ":" allTerms=BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"all_terms\""
		public Keyword getAll_termsKeyword_0() { return cAll_termsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//allTerms=BOOLEAN
		public Assignment getAllTermsAssignment_2() { return cAllTermsAssignment_2; }

		//BOOLEAN
		public RuleCall getAllTermsBOOLEANTerminalRuleCall_2_0() { return cAllTermsBOOLEANTerminalRuleCall_2_0; }
	}

	public class ExcludeParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExcludeParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExcludeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExcludeFieldNamesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExcludeFieldNamesSTRINGTerminalRuleCall_3_0 = (RuleCall)cExcludeFieldNamesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cExcludeFieldNamesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cExcludeFieldNamesSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cExcludeFieldNamesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ExcludeParam:
		//	"\"exclude\"" ":" "[" excludeFieldNames+=STRING ("," excludeFieldNames+=STRING)* "]";
		public ParserRule getRule() { return rule; }

		//"\"exclude\"" ":" "[" excludeFieldNames+=STRING ("," excludeFieldNames+=STRING)* "]"
		public Group getGroup() { return cGroup; }

		//"\"exclude\""
		public Keyword getExcludeKeyword_0() { return cExcludeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//excludeFieldNames+=STRING
		public Assignment getExcludeFieldNamesAssignment_3() { return cExcludeFieldNamesAssignment_3; }

		//STRING
		public RuleCall getExcludeFieldNamesSTRINGTerminalRuleCall_3_0() { return cExcludeFieldNamesSTRINGTerminalRuleCall_3_0; }

		//("," excludeFieldNames+=STRING)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//excludeFieldNames+=STRING
		public Assignment getExcludeFieldNamesAssignment_4_1() { return cExcludeFieldNamesAssignment_4_1; }

		//STRING
		public RuleCall getExcludeFieldNamesSTRINGTerminalRuleCall_4_1_0() { return cExcludeFieldNamesSTRINGTerminalRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class ScriptParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScriptParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScriptKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cScriptAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cScriptSTRINGTerminalRuleCall_2_0 = (RuleCall)cScriptAssignment_2.eContents().get(0);
		
		//ScriptParam:
		//	"\"script\"" ":" script=STRING;
		public ParserRule getRule() { return rule; }

		//"\"script\"" ":" script=STRING
		public Group getGroup() { return cGroup; }

		//"\"script\""
		public Keyword getScriptKeyword_0() { return cScriptKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//script=STRING
		public Assignment getScriptAssignment_2() { return cScriptAssignment_2; }

		//STRING
		public RuleCall getScriptSTRINGTerminalRuleCall_2_0() { return cScriptSTRINGTerminalRuleCall_2_0; }
	}

	public class ScriptFieldParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScriptFieldParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScript_fieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFieldNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cFieldNameAssignment_2.eContents().get(0);
		
		//ScriptFieldParam:
		//	"\"script_field\"" ":" fieldName=STRING;
		public ParserRule getRule() { return rule; }

		//"\"script_field\"" ":" fieldName=STRING
		public Group getGroup() { return cGroup; }

		//"\"script_field\""
		public Keyword getScript_fieldKeyword_0() { return cScript_fieldKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_2() { return cFieldNameAssignment_2; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_2_0() { return cFieldNameSTRINGTerminalRuleCall_2_0; }
	}

	public class RegexParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RegexParam:
		//	"\"regex\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"regex\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"regex\""
		public Keyword getRegexKeyword_0() { return cRegexKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class RegexFlagsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexFlagsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegex_flagsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RegexFlagsParam:
		//	"\"regex_flags\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"regex_flags\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"regex_flags\""
		public Keyword getRegex_flagsKeyword_0() { return cRegex_flagsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class GlobalParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlobalParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGlobalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GlobalParam:
		//	"\"global\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"global\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"global\""
		public Keyword getGlobalKeyword_0() { return cGlobalKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class CutoffFrequenceParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CutoffFrequenceParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCutoff_frequencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//CutoffFrequenceParam:
		//	"\"cutoff_frequency\"" ":" FLOAT;
		public ParserRule getRule() { return rule; }

		//"\"cutoff_frequency\"" ":" FLOAT
		public Group getGroup() { return cGroup; }

		//"\"cutoff_frequency\""
		public Keyword getCutoff_frequencyKeyword_0() { return cCutoff_frequencyKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_2() { return cFLOATParserRuleCall_2; }
	}

	public class ZeroTermsQueryParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ZeroTermsQueryParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cZero_terms_queryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cNONE_ALLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ZeroTermsQueryParam:
		//	"\"zero_terms_query\"" ":" NONE_ALL;
		public ParserRule getRule() { return rule; }

		//"\"zero_terms_query\"" ":" NONE_ALL
		public Group getGroup() { return cGroup; }

		//"\"zero_terms_query\""
		public Keyword getZero_terms_queryKeyword_0() { return cZero_terms_queryKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NONE_ALL
		public RuleCall getNONE_ALLTerminalRuleCall_2() { return cNONE_ALLTerminalRuleCall_2; }
	}

	public class MinimumShouldMatchParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MinimumShouldMatchParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMinimum_should_matchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		private final RuleCall cComplexMinimumShouldMatchParserRuleCall_2_2 = (RuleCall)cAlternatives_2.eContents().get(2);
		
		//MinimumShouldMatchParam:
		//	"\"minimum_should_match\"" ":" (INT | STRING | ComplexMinimumShouldMatch);
		public ParserRule getRule() { return rule; }

		//"\"minimum_should_match\"" ":" (INT | STRING | ComplexMinimumShouldMatch)
		public Group getGroup() { return cGroup; }

		//"\"minimum_should_match\""
		public Keyword getMinimum_should_matchKeyword_0() { return cMinimum_should_matchKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT | STRING | ComplexMinimumShouldMatch
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_2_0() { return cINTTerminalRuleCall_2_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_1() { return cSTRINGTerminalRuleCall_2_1; }

		//ComplexMinimumShouldMatch
		public RuleCall getComplexMinimumShouldMatchParserRuleCall_2_2() { return cComplexMinimumShouldMatchParserRuleCall_2_2; }
	}

	public class ComplexMinimumShouldMatchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComplexMinimumShouldMatch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLow_freqKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cHigh_freqKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ComplexMinimumShouldMatch:
		//	"{" "\"low_freq\"" ":" INT ("," "\"high_freq\"" ":" INT)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"low_freq\"" ":" INT ("," "\"high_freq\"" ":" INT)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"low_freq\""
		public Keyword getLow_freqKeyword_1() { return cLow_freqKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }

		//("," "\"high_freq\"" ":" INT)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//"\"high_freq\""
		public Keyword getHigh_freqKeyword_4_1() { return cHigh_freqKeyword_4_1; }

		//":"
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_4_3() { return cINTTerminalRuleCall_4_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ExistenceParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExistenceParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExistenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ExistenceParam:
		//	"\"existence\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"existence\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"existence\""
		public Keyword getExistenceKeyword_0() { return cExistenceKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class NullValueParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NullValueParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNull_valueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//NullValueParam:
		//	"\"null_value\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"null_value\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"null_value\""
		public Keyword getNull_valueKeyword_0() { return cNull_valueKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class MinTermFreqParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MinTermFreqParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMin_term_freqKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MinTermFreqParam:
		//	"\"min_term_freq\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"min_term_freq\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"min_term_freq\""
		public Keyword getMin_term_freqKeyword_0() { return cMin_term_freqKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class LowFreqOperatorParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LowFreqOperatorParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLow_freq_operatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cAND_ORParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//LowFreqOperatorParam:
		//	"\"low_freq_operator\"" ":" AND_OR;
		public ParserRule getRule() { return rule; }

		//"\"low_freq_operator\"" ":" AND_OR
		public Group getGroup() { return cGroup; }

		//"\"low_freq_operator\""
		public Keyword getLow_freq_operatorKeyword_0() { return cLow_freq_operatorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//AND_OR
		public RuleCall getAND_ORParserRuleCall_2() { return cAND_ORParserRuleCall_2; }
	}

	public class OperatorParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OperatorParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cAND_ORParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//OperatorParam:
		//	"\"operator\"" ":" AND_OR;
		public ParserRule getRule() { return rule; }

		//"\"operator\"" ":" AND_OR
		public Group getGroup() { return cGroup; }

		//"\"operator\""
		public Keyword getOperatorKeyword_0() { return cOperatorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//AND_OR
		public RuleCall getAND_ORParserRuleCall_2() { return cAND_ORParserRuleCall_2; }
	}

	public class BoostParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoostParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoostKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//BoostParam:
		//	"\"boost\"" ":" FLOAT;
		public ParserRule getRule() { return rule; }

		//"\"boost\"" ":" FLOAT
		public Group getGroup() { return cGroup; }

		//"\"boost\""
		public Keyword getBoostKeyword_0() { return cBoostKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_2() { return cFLOATParserRuleCall_2; }
	}

	public class AnalyzerParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnalyzerParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalyzerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AnalyzerParam:
		//	"\"analyzer\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"analyzer\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"analyzer\""
		public Keyword getAnalyzerKeyword_0() { return cAnalyzerKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class FlagsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FlagsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFlagsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FlagsParam:
		//	"\"flags\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"flags\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"flags\""
		public Keyword getFlagsKeyword_0() { return cFlagsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class DisableCoordParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DisableCoordParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDisable_coordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//DisableCoordParam:
		//	"\"disable_coord\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"disable_coord\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"disable_coord\""
		public Keyword getDisable_coordKeyword_0() { return cDisable_coordKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class TieBreakerParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TieBreakerParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTie_breakerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TieBreakerParam:
		//	"\"tie_breaker\"" ":" FLOAT;
		public ParserRule getRule() { return rule; }

		//"\"tie_breaker\"" ":" FLOAT
		public Group getGroup() { return cGroup; }

		//"\"tie_breaker\""
		public Keyword getTie_breakerKeyword_0() { return cTie_breakerKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_2() { return cFLOATParserRuleCall_2; }
	}

	public class PercentTermsToMatchParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PercentTermsToMatchParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPercent_terms_to_matchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PercentTermsToMatchParam:
		//	"\"percent_terms_to_match\"" ":" FLOAT;
		public ParserRule getRule() { return rule; }

		//"\"percent_terms_to_match\"" ":" FLOAT
		public Group getGroup() { return cGroup; }

		//"\"percent_terms_to_match\""
		public Keyword getPercent_terms_to_matchKeyword_0() { return cPercent_terms_to_matchKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_2() { return cFLOATParserRuleCall_2; }
	}

	public class StopWordsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StopWordsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStop_wordsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//StopWordsParam:
		//	"\"stop_words\"" ":" "[" STRING ("," STRING)* "]";
		public ParserRule getRule() { return rule; }

		//"\"stop_words\"" ":" "[" STRING ("," STRING)* "]"
		public Group getGroup() { return cGroup; }

		//"\"stop_words\""
		public Keyword getStop_wordsKeyword_0() { return cStop_wordsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3() { return cSTRINGTerminalRuleCall_3; }

		//("," STRING)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_4_1() { return cSTRINGTerminalRuleCall_4_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class MinDocFreqParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MinDocFreqParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMin_doc_freqKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MinDocFreqParam:
		//	"\"min_doc_freq\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"min_doc_freq\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"min_doc_freq\""
		public Keyword getMin_doc_freqKeyword_0() { return cMin_doc_freqKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class MaxDocFreqParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MaxDocFreqParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMax_doc_freqKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MaxDocFreqParam:
		//	"\"max_doc_freq\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"max_doc_freq\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"max_doc_freq\""
		public Keyword getMax_doc_freqKeyword_0() { return cMax_doc_freqKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class MinWordLengthParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MinWordLengthParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMin_word_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MinWordLengthParam:
		//	"\"min_word_length\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"min_word_length\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"min_word_length\""
		public Keyword getMin_word_lengthKeyword_0() { return cMin_word_lengthKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class MaxWordLengthParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MaxWordLengthParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMax_word_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MaxWordLengthParam:
		//	"\"max_word_length\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"max_word_length\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"max_word_length\""
		public Keyword getMax_word_lengthKeyword_0() { return cMax_word_lengthKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class BoostTermsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoostTermsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoost_termsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//BoostTermsParam:
		//	"\"boost_terms\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"boost_terms\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"boost_terms\""
		public Keyword getBoost_termsKeyword_0() { return cBoost_termsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class GteParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GteParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//GteParam:
		//	"\"gte\"" ":" (STRING | NUMBER);
		public ParserRule getRule() { return rule; }

		//"\"gte\"" ":" (STRING | NUMBER)
		public Group getGroup() { return cGroup; }

		//"\"gte\""
		public Keyword getGteKeyword_0() { return cGteKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING | NUMBER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_0() { return cSTRINGTerminalRuleCall_2_0; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2_1() { return cNUMBERParserRuleCall_2_1; }
	}

	public class GtParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GtParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//GtParam:
		//	"\"gt\"" ":" (STRING | NUMBER);
		public ParserRule getRule() { return rule; }

		//"\"gt\"" ":" (STRING | NUMBER)
		public Group getGroup() { return cGroup; }

		//"\"gt\""
		public Keyword getGtKeyword_0() { return cGtKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING | NUMBER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_0() { return cSTRINGTerminalRuleCall_2_0; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2_1() { return cNUMBERParserRuleCall_2_1; }
	}

	public class LtParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LtParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//LtParam:
		//	"\"lt\"" ":" (STRING | NUMBER);
		public ParserRule getRule() { return rule; }

		//"\"lt\"" ":" (STRING | NUMBER)
		public Group getGroup() { return cGroup; }

		//"\"lt\""
		public Keyword getLtKeyword_0() { return cLtKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING | NUMBER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_0() { return cSTRINGTerminalRuleCall_2_0; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2_1() { return cNUMBERParserRuleCall_2_1; }
	}

	public class LteParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LteParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cNUMBERParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//LteParam:
		//	"\"lte\"" ":" (STRING | NUMBER);
		public ParserRule getRule() { return rule; }

		//"\"lte\"" ":" (STRING | NUMBER)
		public Group getGroup() { return cGroup; }

		//"\"lte\""
		public Keyword getLteKeyword_0() { return cLteKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING | NUMBER
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2_0() { return cSTRINGTerminalRuleCall_2_0; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2_1() { return cNUMBERParserRuleCall_2_1; }
	}

	public class TypeParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cIndexedKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cMemoryKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		
		//TypeParam:
		//	"\"type\"" ":" ("\"indexed\"" | "\"memory\"");
		public ParserRule getRule() { return rule; }

		//"\"type\"" ":" ("\"indexed\"" | "\"memory\"")
		public Group getGroup() { return cGroup; }

		//"\"type\""
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"indexed\"" | "\"memory\""
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"\"indexed\""
		public Keyword getIndexedKeyword_2_0() { return cIndexedKeyword_2_0; }

		//"\"memory\""
		public Keyword getMemoryKeyword_2_1() { return cMemoryKeyword_2_1; }
	}

	public class SlopParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SlopParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSlopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SlopParam:
		//	"\"slop\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"slop\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"slop\""
		public Keyword getSlopKeyword_0() { return cSlopKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class FieldParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FieldParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FieldParam:
		//	"\"field\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"field\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"field\""
		public Keyword getFieldKeyword_0() { return cFieldKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class FieldsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FieldsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFieldsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FieldsParam:
		//	"\"fields\"" ":" "[" STRING ("," STRING)* "]";
		public ParserRule getRule() { return rule; }

		//"\"fields\"" ":" "[" STRING ("," STRING)* "]"
		public Group getGroup() { return cGroup; }

		//"\"fields\""
		public Keyword getFieldsKeyword_0() { return cFieldsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3() { return cSTRINGTerminalRuleCall_3; }

		//("," STRING)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_4_1() { return cSTRINGTerminalRuleCall_4_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class DefaultFieldParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefaultFieldParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefault_fieldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//DefaultFieldParam:
		//	"\"default_field\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"default_field\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"default_field\""
		public Keyword getDefault_fieldKeyword_0() { return cDefault_fieldKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class DefaultOperatorParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefaultOperatorParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDefault_operatorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cAND_ORParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//DefaultOperatorParam:
		//	"\"default_operator\"" ":" AND_OR;
		public ParserRule getRule() { return rule; }

		//"\"default_operator\"" ":" AND_OR
		public Group getGroup() { return cGroup; }

		//"\"default_operator\""
		public Keyword getDefault_operatorKeyword_0() { return cDefault_operatorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//AND_OR
		public RuleCall getAND_ORParserRuleCall_2() { return cAND_ORParserRuleCall_2; }
	}

	public class AllowLeadingWildcardParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AllowLeadingWildcardParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAllow_leading_wildcardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AllowLeadingWildcardParam:
		//	"\"allow_leading_wildcard\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"allow_leading_wildcard\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"allow_leading_wildcard\""
		public Keyword getAllow_leading_wildcardKeyword_0() { return cAllow_leading_wildcardKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class LowercaseExpandedTermsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LowercaseExpandedTermsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLowercase_expanded_termsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//LowercaseExpandedTermsParam:
		//	"\"lowercase_expanded_terms\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"lowercase_expanded_terms\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"lowercase_expanded_terms\""
		public Keyword getLowercase_expanded_termsKeyword_0() { return cLowercase_expanded_termsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class EnablePositionIncrementsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnablePositionIncrementsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnable_position_incrementsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EnablePositionIncrementsParam:
		//	"\"enable_position_increments\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"enable_position_increments\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"enable_position_increments\""
		public Keyword getEnable_position_incrementsKeyword_0() { return cEnable_position_incrementsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class FuzzyMaxExpansionsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyMaxExpansionsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuzzy_max_expansionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FuzzyMaxExpansionsParam:
		//	"\"fuzzy_max_expansions\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"fuzzy_max_expansions\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"fuzzy_max_expansions\""
		public Keyword getFuzzy_max_expansionsKeyword_0() { return cFuzzy_max_expansionsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class FuzzyPrefixLengthParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyPrefixLengthParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuzzy_prefix_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FuzzyPrefixLengthParam:
		//	"\"fuzzy_prefix_length\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"fuzzy_prefix_length\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"fuzzy_prefix_length\""
		public Keyword getFuzzy_prefix_lengthKeyword_0() { return cFuzzy_prefix_lengthKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class PhraseSlopParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PhraseSlopParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPhrase_slopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PhraseSlopParam:
		//	"\"phrase_slop\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"phrase_slop\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"phrase_slop\""
		public Keyword getPhrase_slopKeyword_0() { return cPhrase_slopKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class AnalyzeWildcardParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnalyzeWildcardParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnalyze_wildcardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AnalyzeWildcardParam:
		//	"\"analyze_wildcard\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"analyze_wildcard\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"analyze_wildcard\""
		public Keyword getAnalyze_wildcardKeyword_0() { return cAnalyze_wildcardKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class AutoGeneratePhraseQueriesParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AutoGeneratePhraseQueriesParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuto_generate_phrase_queriesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//AutoGeneratePhraseQueriesParam:
		//	"\"auto_generate_phrase_queries\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"auto_generate_phrase_queries\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"auto_generate_phrase_queries\""
		public Keyword getAuto_generate_phrase_queriesKeyword_0() { return cAuto_generate_phrase_queriesKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class LenientParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LenientParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLenientKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//LenientParam:
		//	"\"lenient\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"lenient\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"lenient\""
		public Keyword getLenientKeyword_0() { return cLenientKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class LocaleParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocaleParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLocaleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//LocaleParam:
		//	"\"locale\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"locale\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"locale\""
		public Keyword getLocaleKeyword_0() { return cLocaleKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class IgnoreTfParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IgnoreTfParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIgnore_tfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IgnoreTfParam:
		//	"\"ignore_tf\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"ignore_tf\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"ignore_tf\""
		public Keyword getIgnore_tfKeyword_0() { return cIgnore_tfKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class MaxQueryTermsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MaxQueryTermsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMax_query_termsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MaxQueryTermsParam:
		//	"\"max_query_terms\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"max_query_terms\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"max_query_terms\""
		public Keyword getMax_query_termsKeyword_0() { return cMax_query_termsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class FuzzinessParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzinessParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuzzinessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cNUMBERParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FuzzinessParam:
		//	"\"fuzziness\"" ":" NUMBER;
		public ParserRule getRule() { return rule; }

		//"\"fuzziness\"" ":" NUMBER
		public Group getGroup() { return cGroup; }

		//"\"fuzziness\""
		public Keyword getFuzzinessKeyword_0() { return cFuzzinessKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2() { return cNUMBERParserRuleCall_2; }
	}

	public class PrefixLengthParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrefixLengthParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrefix_lengthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PrefixLengthParam:
		//	"\"prefix_length\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"prefix_length\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"prefix_length\""
		public Keyword getPrefix_lengthKeyword_0() { return cPrefix_lengthKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class MaxExpansionsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MaxExpansionsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMax_expansionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MaxExpansionsParam:
		//	"\"max_expansions\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"max_expansions\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"max_expansions\""
		public Keyword getMax_expansionsKeyword_0() { return cMax_expansionsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class ScoreModeParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScoreModeParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScore_modeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSCORE_MODESTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ScoreModeParam:
		//	"\"score_mode\"" ":" SCORE_MODES;
		public ParserRule getRule() { return rule; }

		//"\"score_mode\"" ":" SCORE_MODES
		public Group getGroup() { return cGroup; }

		//"\"score_mode\""
		public Keyword getScore_modeKeyword_0() { return cScore_modeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SCORE_MODES
		public RuleCall getSCORE_MODESTerminalRuleCall_2() { return cSCORE_MODESTerminalRuleCall_2; }
	}

	public class ScoreParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScoreParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScoreKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSCORE_MODESTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ScoreParam:
		//	"\"score\"" ":" SCORE_MODES;
		public ParserRule getRule() { return rule; }

		//"\"score\"" ":" SCORE_MODES
		public Group getGroup() { return cGroup; }

		//"\"score\""
		public Keyword getScoreKeyword_0() { return cScoreKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SCORE_MODES
		public RuleCall getSCORE_MODESTerminalRuleCall_2() { return cSCORE_MODESTerminalRuleCall_2; }
	}

	public class IndicesParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndicesParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndicesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//IndicesParam:
		//	"\"indices\"" ":" "[" INT ("," INT)* "]";
		public ParserRule getRule() { return rule; }

		//"\"indices\"" ":" "[" INT ("," INT)* "]"
		public Group getGroup() { return cGroup; }

		//"\"indices\""
		public Keyword getIndicesKeyword_0() { return cIndicesKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }

		//("," INT)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_4_1() { return cINTTerminalRuleCall_4_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class IndexParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndexParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IndexParam:
		//	"\"index\"" ":" STRING;
		public ParserRule getRule() { return rule; }

		//"\"index\"" ":" STRING
		public Group getGroup() { return cGroup; }

		//"\"index\""
		public Keyword getIndexKeyword_0() { return cIndexKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_2() { return cSTRINGTerminalRuleCall_2; }
	}

	public class LikeTextParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LikeTextParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLike_textKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLikeQueryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLikeQuerySTRINGTerminalRuleCall_2_0 = (RuleCall)cLikeQueryAssignment_2.eContents().get(0);
		
		//LikeTextParam:
		//	"\"like_text\"" ":" likeQuery=STRING;
		public ParserRule getRule() { return rule; }

		//"\"like_text\"" ":" likeQuery=STRING
		public Group getGroup() { return cGroup; }

		//"\"like_text\""
		public Keyword getLike_textKeyword_0() { return cLike_textKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//likeQuery=STRING
		public Assignment getLikeQueryAssignment_2() { return cLikeQueryAssignment_2; }

		//STRING
		public RuleCall getLikeQuerySTRINGTerminalRuleCall_2_0() { return cLikeQuerySTRINGTerminalRuleCall_2_0; }
	}

	public class EndParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EndParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EndParam:
		//	"\"end\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"end\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"end\""
		public Keyword getEndKeyword_0() { return cEndKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class InOrderParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InOrderParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIn_orderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//InOrderParam:
		//	"\"in_order\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"in_order\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"in_order\""
		public Keyword getIn_orderKeyword_0() { return cIn_orderKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class CollectPayloadsParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CollectPayloadsParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCollect_payloadsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//CollectPayloadsParam:
		//	"\"collect_payloads\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"collect_payloads\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"collect_payloads\""
		public Keyword getCollect_payloadsKeyword_0() { return cCollect_payloadsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class FactorParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FactorParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFactorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FactorParam:
		//	"\"factor\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"factor\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"factor\""
		public Keyword getFactorKeyword_0() { return cFactorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class IncrementalFactorParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IncrementalFactorParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIncremental_factorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IncrementalFactorParam:
		//	"\"incremental_factor\"" ":" INT;
		public ParserRule getRule() { return rule; }

		//"\"incremental_factor\"" ":" INT
		public Group getGroup() { return cGroup; }

		//"\"incremental_factor\""
		public Keyword getIncremental_factorKeyword_0() { return cIncremental_factorKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class CacheParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CacheParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword c_cacheKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBOOLEANTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//CacheParam:
		//	"\"_cache\"" ":" BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"\"_cache\"" ":" BOOLEAN
		public Group getGroup() { return cGroup; }

		//"\"_cache\""
		public Keyword get_cacheKeyword_0() { return c_cacheKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_2() { return cBOOLEANTerminalRuleCall_2; }
	}

	public class DistanceTypeParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DistanceTypeParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDistance_typeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cArcKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cSloppy_arcKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cPlaneKeyword_2_2 = (Keyword)cAlternatives_2.eContents().get(2);
		
		//DistanceTypeParam:
		//	"\"distance_type\"" ":" ("\"arc\"" | "\"sloppy_arc\"" | "\"plane\"");
		public ParserRule getRule() { return rule; }

		//"\"distance_type\"" ":" ("\"arc\"" | "\"sloppy_arc\"" | "\"plane\"")
		public Group getGroup() { return cGroup; }

		//"\"distance_type\""
		public Keyword getDistance_typeKeyword_0() { return cDistance_typeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"arc\"" | "\"sloppy_arc\"" | "\"plane\""
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"\"arc\""
		public Keyword getArcKeyword_2_0() { return cArcKeyword_2_0; }

		//"\"sloppy_arc\""
		public Keyword getSloppy_arcKeyword_2_1() { return cSloppy_arcKeyword_2_1; }

		//"\"plane\""
		public Keyword getPlaneKeyword_2_2() { return cPlaneKeyword_2_2; }
	}

	public class OptimizeBboxParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OptimizeBboxParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOptimize_bboxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cMemoryKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cIndexedKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cNoneKeyword_2_2 = (Keyword)cAlternatives_2.eContents().get(2);
		
		//OptimizeBboxParam:
		//	"\"optimize_bbox\"" ":" ("\"memory\"" | "\"indexed\"" | "\"none\"");
		public ParserRule getRule() { return rule; }

		//"\"optimize_bbox\"" ":" ("\"memory\"" | "\"indexed\"" | "\"none\"")
		public Group getGroup() { return cGroup; }

		//"\"optimize_bbox\""
		public Keyword getOptimize_bboxKeyword_0() { return cOptimize_bboxKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"memory\"" | "\"indexed\"" | "\"none\""
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"\"memory\""
		public Keyword getMemoryKeyword_2_0() { return cMemoryKeyword_2_0; }

		//"\"indexed\""
		public Keyword getIndexedKeyword_2_1() { return cIndexedKeyword_2_1; }

		//"\"none\""
		public Keyword getNoneKeyword_2_2() { return cNoneKeyword_2_2; }
	}

	public class MatchQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cShortMatchQueryObjectParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cMatchQueryObjectParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//// Queries:
		//MatchQuery:
		//	"\"match\"" ":" (ShortMatchQueryObject | MatchQueryObject);
		public ParserRule getRule() { return rule; }

		//"\"match\"" ":" (ShortMatchQueryObject | MatchQueryObject)
		public Group getGroup() { return cGroup; }

		//"\"match\""
		public Keyword getMatchKeyword_0() { return cMatchKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//ShortMatchQueryObject | MatchQueryObject
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//ShortMatchQueryObject
		public RuleCall getShortMatchQueryObjectParserRuleCall_2_0() { return cShortMatchQueryObjectParserRuleCall_2_0; }

		//MatchQueryObject
		public RuleCall getMatchQueryObjectParserRuleCall_2_1() { return cMatchQueryObjectParserRuleCall_2_1; }
	}

	public class ShortMatchQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShortMatchQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuerySTRINGTerminalRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ShortMatchQueryObject:
		//	"{" fieldName=STRING ":" query=STRING "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" query=STRING "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//query=STRING
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_3_0() { return cQuerySTRINGTerminalRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MatchQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametersMatchQueryParametersObjectParserRuleCall_3_0 = (RuleCall)cParametersAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MatchQueryObject:
		//	"{" fieldName=STRING ":" parameters=MatchQueryParametersObject "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" parameters=MatchQueryParametersObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//parameters=MatchQueryParametersObject
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }

		//MatchQueryParametersObject
		public RuleCall getParametersMatchQueryParametersObjectParserRuleCall_3_0() { return cParametersMatchQueryParametersObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MatchQueryParametersObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchQueryParametersObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cQueryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuerySTRINGTerminalRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsMatchQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsMatchQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MatchQueryParametersObject:
		//	"{" "\"query\"" ":" query=STRING ("," params+=MatchQueryParameter ("," params+=MatchQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"query\"" ":" query=STRING ("," params+=MatchQueryParameter ("," params+=MatchQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"query\""
		public Keyword getQueryKeyword_1() { return cQueryKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//query=STRING
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_3_0() { return cQuerySTRINGTerminalRuleCall_3_0; }

		//("," params+=MatchQueryParameter ("," params+=MatchQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=MatchQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//MatchQueryParameter
		public RuleCall getParamsMatchQueryParameterParserRuleCall_4_1_0() { return cParamsMatchQueryParameterParserRuleCall_4_1_0; }

		//("," params+=MatchQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=MatchQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//MatchQueryParameter
		public RuleCall getParamsMatchQueryParameterParserRuleCall_4_2_1_0() { return cParamsMatchQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class MatchQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOperatorParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cZeroTermsQueryParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCutoffFrequenceParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnalyzerParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBoostParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSlopParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//MatchQueryParameter:
		//	OperatorParam | ZeroTermsQueryParam | CutoffFrequenceParam | AnalyzerParam | BoostParam | SlopParam;
		public ParserRule getRule() { return rule; }

		//OperatorParam | ZeroTermsQueryParam | CutoffFrequenceParam | AnalyzerParam | BoostParam | SlopParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//OperatorParam
		public RuleCall getOperatorParamParserRuleCall_0() { return cOperatorParamParserRuleCall_0; }

		//ZeroTermsQueryParam
		public RuleCall getZeroTermsQueryParamParserRuleCall_1() { return cZeroTermsQueryParamParserRuleCall_1; }

		//CutoffFrequenceParam
		public RuleCall getCutoffFrequenceParamParserRuleCall_2() { return cCutoffFrequenceParamParserRuleCall_2; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_3() { return cAnalyzerParamParserRuleCall_3; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_4() { return cBoostParamParserRuleCall_4; }

		//SlopParam
		public RuleCall getSlopParamParserRuleCall_5() { return cSlopParamParserRuleCall_5; }
	}

	public class MultiMatchQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiMatchQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMulti_matchKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMultiMatchQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MultiMatchQuery:
		//	"\"multi_match\"" ":" MultiMatchQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"multi_match\"" ":" MultiMatchQueryObject
		public Group getGroup() { return cGroup; }

		//"\"multi_match\""
		public Keyword getMulti_matchKeyword_0() { return cMulti_matchKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MultiMatchQueryObject
		public RuleCall getMultiMatchQueryObjectParserRuleCall_2() { return cMultiMatchQueryObjectParserRuleCall_2; }
	}

	public class MultiMatchQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiMatchQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cQueryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFieldsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFieldsFieldsParamParserRuleCall_5_0 = (RuleCall)cFieldsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cParamsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cParamsMultiMatchQueryParameterParserRuleCall_6_1_0 = (RuleCall)cParamsAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cParamsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cParamsMultiMatchQueryParameterParserRuleCall_6_2_1_0 = (RuleCall)cParamsAssignment_6_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MultiMatchQueryObject:
		//	"{" "\"query\"" ":" STRING "," fields=FieldsParam ("," params+=MultiMatchQueryParameter (","
		//	params+=MultiMatchQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"query\"" ":" STRING "," fields=FieldsParam ("," params+=MultiMatchQueryParameter (","
		//params+=MultiMatchQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"query\""
		public Keyword getQueryKeyword_1() { return cQueryKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3() { return cSTRINGTerminalRuleCall_3; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//fields=FieldsParam
		public Assignment getFieldsAssignment_5() { return cFieldsAssignment_5; }

		//FieldsParam
		public RuleCall getFieldsFieldsParamParserRuleCall_5_0() { return cFieldsFieldsParamParserRuleCall_5_0; }

		//("," params+=MultiMatchQueryParameter ("," params+=MultiMatchQueryParameter)*)?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//params+=MultiMatchQueryParameter
		public Assignment getParamsAssignment_6_1() { return cParamsAssignment_6_1; }

		//MultiMatchQueryParameter
		public RuleCall getParamsMultiMatchQueryParameterParserRuleCall_6_1_0() { return cParamsMultiMatchQueryParameterParserRuleCall_6_1_0; }

		//("," params+=MultiMatchQueryParameter)*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//params+=MultiMatchQueryParameter
		public Assignment getParamsAssignment_6_2_1() { return cParamsAssignment_6_2_1; }

		//MultiMatchQueryParameter
		public RuleCall getParamsMultiMatchQueryParameterParserRuleCall_6_2_1_0() { return cParamsMultiMatchQueryParameterParserRuleCall_6_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class MultiMatchQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiMatchQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMultiMatchTypeParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTieBreakerParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MultiMatchQueryParameter:
		//	MultiMatchTypeParam | TieBreakerParam;
		public ParserRule getRule() { return rule; }

		//MultiMatchTypeParam | TieBreakerParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//MultiMatchTypeParam
		public RuleCall getMultiMatchTypeParamParserRuleCall_0() { return cMultiMatchTypeParamParserRuleCall_0; }

		//TieBreakerParam
		public RuleCall getTieBreakerParamParserRuleCall_1() { return cTieBreakerParamParserRuleCall_1; }
	}

	public class MultiMatchTypeParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiMatchTypeParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMultiMatchTypeParamTypesParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MultiMatchTypeParam:
		//	"\"type\"" ":" MultiMatchTypeParamTypes;
		public ParserRule getRule() { return rule; }

		//"\"type\"" ":" MultiMatchTypeParamTypes
		public Group getGroup() { return cGroup; }

		//"\"type\""
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MultiMatchTypeParamTypes
		public RuleCall getMultiMatchTypeParamTypesParserRuleCall_2() { return cMultiMatchTypeParamTypesParserRuleCall_2; }
	}

	public class MultiMatchTypeParamTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultiMatchTypeParamTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cBest_fieldsKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMost_fieldsKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cCross_fieldsKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cPhraseKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cPhrase_prefixKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//MultiMatchTypeParamTypes:
		//	"\"best_fields\"" | "\"most_fields\"" | "\"cross_fields\"" | "\"phrase\"" | "\"phrase_prefix\"";
		public ParserRule getRule() { return rule; }

		//"\"best_fields\"" | "\"most_fields\"" | "\"cross_fields\"" | "\"phrase\"" | "\"phrase_prefix\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//"\"best_fields\""
		public Keyword getBest_fieldsKeyword_0() { return cBest_fieldsKeyword_0; }

		//"\"most_fields\""
		public Keyword getMost_fieldsKeyword_1() { return cMost_fieldsKeyword_1; }

		//"\"cross_fields\""
		public Keyword getCross_fieldsKeyword_2() { return cCross_fieldsKeyword_2; }

		//"\"phrase\""
		public Keyword getPhraseKeyword_3() { return cPhraseKeyword_3; }

		//"\"phrase_prefix\""
		public Keyword getPhrase_prefixKeyword_4() { return cPhrase_prefixKeyword_4; }
	}

	public class BoolQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBoolQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//BoolQuery:
		//	"\"bool\"" ":" BoolQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"bool\"" ":" BoolQueryObject
		public Group getGroup() { return cGroup; }

		//"\"bool\""
		public Keyword getBoolKeyword_0() { return cBoolKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BoolQueryObject
		public RuleCall getBoolQueryObjectParserRuleCall_2() { return cBoolQueryObjectParserRuleCall_2; }
	}

	public class BoolQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClauseAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClauseBoolClauseParserRuleCall_1_0 = (RuleCall)cClauseAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cClauseAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cClauseBoolClauseParserRuleCall_2_1_0 = (RuleCall)cClauseAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParamsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParamsBoolQueryParameterParserRuleCall_3_1_0 = (RuleCall)cParamsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cParamsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cParamsBoolQueryParameterParserRuleCall_3_2_1_0 = (RuleCall)cParamsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BoolQueryObject:
		//	"{" clause+=BoolClause ("," clause+=BoolClause)* ("," params+=BoolQueryParameter ("," params+=BoolQueryParameter)*)?
		//	"}";
		public ParserRule getRule() { return rule; }

		//"{" clause+=BoolClause ("," clause+=BoolClause)* ("," params+=BoolQueryParameter ("," params+=BoolQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//clause+=BoolClause
		public Assignment getClauseAssignment_1() { return cClauseAssignment_1; }

		//BoolClause
		public RuleCall getClauseBoolClauseParserRuleCall_1_0() { return cClauseBoolClauseParserRuleCall_1_0; }

		//("," clause+=BoolClause)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//clause+=BoolClause
		public Assignment getClauseAssignment_2_1() { return cClauseAssignment_2_1; }

		//BoolClause
		public RuleCall getClauseBoolClauseParserRuleCall_2_1_0() { return cClauseBoolClauseParserRuleCall_2_1_0; }

		//("," params+=BoolQueryParameter ("," params+=BoolQueryParameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//params+=BoolQueryParameter
		public Assignment getParamsAssignment_3_1() { return cParamsAssignment_3_1; }

		//BoolQueryParameter
		public RuleCall getParamsBoolQueryParameterParserRuleCall_3_1_0() { return cParamsBoolQueryParameterParserRuleCall_3_1_0; }

		//("," params+=BoolQueryParameter)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//params+=BoolQueryParameter
		public Assignment getParamsAssignment_3_2_1() { return cParamsAssignment_3_2_1; }

		//BoolQueryParameter
		public RuleCall getParamsBoolQueryParameterParserRuleCall_3_2_1_0() { return cParamsBoolQueryParameterParserRuleCall_3_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class BoolQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMinimumShouldMatchParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBoostParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//BoolQueryParameter:
		//	MinimumShouldMatchParam | BoostParam;
		public ParserRule getRule() { return rule; }

		//MinimumShouldMatchParam | BoostParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//MinimumShouldMatchParam
		public RuleCall getMinimumShouldMatchParamParserRuleCall_0() { return cMinimumShouldMatchParamParserRuleCall_0; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_1() { return cBoostParamParserRuleCall_1; }
	}

	public class BoolClauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolClause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBOOL_CLAUSETerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cQueryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQueryQueryObjectParserRuleCall_2_0 = (RuleCall)cQueryAssignment_2.eContents().get(0);
		
		//BoolClause:
		//	BOOL_CLAUSE ":" query=QueryObject;
		public ParserRule getRule() { return rule; }

		//BOOL_CLAUSE ":" query=QueryObject
		public Group getGroup() { return cGroup; }

		//BOOL_CLAUSE
		public RuleCall getBOOL_CLAUSETerminalRuleCall_0() { return cBOOL_CLAUSETerminalRuleCall_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//query=QueryObject
		public Assignment getQueryAssignment_2() { return cQueryAssignment_2; }

		//QueryObject
		public RuleCall getQueryQueryObjectParserRuleCall_2_0() { return cQueryQueryObjectParserRuleCall_2_0; }
	}

	public class CommonQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommonQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cCommonQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//CommonQuery:
		//	"\"common\"" ":" CommonQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"common\"" ":" CommonQueryObject
		public Group getGroup() { return cGroup; }

		//"\"common\""
		public Keyword getCommonKeyword_0() { return cCommonKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//CommonQueryObject
		public RuleCall getCommonQueryObjectParserRuleCall_2() { return cCommonQueryObjectParserRuleCall_2; }
	}

	public class CommonQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommonQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametersCommonQueryParametersObjectParserRuleCall_3_0 = (RuleCall)cParametersAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CommonQueryObject:
		//	"{" fieldName=STRING ":" parameters=CommonQueryParametersObject "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" parameters=CommonQueryParametersObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//parameters=CommonQueryParametersObject
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }

		//CommonQueryParametersObject
		public RuleCall getParametersCommonQueryParametersObjectParserRuleCall_3_0() { return cParametersCommonQueryParametersObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class CommonQueryParametersObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommonQueryParametersObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cQueryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuerySTRINGTerminalRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsCommonQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsCommonQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CommonQueryParametersObject:
		//	"{" "\"query\"" ":" query=STRING ("," params+=CommonQueryParameter ("," params+=CommonQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"query\"" ":" query=STRING ("," params+=CommonQueryParameter ("," params+=CommonQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"query\""
		public Keyword getQueryKeyword_1() { return cQueryKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//query=STRING
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_3_0() { return cQuerySTRINGTerminalRuleCall_3_0; }

		//("," params+=CommonQueryParameter ("," params+=CommonQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=CommonQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//CommonQueryParameter
		public RuleCall getParamsCommonQueryParameterParserRuleCall_4_1_0() { return cParamsCommonQueryParameterParserRuleCall_4_1_0; }

		//("," params+=CommonQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=CommonQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//CommonQueryParameter
		public RuleCall getParamsCommonQueryParameterParserRuleCall_4_2_1_0() { return cParamsCommonQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class CommonQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CommonQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCutoffFrequenceParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLowFreqOperatorParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMinimumShouldMatchParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBoostParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAnalyzerParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cDisableCoordParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//CommonQueryParameter:
		//	CutoffFrequenceParam | LowFreqOperatorParam | MinimumShouldMatchParam | BoostParam | AnalyzerParam |
		//	DisableCoordParam;
		public ParserRule getRule() { return rule; }

		//CutoffFrequenceParam | LowFreqOperatorParam | MinimumShouldMatchParam | BoostParam | AnalyzerParam | DisableCoordParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//CutoffFrequenceParam
		public RuleCall getCutoffFrequenceParamParserRuleCall_0() { return cCutoffFrequenceParamParserRuleCall_0; }

		//LowFreqOperatorParam
		public RuleCall getLowFreqOperatorParamParserRuleCall_1() { return cLowFreqOperatorParamParserRuleCall_1; }

		//MinimumShouldMatchParam
		public RuleCall getMinimumShouldMatchParamParserRuleCall_2() { return cMinimumShouldMatchParamParserRuleCall_2; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_3() { return cBoostParamParserRuleCall_3; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_4() { return cAnalyzerParamParserRuleCall_4; }

		//DisableCoordParam
		public RuleCall getDisableCoordParamParserRuleCall_5() { return cDisableCoordParamParserRuleCall_5; }
	}

	public class ConstantScoreQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConstantScoreQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConstant_scoreKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cConstantScoreQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ConstantScoreQuery:
		//	"\"constant_score\"" ":" ConstantScoreQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"constant_score\"" ":" ConstantScoreQueryObject
		public Group getGroup() { return cGroup; }

		//"\"constant_score\""
		public Keyword getConstant_scoreKeyword_0() { return cConstant_scoreKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//ConstantScoreQueryObject
		public RuleCall getConstantScoreQueryObjectParserRuleCall_2() { return cConstantScoreQueryObjectParserRuleCall_2; }
	}

	public class ConstantScoreQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConstantScoreQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cQueryParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cFilterParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBoostParamParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ConstantScoreQueryObject:
		//	"{" (Query | Filter) "," BoostParam "}";
		public ParserRule getRule() { return rule; }

		//"{" (Query | Filter) "," BoostParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//Query | Filter
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//Query
		public RuleCall getQueryParserRuleCall_1_0() { return cQueryParserRuleCall_1_0; }

		//Filter
		public RuleCall getFilterParserRuleCall_1_1() { return cFilterParserRuleCall_1_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_3() { return cBoostParamParserRuleCall_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class DisMaxQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DisMaxQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDis_maxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cDisMaxQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//DisMaxQuery:
		//	"\"dis_max\"" ":" DisMaxQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"dis_max\"" ":" DisMaxQueryObject
		public Group getGroup() { return cGroup; }

		//"\"dis_max\""
		public Keyword getDis_maxKeyword_0() { return cDis_maxKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//DisMaxQueryObject
		public RuleCall getDisMaxQueryObjectParserRuleCall_2() { return cDisMaxQueryObjectParserRuleCall_2; }
	}

	public class DisMaxQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DisMaxQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cTieBreakerParamParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBoostParamParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cQueriesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cQueryAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cQueryQueryObjectParserRuleCall_8_0 = (RuleCall)cQueryAssignment_8.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cQueryAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cQueryQueryObjectParserRuleCall_9_1_0 = (RuleCall)cQueryAssignment_9_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//DisMaxQueryObject:
		//	"{" TieBreakerParam "," BoostParam "," "\"queries\"" ":" "[" query+=QueryObject ("," query+=QueryObject)* "]" "}";
		public ParserRule getRule() { return rule; }

		//"{" TieBreakerParam "," BoostParam "," "\"queries\"" ":" "[" query+=QueryObject ("," query+=QueryObject)* "]" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//TieBreakerParam
		public RuleCall getTieBreakerParamParserRuleCall_1() { return cTieBreakerParamParserRuleCall_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_3() { return cBoostParamParserRuleCall_3; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"\"queries\""
		public Keyword getQueriesKeyword_5() { return cQueriesKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//"["
		public Keyword getLeftSquareBracketKeyword_7() { return cLeftSquareBracketKeyword_7; }

		//query+=QueryObject
		public Assignment getQueryAssignment_8() { return cQueryAssignment_8; }

		//QueryObject
		public RuleCall getQueryQueryObjectParserRuleCall_8_0() { return cQueryQueryObjectParserRuleCall_8_0; }

		//("," query+=QueryObject)*
		public Group getGroup_9() { return cGroup_9; }

		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }

		//query+=QueryObject
		public Assignment getQueryAssignment_9_1() { return cQueryAssignment_9_1; }

		//QueryObject
		public RuleCall getQueryQueryObjectParserRuleCall_9_1_0() { return cQueryQueryObjectParserRuleCall_9_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class FilteredQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilteredQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFilteredKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFilteredQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FilteredQuery:
		//	"\"filtered\"" ":" FilteredQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"filtered\"" ":" FilteredQueryObject
		public Group getGroup() { return cGroup; }

		//"\"filtered\""
		public Keyword getFilteredKeyword_0() { return cFilteredKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FilteredQueryObject
		public RuleCall getFilteredQueryObjectParserRuleCall_2() { return cFilteredQueryObjectParserRuleCall_2; }
	}

	public class FilteredQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilteredQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cQueryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cQueryQueryParserRuleCall_1_0 = (RuleCall)cQueryAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFilterAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFilterFilterParserRuleCall_3_0 = (RuleCall)cFilterAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FilteredQueryObject:
		//	"{" query=Query "," filter=Filter "}";
		public ParserRule getRule() { return rule; }

		//"{" query=Query "," filter=Filter "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//query=Query
		public Assignment getQueryAssignment_1() { return cQueryAssignment_1; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_1_0() { return cQueryQueryParserRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//filter=Filter
		public Assignment getFilterAssignment_3() { return cFilterAssignment_3; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_3_0() { return cFilterFilterParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FuzzyLikeThisQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyLikeThisQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cFltKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cFuzzy_like_thisKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFuzzyLikeThisQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FuzzyLikeThisQuery:
		//	("\"flt\"" | "\"fuzzy_like_this\"") ":" FuzzyLikeThisQueryObject;
		public ParserRule getRule() { return rule; }

		//("\"flt\"" | "\"fuzzy_like_this\"") ":" FuzzyLikeThisQueryObject
		public Group getGroup() { return cGroup; }

		//"\"flt\"" | "\"fuzzy_like_this\""
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"\"flt\""
		public Keyword getFltKeyword_0_0() { return cFltKeyword_0_0; }

		//"\"fuzzy_like_this\""
		public Keyword getFuzzy_like_thisKeyword_0_1() { return cFuzzy_like_thisKeyword_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FuzzyLikeThisQueryObject
		public RuleCall getFuzzyLikeThisQueryObjectParserRuleCall_2() { return cFuzzyLikeThisQueryObjectParserRuleCall_2; }
	}

	public class FuzzyLikeThisQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyLikeThisQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFieldsParamParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cLikeTextParamParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsFuzzyLikeThisQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsFuzzyLikeThisQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FuzzyLikeThisQueryObject:
		//	"{" FieldsParam "," LikeTextParam ("," params+=FuzzyLikeThisQueryParameter (","
		//	params+=FuzzyLikeThisQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" FieldsParam "," LikeTextParam ("," params+=FuzzyLikeThisQueryParameter ("," params+=FuzzyLikeThisQueryParameter)*)?
		//"}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//FieldsParam
		public RuleCall getFieldsParamParserRuleCall_1() { return cFieldsParamParserRuleCall_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//LikeTextParam
		public RuleCall getLikeTextParamParserRuleCall_3() { return cLikeTextParamParserRuleCall_3; }

		//("," params+=FuzzyLikeThisQueryParameter ("," params+=FuzzyLikeThisQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=FuzzyLikeThisQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//FuzzyLikeThisQueryParameter
		public RuleCall getParamsFuzzyLikeThisQueryParameterParserRuleCall_4_1_0() { return cParamsFuzzyLikeThisQueryParameterParserRuleCall_4_1_0; }

		//("," params+=FuzzyLikeThisQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=FuzzyLikeThisQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//FuzzyLikeThisQueryParameter
		public RuleCall getParamsFuzzyLikeThisQueryParameterParserRuleCall_4_2_1_0() { return cParamsFuzzyLikeThisQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class FuzzyLikeThisQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyLikeThisQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIgnoreTfParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMaxQueryTermsParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFuzzinessParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPrefixLengthParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBoostParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAnalyzerParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//FuzzyLikeThisQueryParameter:
		//	IgnoreTfParam | MaxQueryTermsParam | FuzzinessParam | PrefixLengthParam | BoostParam | AnalyzerParam;
		public ParserRule getRule() { return rule; }

		//IgnoreTfParam | MaxQueryTermsParam | FuzzinessParam | PrefixLengthParam | BoostParam | AnalyzerParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//IgnoreTfParam
		public RuleCall getIgnoreTfParamParserRuleCall_0() { return cIgnoreTfParamParserRuleCall_0; }

		//MaxQueryTermsParam
		public RuleCall getMaxQueryTermsParamParserRuleCall_1() { return cMaxQueryTermsParamParserRuleCall_1; }

		//FuzzinessParam
		public RuleCall getFuzzinessParamParserRuleCall_2() { return cFuzzinessParamParserRuleCall_2; }

		//PrefixLengthParam
		public RuleCall getPrefixLengthParamParserRuleCall_3() { return cPrefixLengthParamParserRuleCall_3; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_4() { return cBoostParamParserRuleCall_4; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_5() { return cAnalyzerParamParserRuleCall_5; }
	}

	public class FuzzyLikeThisFieldQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyLikeThisFieldQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cFlt_fieldKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cFuzzy_like_this_fieldKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFuzzyLikeThisFieldQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//FuzzyLikeThisFieldQuery:
		//	("\"flt_field\"" | "\"fuzzy_like_this_field\"") ":" FuzzyLikeThisFieldQueryObject;
		public ParserRule getRule() { return rule; }

		//("\"flt_field\"" | "\"fuzzy_like_this_field\"") ":" FuzzyLikeThisFieldQueryObject
		public Group getGroup() { return cGroup; }

		//"\"flt_field\"" | "\"fuzzy_like_this_field\""
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"\"flt_field\""
		public Keyword getFlt_fieldKeyword_0_0() { return cFlt_fieldKeyword_0_0; }

		//"\"fuzzy_like_this_field\""
		public Keyword getFuzzy_like_this_fieldKeyword_0_1() { return cFuzzy_like_this_fieldKeyword_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FuzzyLikeThisFieldQueryObject
		public RuleCall getFuzzyLikeThisFieldQueryObjectParserRuleCall_2() { return cFuzzyLikeThisFieldQueryObjectParserRuleCall_2; }
	}

	public class FuzzyLikeThisFieldQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyLikeThisFieldQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLike_textKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cSTRINGTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cParamsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_1_0 = (RuleCall)cParamsAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cParamsAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_2_1_0 = (RuleCall)cParamsAssignment_7_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//FuzzyLikeThisFieldQueryObject:
		//	"{" fieldName=STRING ":" "{" "\"like_text\"" ":" STRING ("," params+=FuzzyLikeThisFieldQueryParameter (","
		//	params+=FuzzyLikeThisFieldQueryParameter)*)? "}" "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" "{" "\"like_text\"" ":" STRING ("," params+=FuzzyLikeThisFieldQueryParameter (","
		//params+=FuzzyLikeThisFieldQueryParameter)*)? "}" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"\"like_text\""
		public Keyword getLike_textKeyword_4() { return cLike_textKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_6() { return cSTRINGTerminalRuleCall_6; }

		//("," params+=FuzzyLikeThisFieldQueryParameter ("," params+=FuzzyLikeThisFieldQueryParameter)*)?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//params+=FuzzyLikeThisFieldQueryParameter
		public Assignment getParamsAssignment_7_1() { return cParamsAssignment_7_1; }

		//FuzzyLikeThisFieldQueryParameter
		public RuleCall getParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_1_0() { return cParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_1_0; }

		//("," params+=FuzzyLikeThisFieldQueryParameter)*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }

		//params+=FuzzyLikeThisFieldQueryParameter
		public Assignment getParamsAssignment_7_2_1() { return cParamsAssignment_7_2_1; }

		//FuzzyLikeThisFieldQueryParameter
		public RuleCall getParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_2_1_0() { return cParamsFuzzyLikeThisFieldQueryParameterParserRuleCall_7_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class FuzzyLikeThisFieldQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyLikeThisFieldQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIgnoreTfParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMaxQueryTermsParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFuzzinessParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPrefixLengthParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBoostParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAnalyzerParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//FuzzyLikeThisFieldQueryParameter:
		//	IgnoreTfParam | MaxQueryTermsParam | FuzzinessParam | PrefixLengthParam | BoostParam | AnalyzerParam;
		public ParserRule getRule() { return rule; }

		//IgnoreTfParam | MaxQueryTermsParam | FuzzinessParam | PrefixLengthParam | BoostParam | AnalyzerParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//IgnoreTfParam
		public RuleCall getIgnoreTfParamParserRuleCall_0() { return cIgnoreTfParamParserRuleCall_0; }

		//MaxQueryTermsParam
		public RuleCall getMaxQueryTermsParamParserRuleCall_1() { return cMaxQueryTermsParamParserRuleCall_1; }

		//FuzzinessParam
		public RuleCall getFuzzinessParamParserRuleCall_2() { return cFuzzinessParamParserRuleCall_2; }

		//PrefixLengthParam
		public RuleCall getPrefixLengthParamParserRuleCall_3() { return cPrefixLengthParamParserRuleCall_3; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_4() { return cBoostParamParserRuleCall_4; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_5() { return cAnalyzerParamParserRuleCall_5; }
	}

	public class FuzzyQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFuzzyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSimpleFuzzyQueryObjectParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cFuzzyQueryObjectParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//FuzzyQuery:
		//	"\"fuzzy\"" ":" (SimpleFuzzyQueryObject | FuzzyQueryObject);
		public ParserRule getRule() { return rule; }

		//"\"fuzzy\"" ":" (SimpleFuzzyQueryObject | FuzzyQueryObject)
		public Group getGroup() { return cGroup; }

		//"\"fuzzy\""
		public Keyword getFuzzyKeyword_0() { return cFuzzyKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SimpleFuzzyQueryObject | FuzzyQueryObject
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//SimpleFuzzyQueryObject
		public RuleCall getSimpleFuzzyQueryObjectParserRuleCall_2_0() { return cSimpleFuzzyQueryObjectParserRuleCall_2_0; }

		//FuzzyQueryObject
		public RuleCall getFuzzyQueryObjectParserRuleCall_2_1() { return cFuzzyQueryObjectParserRuleCall_2_1; }
	}

	public class SimpleFuzzyQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleFuzzyQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuerySTRINGTerminalRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SimpleFuzzyQueryObject:
		//	"{" field=STRING ":" query=STRING "}";
		public ParserRule getRule() { return rule; }

		//"{" field=STRING ":" query=STRING "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//field=STRING
		public Assignment getFieldAssignment_1() { return cFieldAssignment_1; }

		//STRING
		public RuleCall getFieldSTRINGTerminalRuleCall_1_0() { return cFieldSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//query=STRING
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_3_0() { return cQuerySTRINGTerminalRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FuzzyQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQFuzzyQueryObjectParametersParserRuleCall_3_0 = (RuleCall)cQAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FuzzyQueryObject:
		//	"{" field=STRING ":" q=FuzzyQueryObjectParameters "}";
		public ParserRule getRule() { return rule; }

		//"{" field=STRING ":" q=FuzzyQueryObjectParameters "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//field=STRING
		public Assignment getFieldAssignment_1() { return cFieldAssignment_1; }

		//STRING
		public RuleCall getFieldSTRINGTerminalRuleCall_1_0() { return cFieldSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//q=FuzzyQueryObjectParameters
		public Assignment getQAssignment_3() { return cQAssignment_3; }

		//FuzzyQueryObjectParameters
		public RuleCall getQFuzzyQueryObjectParametersParserRuleCall_3_0() { return cQFuzzyQueryObjectParametersParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FuzzyQueryObjectParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyQueryObjectParameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParamsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParamsFuzzyQueryParameterParserRuleCall_3_1_0 = (RuleCall)cParamsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cParamsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cParamsFuzzyQueryParameterParserRuleCall_3_2_1_0 = (RuleCall)cParamsAssignment_3_2_1.eContents().get(0);
		
		//FuzzyQueryObjectParameters:
		//	"\"value\"" ":" value=STRING ("," params+=FuzzyQueryParameter ("," params+=FuzzyQueryParameter)*)?;
		public ParserRule getRule() { return rule; }

		//"\"value\"" ":" value=STRING ("," params+=FuzzyQueryParameter ("," params+=FuzzyQueryParameter)*)?
		public Group getGroup() { return cGroup; }

		//"\"value\""
		public Keyword getValueKeyword_0() { return cValueKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }

		//("," params+=FuzzyQueryParameter ("," params+=FuzzyQueryParameter)*)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//params+=FuzzyQueryParameter
		public Assignment getParamsAssignment_3_1() { return cParamsAssignment_3_1; }

		//FuzzyQueryParameter
		public RuleCall getParamsFuzzyQueryParameterParserRuleCall_3_1_0() { return cParamsFuzzyQueryParameterParserRuleCall_3_1_0; }

		//("," params+=FuzzyQueryParameter)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//params+=FuzzyQueryParameter
		public Assignment getParamsAssignment_3_2_1() { return cParamsAssignment_3_2_1; }

		//FuzzyQueryParameter
		public RuleCall getParamsFuzzyQueryParameterParserRuleCall_3_2_1_0() { return cParamsFuzzyQueryParameterParserRuleCall_3_2_1_0; }
	}

	public class FuzzyQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FuzzyQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBoostParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFuzzinessParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPrefixLengthParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMaxExpansionsParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//FuzzyQueryParameter:
		//	BoostParam | FuzzinessParam | PrefixLengthParam | MaxExpansionsParam;
		public ParserRule getRule() { return rule; }

		//BoostParam | FuzzinessParam | PrefixLengthParam | MaxExpansionsParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_0() { return cBoostParamParserRuleCall_0; }

		//FuzzinessParam
		public RuleCall getFuzzinessParamParserRuleCall_1() { return cFuzzinessParamParserRuleCall_1; }

		//PrefixLengthParam
		public RuleCall getPrefixLengthParamParserRuleCall_2() { return cPrefixLengthParamParserRuleCall_2; }

		//MaxExpansionsParam
		public RuleCall getMaxExpansionsParamParserRuleCall_3() { return cMaxExpansionsParamParserRuleCall_3; }
	}

	public class GeoshapeQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoshapeQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_shapeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoshapeQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoshapeQuery:
		//	"\"geo_shape\"" ":" GeoshapeQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_shape\"" ":" GeoshapeQueryObject
		public Group getGroup() { return cGroup; }

		//"\"geo_shape\""
		public Keyword getGeo_shapeKeyword_0() { return cGeo_shapeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoshapeQueryObject
		public RuleCall getGeoshapeQueryObjectParserRuleCall_2() { return cGeoshapeQueryObjectParserRuleCall_2; }
	}

	public class GeoshapeQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoshapeQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cShapeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cShapeShapeObjectParserRuleCall_3_0 = (RuleCall)cShapeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GeoshapeQueryObject:
		//	"{" fieldName=STRING ":" shape=ShapeObject "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" shape=ShapeObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//shape=ShapeObject
		public Assignment getShapeAssignment_3() { return cShapeAssignment_3; }

		//ShapeObject
		public RuleCall getShapeShapeObjectParserRuleCall_3_0() { return cShapeShapeObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class HasChildQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasChildQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHas_childKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cHasChildQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//HasChildQuery:
		//	"\"has_child\"" ":" HasChildQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"has_child\"" ":" HasChildQueryObject
		public Group getGroup() { return cGroup; }

		//"\"has_child\""
		public Keyword getHas_childKeyword_0() { return cHas_childKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//HasChildQueryObject
		public RuleCall getHasChildQueryObjectParserRuleCall_2() { return cHasChildQueryObjectParserRuleCall_2; }
	}

	public class HasChildQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasChildQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cChildTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cChildTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cChildTypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cScoreModeParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cQueryAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cQueryQueryParserRuleCall_6_0_0 = (RuleCall)cQueryAssignment_6_0.eContents().get(0);
		private final Assignment cFilterAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_6_1_0 = (RuleCall)cFilterAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//HasChildQueryObject:
		//	"{" "\"type\"" ":" childType=STRING ("," ScoreModeParam)? "," (query=Query | filter=Filter) "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"type\"" ":" childType=STRING ("," ScoreModeParam)? "," (query=Query | filter=Filter) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"type\""
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//childType=STRING
		public Assignment getChildTypeAssignment_3() { return cChildTypeAssignment_3; }

		//STRING
		public RuleCall getChildTypeSTRINGTerminalRuleCall_3_0() { return cChildTypeSTRINGTerminalRuleCall_3_0; }

		//("," ScoreModeParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//ScoreModeParam
		public RuleCall getScoreModeParamParserRuleCall_4_1() { return cScoreModeParamParserRuleCall_4_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//query=Query | filter=Filter
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//query=Query
		public Assignment getQueryAssignment_6_0() { return cQueryAssignment_6_0; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_6_0_0() { return cQueryQueryParserRuleCall_6_0_0; }

		//filter=Filter
		public Assignment getFilterAssignment_6_1() { return cFilterAssignment_6_1; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_6_1_0() { return cFilterFilterParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class HasParentQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasParentQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHas_parentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cHasParentQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//HasParentQuery:
		//	"\"has_parent\"" ":" HasParentQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"has_parent\"" ":" HasParentQueryObject
		public Group getGroup() { return cGroup; }

		//"\"has_parent\""
		public Keyword getHas_parentKeyword_0() { return cHas_parentKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//HasParentQueryObject
		public RuleCall getHasParentQueryObjectParserRuleCall_2() { return cHasParentQueryObjectParserRuleCall_2; }
	}

	public class HasParentQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasParentQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParentTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cParentTypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cScoreModeParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final Assignment cQueryAssignment_6_0 = (Assignment)cAlternatives_6.eContents().get(0);
		private final RuleCall cQueryQueryParserRuleCall_6_0_0 = (RuleCall)cQueryAssignment_6_0.eContents().get(0);
		private final Assignment cFilterAssignment_6_1 = (Assignment)cAlternatives_6.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_6_1_0 = (RuleCall)cFilterAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//HasParentQueryObject:
		//	"{" "\"type\"" ":" parentType=STRING ("," ScoreModeParam)? "," (query=Query | filter=Filter) "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"type\"" ":" parentType=STRING ("," ScoreModeParam)? "," (query=Query | filter=Filter) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"type\""
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//parentType=STRING
		public Assignment getParentTypeAssignment_3() { return cParentTypeAssignment_3; }

		//STRING
		public RuleCall getParentTypeSTRINGTerminalRuleCall_3_0() { return cParentTypeSTRINGTerminalRuleCall_3_0; }

		//("," ScoreModeParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//ScoreModeParam
		public RuleCall getScoreModeParamParserRuleCall_4_1() { return cScoreModeParamParserRuleCall_4_1; }

		//","
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }

		//query=Query | filter=Filter
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//query=Query
		public Assignment getQueryAssignment_6_0() { return cQueryAssignment_6_0; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_6_0_0() { return cQueryQueryParserRuleCall_6_0_0; }

		//filter=Filter
		public Assignment getFilterAssignment_6_1() { return cFilterAssignment_6_1; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_6_1_0() { return cFilterFilterParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class IdsQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IdsQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIdsObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IdsQuery:
		//	"\"ids\"" ":" IdsObject;
		public ParserRule getRule() { return rule; }

		//"\"ids\"" ":" IdsObject
		public Group getGroup() { return cGroup; }

		//"\"ids\""
		public Keyword getIdsKeyword_0() { return cIdsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//IdsObject
		public RuleCall getIdsObjectParserRuleCall_2() { return cIdsObjectParserRuleCall_2; }
	}

	public class IdsObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IdsObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Alternatives cAlternatives_1_2 = (Alternatives)cGroup_1.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_1_2_0 = (RuleCall)cAlternatives_1_2.eContents().get(0);
		private final Group cGroup_1_2_1 = (Group)cAlternatives_1_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_2_1_0 = (Keyword)cGroup_1_2_1.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1_2_1_1 = (RuleCall)cGroup_1_2_1.eContents().get(1);
		private final Group cGroup_1_2_1_2 = (Group)cGroup_1_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_1_2_0 = (Keyword)cGroup_1_2_1_2.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_1_2_1_2_1 = (RuleCall)cGroup_1_2_1_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_1_2_1_3 = (Keyword)cGroup_1_2_1.eContents().get(3);
		private final Keyword cCommaKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cValuesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//IdsObject:
		//	"{" ("\"type\"" ":" (STRING | "[" STRING ("," STRING) "]") ",")? "\"values\"" ":" "[" STRING ("," STRING)* "]" "}";
		public ParserRule getRule() { return rule; }

		//"{" ("\"type\"" ":" (STRING | "[" STRING ("," STRING) "]") ",")? "\"values\"" ":" "[" STRING ("," STRING)* "]" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//("\"type\"" ":" (STRING | "[" STRING ("," STRING) "]") ",")?
		public Group getGroup_1() { return cGroup_1; }

		//"\"type\""
		public Keyword getTypeKeyword_1_0() { return cTypeKeyword_1_0; }

		//":"
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }

		//STRING | "[" STRING ("," STRING) "]"
		public Alternatives getAlternatives_1_2() { return cAlternatives_1_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_2_0() { return cSTRINGTerminalRuleCall_1_2_0; }

		//"[" STRING ("," STRING) "]"
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_2_1_0() { return cLeftSquareBracketKeyword_1_2_1_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_2_1_1() { return cSTRINGTerminalRuleCall_1_2_1_1; }

		//"," STRING
		public Group getGroup_1_2_1_2() { return cGroup_1_2_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_1_2_0() { return cCommaKeyword_1_2_1_2_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_1_2_1_2_1() { return cSTRINGTerminalRuleCall_1_2_1_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2_1_3() { return cRightSquareBracketKeyword_1_2_1_3; }

		//","
		public Keyword getCommaKeyword_1_3() { return cCommaKeyword_1_3; }

		//"\"values\""
		public Keyword getValuesKeyword_2() { return cValuesKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_5() { return cSTRINGTerminalRuleCall_5; }

		//("," STRING)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_6_1() { return cSTRINGTerminalRuleCall_6_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class IndicesQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndicesQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndicesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIndicesQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IndicesQuery:
		//	"\"indices\"" ":" IndicesQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"indices\"" ":" IndicesQueryObject
		public Group getGroup() { return cGroup; }

		//"\"indices\""
		public Keyword getIndicesKeyword_0() { return cIndicesKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//IndicesQueryObject
		public RuleCall getIndicesQueryObjectParserRuleCall_2() { return cIndicesQueryObjectParserRuleCall_2; }
	}

	public class IndicesQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndicesQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cIndicesParamParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cIndexParamParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final Assignment cQueryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cQueryQueryParserRuleCall_2_0 = (RuleCall)cQueryAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cNo_match_queryKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cColonKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cNoMatchQueryAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cNoMatchQueryQueryObjectParserRuleCall_3_3_0 = (RuleCall)cNoMatchQueryAssignment_3_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//IndicesQueryObject:
		//	"{" (IndicesParam | IndexParam) query=Query ("," "\"no_match_query\"" ":" noMatchQuery=QueryObject)? "}";
		public ParserRule getRule() { return rule; }

		//"{" (IndicesParam | IndexParam) query=Query ("," "\"no_match_query\"" ":" noMatchQuery=QueryObject)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//IndicesParam | IndexParam
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//IndicesParam
		public RuleCall getIndicesParamParserRuleCall_1_0() { return cIndicesParamParserRuleCall_1_0; }

		//IndexParam
		public RuleCall getIndexParamParserRuleCall_1_1() { return cIndexParamParserRuleCall_1_1; }

		//query=Query
		public Assignment getQueryAssignment_2() { return cQueryAssignment_2; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_2_0() { return cQueryQueryParserRuleCall_2_0; }

		//("," "\"no_match_query\"" ":" noMatchQuery=QueryObject)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//"\"no_match_query\""
		public Keyword getNo_match_queryKeyword_3_1() { return cNo_match_queryKeyword_3_1; }

		//":"
		public Keyword getColonKeyword_3_2() { return cColonKeyword_3_2; }

		//noMatchQuery=QueryObject
		public Assignment getNoMatchQueryAssignment_3_3() { return cNoMatchQueryAssignment_3_3; }

		//QueryObject
		public RuleCall getNoMatchQueryQueryObjectParserRuleCall_3_3_0() { return cNoMatchQueryQueryObjectParserRuleCall_3_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MatchAllQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchAllQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatch_allKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMatchAllQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MatchAllQuery:
		//	"\"match_all\"" ":" MatchAllQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"match_all\"" ":" MatchAllQueryObject
		public Group getGroup() { return cGroup; }

		//"\"match_all\""
		public Keyword getMatch_allKeyword_0() { return cMatch_allKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MatchAllQueryObject
		public RuleCall getMatchAllQueryObjectParserRuleCall_2() { return cMatchAllQueryObjectParserRuleCall_2; }
	}

	public class MatchAllQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchAllQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cBoostParamParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//MatchAllQueryObject:
		//	"{" BoostParam? "}";
		public ParserRule getRule() { return rule; }

		//"{" BoostParam? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//BoostParam?
		public RuleCall getBoostParamParserRuleCall_1() { return cBoostParamParserRuleCall_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class MoreLikeThisQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MoreLikeThisQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cMltKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cMore_like_thisKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMoreLikeThisQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MoreLikeThisQuery:
		//	("\"mlt\"" | "\"more_like_this\"") ":" MoreLikeThisQueryObject;
		public ParserRule getRule() { return rule; }

		//("\"mlt\"" | "\"more_like_this\"") ":" MoreLikeThisQueryObject
		public Group getGroup() { return cGroup; }

		//"\"mlt\"" | "\"more_like_this\""
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"\"mlt\""
		public Keyword getMltKeyword_0_0() { return cMltKeyword_0_0; }

		//"\"more_like_this\""
		public Keyword getMore_like_thisKeyword_0_1() { return cMore_like_thisKeyword_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MoreLikeThisQueryObject
		public RuleCall getMoreLikeThisQueryObjectParserRuleCall_2() { return cMoreLikeThisQueryObjectParserRuleCall_2; }
	}

	public class MoreLikeThisQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MoreLikeThisQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFieldsParamParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cLikeTextParamParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsMoreLikeThisQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsMoreLikeThisQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//MoreLikeThisQueryObject:
		//	"{" FieldsParam "," LikeTextParam ("," params+=MoreLikeThisQueryParameter ("," params+=MoreLikeThisQueryParameter)*)?
		//	"}";
		public ParserRule getRule() { return rule; }

		//"{" FieldsParam "," LikeTextParam ("," params+=MoreLikeThisQueryParameter ("," params+=MoreLikeThisQueryParameter)*)?
		//"}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//FieldsParam
		public RuleCall getFieldsParamParserRuleCall_1() { return cFieldsParamParserRuleCall_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//LikeTextParam
		public RuleCall getLikeTextParamParserRuleCall_3() { return cLikeTextParamParserRuleCall_3; }

		//("," params+=MoreLikeThisQueryParameter ("," params+=MoreLikeThisQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=MoreLikeThisQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//MoreLikeThisQueryParameter
		public RuleCall getParamsMoreLikeThisQueryParameterParserRuleCall_4_1_0() { return cParamsMoreLikeThisQueryParameterParserRuleCall_4_1_0; }

		//("," params+=MoreLikeThisQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=MoreLikeThisQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//MoreLikeThisQueryParameter
		public RuleCall getParamsMoreLikeThisQueryParameterParserRuleCall_4_2_1_0() { return cParamsMoreLikeThisQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class MoreLikeThisQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MoreLikeThisQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPercentTermsToMatchParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStopWordsParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMinDocFreqParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMaxDocFreqParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMinWordLengthParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMaxWordLengthParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cBoostTermsParamParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cBoostParamParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cAnalyzerParamParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cMinTermFreqParamParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cMaxQueryTermsParamParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//MoreLikeThisQueryParameter:
		//	PercentTermsToMatchParam | StopWordsParam | MinDocFreqParam | MaxDocFreqParam | MinWordLengthParam |
		//	MaxWordLengthParam | BoostTermsParam | BoostParam | AnalyzerParam | MinTermFreqParam | MaxQueryTermsParam;
		public ParserRule getRule() { return rule; }

		//PercentTermsToMatchParam | StopWordsParam | MinDocFreqParam | MaxDocFreqParam | MinWordLengthParam | MaxWordLengthParam
		//| BoostTermsParam | BoostParam | AnalyzerParam | MinTermFreqParam | MaxQueryTermsParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//PercentTermsToMatchParam
		public RuleCall getPercentTermsToMatchParamParserRuleCall_0() { return cPercentTermsToMatchParamParserRuleCall_0; }

		//StopWordsParam
		public RuleCall getStopWordsParamParserRuleCall_1() { return cStopWordsParamParserRuleCall_1; }

		//MinDocFreqParam
		public RuleCall getMinDocFreqParamParserRuleCall_2() { return cMinDocFreqParamParserRuleCall_2; }

		//MaxDocFreqParam
		public RuleCall getMaxDocFreqParamParserRuleCall_3() { return cMaxDocFreqParamParserRuleCall_3; }

		//MinWordLengthParam
		public RuleCall getMinWordLengthParamParserRuleCall_4() { return cMinWordLengthParamParserRuleCall_4; }

		//MaxWordLengthParam
		public RuleCall getMaxWordLengthParamParserRuleCall_5() { return cMaxWordLengthParamParserRuleCall_5; }

		//BoostTermsParam
		public RuleCall getBoostTermsParamParserRuleCall_6() { return cBoostTermsParamParserRuleCall_6; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_7() { return cBoostParamParserRuleCall_7; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_8() { return cAnalyzerParamParserRuleCall_8; }

		//MinTermFreqParam
		public RuleCall getMinTermFreqParamParserRuleCall_9() { return cMinTermFreqParamParserRuleCall_9; }

		//MaxQueryTermsParam
		public RuleCall getMaxQueryTermsParamParserRuleCall_10() { return cMaxQueryTermsParamParserRuleCall_10; }
	}

	public class MoreLikeThisFieldQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MoreLikeThisFieldQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cMlt_fieldKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cMore_like_this_fieldKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMoreLikeThisQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MoreLikeThisFieldQuery:
		//	("\"mlt_field\"" | "\"more_like_this_field\"") ":" MoreLikeThisQueryObject;
		public ParserRule getRule() { return rule; }

		//("\"mlt_field\"" | "\"more_like_this_field\"") ":" MoreLikeThisQueryObject
		public Group getGroup() { return cGroup; }

		//"\"mlt_field\"" | "\"more_like_this_field\""
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"\"mlt_field\""
		public Keyword getMlt_fieldKeyword_0_0() { return cMlt_fieldKeyword_0_0; }

		//"\"more_like_this_field\""
		public Keyword getMore_like_this_fieldKeyword_0_1() { return cMore_like_this_fieldKeyword_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MoreLikeThisQueryObject
		public RuleCall getMoreLikeThisQueryObjectParserRuleCall_2() { return cMoreLikeThisQueryObjectParserRuleCall_2; }
	}

	public class MoreLikeThisFieldQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MoreLikeThisFieldQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cQueryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQueryLikeTextParamParserRuleCall_4_0 = (RuleCall)cQueryAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParamsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParamsMoreLikeThisFieldQueryParameterParserRuleCall_5_1_0 = (RuleCall)cParamsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cParamsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cParamsMoreLikeThisFieldQueryParameterParserRuleCall_5_2_1_0 = (RuleCall)cParamsAssignment_5_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MoreLikeThisFieldQueryObject:
		//	"{" fieldName=STRING ":" "{" query=LikeTextParam ("," params+=MoreLikeThisFieldQueryParameter (","
		//	params+=MoreLikeThisFieldQueryParameter)*)? "}" "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" "{" query=LikeTextParam ("," params+=MoreLikeThisFieldQueryParameter (","
		//params+=MoreLikeThisFieldQueryParameter)*)? "}" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//query=LikeTextParam
		public Assignment getQueryAssignment_4() { return cQueryAssignment_4; }

		//LikeTextParam
		public RuleCall getQueryLikeTextParamParserRuleCall_4_0() { return cQueryLikeTextParamParserRuleCall_4_0; }

		//("," params+=MoreLikeThisFieldQueryParameter ("," params+=MoreLikeThisFieldQueryParameter)*)?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//params+=MoreLikeThisFieldQueryParameter
		public Assignment getParamsAssignment_5_1() { return cParamsAssignment_5_1; }

		//MoreLikeThisFieldQueryParameter
		public RuleCall getParamsMoreLikeThisFieldQueryParameterParserRuleCall_5_1_0() { return cParamsMoreLikeThisFieldQueryParameterParserRuleCall_5_1_0; }

		//("," params+=MoreLikeThisFieldQueryParameter)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//params+=MoreLikeThisFieldQueryParameter
		public Assignment getParamsAssignment_5_2_1() { return cParamsAssignment_5_2_1; }

		//MoreLikeThisFieldQueryParameter
		public RuleCall getParamsMoreLikeThisFieldQueryParameterParserRuleCall_5_2_1_0() { return cParamsMoreLikeThisFieldQueryParameterParserRuleCall_5_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class MoreLikeThisFieldQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MoreLikeThisFieldQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPercentTermsToMatchParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStopWordsParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMinDocFreqParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMaxDocFreqParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cMinWordLengthParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cMaxWordLengthParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cBoostTermsParamParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cBoostParamParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cAnalyzerParamParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cMinTermFreqParamParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cMaxQueryTermsParamParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//MoreLikeThisFieldQueryParameter:
		//	PercentTermsToMatchParam | StopWordsParam | MinDocFreqParam | MaxDocFreqParam | MinWordLengthParam |
		//	MaxWordLengthParam | BoostTermsParam | BoostParam | AnalyzerParam | MinTermFreqParam | MaxQueryTermsParam;
		public ParserRule getRule() { return rule; }

		//PercentTermsToMatchParam | StopWordsParam | MinDocFreqParam | MaxDocFreqParam | MinWordLengthParam | MaxWordLengthParam
		//| BoostTermsParam | BoostParam | AnalyzerParam | MinTermFreqParam | MaxQueryTermsParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//PercentTermsToMatchParam
		public RuleCall getPercentTermsToMatchParamParserRuleCall_0() { return cPercentTermsToMatchParamParserRuleCall_0; }

		//StopWordsParam
		public RuleCall getStopWordsParamParserRuleCall_1() { return cStopWordsParamParserRuleCall_1; }

		//MinDocFreqParam
		public RuleCall getMinDocFreqParamParserRuleCall_2() { return cMinDocFreqParamParserRuleCall_2; }

		//MaxDocFreqParam
		public RuleCall getMaxDocFreqParamParserRuleCall_3() { return cMaxDocFreqParamParserRuleCall_3; }

		//MinWordLengthParam
		public RuleCall getMinWordLengthParamParserRuleCall_4() { return cMinWordLengthParamParserRuleCall_4; }

		//MaxWordLengthParam
		public RuleCall getMaxWordLengthParamParserRuleCall_5() { return cMaxWordLengthParamParserRuleCall_5; }

		//BoostTermsParam
		public RuleCall getBoostTermsParamParserRuleCall_6() { return cBoostTermsParamParserRuleCall_6; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_7() { return cBoostParamParserRuleCall_7; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_8() { return cAnalyzerParamParserRuleCall_8; }

		//MinTermFreqParam
		public RuleCall getMinTermFreqParamParserRuleCall_9() { return cMinTermFreqParamParserRuleCall_9; }

		//MaxQueryTermsParam
		public RuleCall getMaxQueryTermsParamParserRuleCall_10() { return cMaxQueryTermsParamParserRuleCall_10; }
	}

	public class NestedQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNestedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cNestedQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//NestedQuery:
		//	"\"nested\"" ":" NestedQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"nested\"" ":" NestedQueryObject
		public Group getGroup() { return cGroup; }

		//"\"nested\""
		public Keyword getNestedKeyword_0() { return cNestedKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NestedQueryObject
		public RuleCall getNestedQueryObjectParserRuleCall_2() { return cNestedQueryObjectParserRuleCall_2; }
	}

	public class NestedQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cScoreModeParamParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cQueryParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//NestedQueryObject:
		//	"{" "\"path\"" ":" STRING "," ScoreModeParam "," Query "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"path\"" ":" STRING "," ScoreModeParam "," Query "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"path\""
		public Keyword getPathKeyword_1() { return cPathKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_3() { return cSTRINGTerminalRuleCall_3; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//ScoreModeParam
		public RuleCall getScoreModeParamParserRuleCall_5() { return cScoreModeParamParserRuleCall_5; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//Query
		public RuleCall getQueryParserRuleCall_7() { return cQueryParserRuleCall_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class PrefixQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrefixQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrefixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSimplePrefixQueryObjectParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cPrefixQueryObjectParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//PrefixQuery:
		//	"\"prefix\"" ":" (SimplePrefixQueryObject | PrefixQueryObject);
		public ParserRule getRule() { return rule; }

		//"\"prefix\"" ":" (SimplePrefixQueryObject | PrefixQueryObject)
		public Group getGroup() { return cGroup; }

		//"\"prefix\""
		public Keyword getPrefixKeyword_0() { return cPrefixKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SimplePrefixQueryObject | PrefixQueryObject
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//SimplePrefixQueryObject
		public RuleCall getSimplePrefixQueryObjectParserRuleCall_2_0() { return cSimplePrefixQueryObjectParserRuleCall_2_0; }

		//PrefixQueryObject
		public RuleCall getPrefixQueryObjectParserRuleCall_2_1() { return cPrefixQueryObjectParserRuleCall_2_1; }
	}

	public class SimplePrefixQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimplePrefixQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPrefixAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPrefixSTRINGTerminalRuleCall_3_0 = (RuleCall)cPrefixAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SimplePrefixQueryObject:
		//	"{" fieldName=STRING ":" prefix=STRING "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" prefix=STRING "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//prefix=STRING
		public Assignment getPrefixAssignment_3() { return cPrefixAssignment_3; }

		//STRING
		public RuleCall getPrefixSTRINGTerminalRuleCall_3_0() { return cPrefixSTRINGTerminalRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PrefixQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrefixQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPrefixAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPrefixPrefixQueryParameterObjectParserRuleCall_3_0 = (RuleCall)cPrefixAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PrefixQueryObject:
		//	"{" fieldName=STRING ":" prefix=PrefixQueryParameterObject "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" prefix=PrefixQueryParameterObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//prefix=PrefixQueryParameterObject
		public Assignment getPrefixAssignment_3() { return cPrefixAssignment_3; }

		//PrefixQueryParameterObject
		public RuleCall getPrefixPrefixQueryParameterObjectParserRuleCall_3_0() { return cPrefixPrefixQueryParameterObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PrefixQueryParameterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrefixQueryParameterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cValueKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cPrefixKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueSTRINGTerminalRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cBoostParamParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//PrefixQueryParameterObject:
		//	"{" ("\"value\"" | "\"prefix\"") ":" value=STRING "," BoostParam "}";
		public ParserRule getRule() { return rule; }

		//"{" ("\"value\"" | "\"prefix\"") ":" value=STRING "," BoostParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"value\"" | "\"prefix\""
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"\"value\""
		public Keyword getValueKeyword_1_0() { return cValueKeyword_1_0; }

		//"\"prefix\""
		public Keyword getPrefixKeyword_1_1() { return cPrefixKeyword_1_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//value=STRING
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_3_0() { return cValueSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_5() { return cBoostParamParserRuleCall_5; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class QueryStringQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryStringQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuery_stringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cQueryStringQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//QueryStringQuery:
		//	"\"query_string\"" ":" QueryStringQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"query_string\"" ":" QueryStringQueryObject
		public Group getGroup() { return cGroup; }

		//"\"query_string\""
		public Keyword getQuery_stringKeyword_0() { return cQuery_stringKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//QueryStringQueryObject
		public RuleCall getQueryStringQueryObjectParserRuleCall_2() { return cQueryStringQueryObjectParserRuleCall_2; }
	}

	public class QueryStringQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryStringQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cQueryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuerySTRINGTerminalRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsQueryStringQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsQueryStringQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//QueryStringQueryObject:
		//	"{" "\"query\"" ":" query=STRING ("," params+=QueryStringQueryParameter ("," params+=QueryStringQueryParameter)*)?
		//	"}";
		public ParserRule getRule() { return rule; }

		//"{" "\"query\"" ":" query=STRING ("," params+=QueryStringQueryParameter ("," params+=QueryStringQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"query\""
		public Keyword getQueryKeyword_1() { return cQueryKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//query=STRING
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_3_0() { return cQuerySTRINGTerminalRuleCall_3_0; }

		//("," params+=QueryStringQueryParameter ("," params+=QueryStringQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=QueryStringQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//QueryStringQueryParameter
		public RuleCall getParamsQueryStringQueryParameterParserRuleCall_4_1_0() { return cParamsQueryStringQueryParameterParserRuleCall_4_1_0; }

		//("," params+=QueryStringQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=QueryStringQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//QueryStringQueryParameter
		public RuleCall getParamsQueryStringQueryParameterParserRuleCall_4_2_1_0() { return cParamsQueryStringQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class QueryStringQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryStringQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFieldsParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDefaultFieldParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDefaultOperatorParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnalyzerParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAllowLeadingWildcardParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final RuleCall cLowercaseExpandedTermsParamParserRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final RuleCall cEnablePositionIncrementsParamParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final RuleCall cFuzzyMaxExpansionsParamParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cFuzzinessParamParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cFuzzyPrefixLengthParamParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPhraseSlopParamParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cBoostParamParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cAnalyzeWildcardParamParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cAutoGeneratePhraseQueriesParamParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cMinimumShouldMatchParamParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cLenientParamParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cLocaleParamParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		
		//QueryStringQueryParameter:
		//	FieldsParam | DefaultFieldParam | DefaultOperatorParam | AnalyzerParam | AllowLeadingWildcardParam |
		//	LowercaseExpandedTermsParam EnablePositionIncrementsParam | FuzzyMaxExpansionsParam | FuzzinessParam |
		//	FuzzyPrefixLengthParam | PhraseSlopParam | BoostParam | AnalyzeWildcardParam | AutoGeneratePhraseQueriesParam |
		//	MinimumShouldMatchParam | LenientParam | LocaleParam;
		public ParserRule getRule() { return rule; }

		//FieldsParam | DefaultFieldParam | DefaultOperatorParam | AnalyzerParam | AllowLeadingWildcardParam |
		//LowercaseExpandedTermsParam EnablePositionIncrementsParam | FuzzyMaxExpansionsParam | FuzzinessParam |
		//FuzzyPrefixLengthParam | PhraseSlopParam | BoostParam | AnalyzeWildcardParam | AutoGeneratePhraseQueriesParam |
		//MinimumShouldMatchParam | LenientParam | LocaleParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//FieldsParam
		public RuleCall getFieldsParamParserRuleCall_0() { return cFieldsParamParserRuleCall_0; }

		//DefaultFieldParam
		public RuleCall getDefaultFieldParamParserRuleCall_1() { return cDefaultFieldParamParserRuleCall_1; }

		//DefaultOperatorParam
		public RuleCall getDefaultOperatorParamParserRuleCall_2() { return cDefaultOperatorParamParserRuleCall_2; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_3() { return cAnalyzerParamParserRuleCall_3; }

		//AllowLeadingWildcardParam
		public RuleCall getAllowLeadingWildcardParamParserRuleCall_4() { return cAllowLeadingWildcardParamParserRuleCall_4; }

		//LowercaseExpandedTermsParam EnablePositionIncrementsParam
		public Group getGroup_5() { return cGroup_5; }

		//LowercaseExpandedTermsParam
		public RuleCall getLowercaseExpandedTermsParamParserRuleCall_5_0() { return cLowercaseExpandedTermsParamParserRuleCall_5_0; }

		//EnablePositionIncrementsParam
		public RuleCall getEnablePositionIncrementsParamParserRuleCall_5_1() { return cEnablePositionIncrementsParamParserRuleCall_5_1; }

		//FuzzyMaxExpansionsParam
		public RuleCall getFuzzyMaxExpansionsParamParserRuleCall_6() { return cFuzzyMaxExpansionsParamParserRuleCall_6; }

		//FuzzinessParam
		public RuleCall getFuzzinessParamParserRuleCall_7() { return cFuzzinessParamParserRuleCall_7; }

		//FuzzyPrefixLengthParam
		public RuleCall getFuzzyPrefixLengthParamParserRuleCall_8() { return cFuzzyPrefixLengthParamParserRuleCall_8; }

		//PhraseSlopParam
		public RuleCall getPhraseSlopParamParserRuleCall_9() { return cPhraseSlopParamParserRuleCall_9; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_10() { return cBoostParamParserRuleCall_10; }

		//AnalyzeWildcardParam
		public RuleCall getAnalyzeWildcardParamParserRuleCall_11() { return cAnalyzeWildcardParamParserRuleCall_11; }

		//AutoGeneratePhraseQueriesParam
		public RuleCall getAutoGeneratePhraseQueriesParamParserRuleCall_12() { return cAutoGeneratePhraseQueriesParamParserRuleCall_12; }

		//MinimumShouldMatchParam
		public RuleCall getMinimumShouldMatchParamParserRuleCall_13() { return cMinimumShouldMatchParamParserRuleCall_13; }

		//LenientParam
		public RuleCall getLenientParamParserRuleCall_14() { return cLenientParamParserRuleCall_14; }

		//LocaleParam
		public RuleCall getLocaleParamParserRuleCall_15() { return cLocaleParamParserRuleCall_15; }
	}

	public class SimpleQueryStringQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleQueryStringQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSimple_query_stringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSimpleQueryStringQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SimpleQueryStringQuery:
		//	"\"simple_query_string\"" ":" SimpleQueryStringQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"simple_query_string\"" ":" SimpleQueryStringQueryObject
		public Group getGroup() { return cGroup; }

		//"\"simple_query_string\""
		public Keyword getSimple_query_stringKeyword_0() { return cSimple_query_stringKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SimpleQueryStringQueryObject
		public RuleCall getSimpleQueryStringQueryObjectParserRuleCall_2() { return cSimpleQueryStringQueryObjectParserRuleCall_2; }
	}

	public class SimpleQueryStringQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleQueryStringQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cQueryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQueryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQuerySTRINGTerminalRuleCall_3_0 = (RuleCall)cQueryAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsSimpleQueryStringQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsSimpleQueryStringQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SimpleQueryStringQueryObject:
		//	"{" "\"query\"" ":" query=STRING ("," params+=SimpleQueryStringQueryParameter (","
		//	params+=SimpleQueryStringQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"query\"" ":" query=STRING ("," params+=SimpleQueryStringQueryParameter (","
		//params+=SimpleQueryStringQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"query\""
		public Keyword getQueryKeyword_1() { return cQueryKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//query=STRING
		public Assignment getQueryAssignment_3() { return cQueryAssignment_3; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_3_0() { return cQuerySTRINGTerminalRuleCall_3_0; }

		//("," params+=SimpleQueryStringQueryParameter ("," params+=SimpleQueryStringQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=SimpleQueryStringQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//SimpleQueryStringQueryParameter
		public RuleCall getParamsSimpleQueryStringQueryParameterParserRuleCall_4_1_0() { return cParamsSimpleQueryStringQueryParameterParserRuleCall_4_1_0; }

		//("," params+=SimpleQueryStringQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=SimpleQueryStringQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//SimpleQueryStringQueryParameter
		public RuleCall getParamsSimpleQueryStringQueryParameterParserRuleCall_4_2_1_0() { return cParamsSimpleQueryStringQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SimpleQueryStringQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleQueryStringQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFieldsParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDefaultOperatorParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAnalyzerParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFlagsParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLowercaseExpandedTermsParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLocaleParamParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//SimpleQueryStringQueryParameter:
		//	FieldsParam | DefaultOperatorParam | AnalyzerParam | FlagsParam | LowercaseExpandedTermsParam | LocaleParam;
		public ParserRule getRule() { return rule; }

		//FieldsParam | DefaultOperatorParam | AnalyzerParam | FlagsParam | LowercaseExpandedTermsParam | LocaleParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//FieldsParam
		public RuleCall getFieldsParamParserRuleCall_0() { return cFieldsParamParserRuleCall_0; }

		//DefaultOperatorParam
		public RuleCall getDefaultOperatorParamParserRuleCall_1() { return cDefaultOperatorParamParserRuleCall_1; }

		//AnalyzerParam
		public RuleCall getAnalyzerParamParserRuleCall_2() { return cAnalyzerParamParserRuleCall_2; }

		//FlagsParam
		public RuleCall getFlagsParamParserRuleCall_3() { return cFlagsParamParserRuleCall_3; }

		//LowercaseExpandedTermsParam
		public RuleCall getLowercaseExpandedTermsParamParserRuleCall_4() { return cLowercaseExpandedTermsParamParserRuleCall_4; }

		//LocaleParam
		public RuleCall getLocaleParamParserRuleCall_5() { return cLocaleParamParserRuleCall_5; }
	}

	public class RangeQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRangeQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RangeQuery:
		//	"\"range\"" ":" RangeQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"range\"" ":" RangeQueryObject
		public Group getGroup() { return cGroup; }

		//"\"range\""
		public Keyword getRangeKeyword_0() { return cRangeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//RangeQueryObject
		public RuleCall getRangeQueryObjectParserRuleCall_2() { return cRangeQueryObjectParserRuleCall_2; }
	}

	public class RangeQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParamsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParamsRangeQueryParametersObjectParserRuleCall_3_0 = (RuleCall)cParamsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RangeQueryObject:
		//	"{" fieldName=STRING ":" params=RangeQueryParametersObject "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" params=RangeQueryParametersObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//params=RangeQueryParametersObject
		public Assignment getParamsAssignment_3() { return cParamsAssignment_3; }

		//RangeQueryParametersObject
		public RuleCall getParamsRangeQueryParametersObjectParserRuleCall_3_0() { return cParamsRangeQueryParametersObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RangeQueryParametersObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeQueryParametersObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParamsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamsRangeQueryParameterParserRuleCall_1_0 = (RuleCall)cParamsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParamsRangeQueryParameterParserRuleCall_2_1_0 = (RuleCall)cParamsAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//RangeQueryParametersObject:
		//	"{" params+=RangeQueryParameter ("," params+=RangeQueryParameter)* "}";
		public ParserRule getRule() { return rule; }

		//"{" params+=RangeQueryParameter ("," params+=RangeQueryParameter)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//params+=RangeQueryParameter
		public Assignment getParamsAssignment_1() { return cParamsAssignment_1; }

		//RangeQueryParameter
		public RuleCall getParamsRangeQueryParameterParserRuleCall_1_0() { return cParamsRangeQueryParameterParserRuleCall_1_0; }

		//("," params+=RangeQueryParameter)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//params+=RangeQueryParameter
		public Assignment getParamsAssignment_2_1() { return cParamsAssignment_2_1; }

		//RangeQueryParameter
		public RuleCall getParamsRangeQueryParameterParserRuleCall_2_1_0() { return cParamsRangeQueryParameterParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class RangeQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGteParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGtParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLtParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLteParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBoostParamParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//RangeQueryParameter:
		//	GteParam | GtParam | LtParam | LteParam | BoostParam;
		public ParserRule getRule() { return rule; }

		//GteParam | GtParam | LtParam | LteParam | BoostParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//GteParam
		public RuleCall getGteParamParserRuleCall_0() { return cGteParamParserRuleCall_0; }

		//GtParam
		public RuleCall getGtParamParserRuleCall_1() { return cGtParamParserRuleCall_1; }

		//LtParam
		public RuleCall getLtParamParserRuleCall_2() { return cLtParamParserRuleCall_2; }

		//LteParam
		public RuleCall getLteParamParserRuleCall_3() { return cLteParamParserRuleCall_3; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_4() { return cBoostParamParserRuleCall_4; }
	}

	public class RegexpQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegexpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRegexpQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RegexpQuery:
		//	"\"regexp\"" ":" RegexpQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"regexp\"" ":" RegexpQueryObject
		public Group getGroup() { return cGroup; }

		//"\"regexp\""
		public Keyword getRegexpKeyword_0() { return cRegexpKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//RegexpQueryObject
		public RuleCall getRegexpQueryObjectParserRuleCall_2() { return cRegexpQueryObjectParserRuleCall_2; }
	}

	public class RegexpQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cRegexpAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cRegexpSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cRegexpAssignment_3_0.eContents().get(0);
		private final Assignment cParamsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cParamsRegexpQueryParameterObjectParserRuleCall_3_1_0 = (RuleCall)cParamsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RegexpQueryObject:
		//	"{" fieldName=STRING ":" (regexp=STRING | params=RegexpQueryParameterObject) "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" (regexp=STRING | params=RegexpQueryParameterObject) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//regexp=STRING | params=RegexpQueryParameterObject
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//regexp=STRING
		public Assignment getRegexpAssignment_3_0() { return cRegexpAssignment_3_0; }

		//STRING
		public RuleCall getRegexpSTRINGTerminalRuleCall_3_0_0() { return cRegexpSTRINGTerminalRuleCall_3_0_0; }

		//params=RegexpQueryParameterObject
		public Assignment getParamsAssignment_3_1() { return cParamsAssignment_3_1; }

		//RegexpQueryParameterObject
		public RuleCall getParamsRegexpQueryParameterObjectParserRuleCall_3_1_0() { return cParamsRegexpQueryParameterObjectParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RegexpQueryParameterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpQueryParameterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRegexAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRegexSTRINGTerminalRuleCall_3_0 = (RuleCall)cRegexAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsRegexpQueryParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsRegexpQueryParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RegexpQueryParameterObject:
		//	"{" "\"value\"" ":" regex=STRING ("," params+=RegexpQueryParameter ("," params+=RegexpQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"value\"" ":" regex=STRING ("," params+=RegexpQueryParameter ("," params+=RegexpQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"value\""
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//regex=STRING
		public Assignment getRegexAssignment_3() { return cRegexAssignment_3; }

		//STRING
		public RuleCall getRegexSTRINGTerminalRuleCall_3_0() { return cRegexSTRINGTerminalRuleCall_3_0; }

		//("," params+=RegexpQueryParameter ("," params+=RegexpQueryParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=RegexpQueryParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//RegexpQueryParameter
		public RuleCall getParamsRegexpQueryParameterParserRuleCall_4_1_0() { return cParamsRegexpQueryParameterParserRuleCall_4_1_0; }

		//("," params+=RegexpQueryParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=RegexpQueryParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//RegexpQueryParameter
		public RuleCall getParamsRegexpQueryParameterParserRuleCall_4_2_1_0() { return cParamsRegexpQueryParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class RegexpQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBoostParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFlagsParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RegexpQueryParameter:
		//	BoostParam | FlagsParam;
		public ParserRule getRule() { return rule; }

		//BoostParam | FlagsParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall_0() { return cBoostParamParserRuleCall_0; }

		//FlagsParam
		public RuleCall getFlagsParamParserRuleCall_1() { return cFlagsParamParserRuleCall_1; }
	}

	public class SpanFirstQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanFirstQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpan_firstKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSpanFirstQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SpanFirstQuery:
		//	"\"span_first\"" ":" SpanFirstQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"span_first\"" ":" SpanFirstQueryObject
		public Group getGroup() { return cGroup; }

		//"\"span_first\""
		public Keyword getSpan_firstKeyword_0() { return cSpan_firstKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SpanFirstQueryObject
		public RuleCall getSpanFirstQueryObjectParserRuleCall_2() { return cSpanFirstQueryObjectParserRuleCall_2; }
	}

	public class SpanFirstQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanFirstQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMatchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSubqueryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSubquerySpanQueryParserRuleCall_4_0 = (RuleCall)cSubqueryAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cEndParamParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SpanFirstQueryObject:
		//	"{" "\"match\"" ":" "{" subquery=SpanQuery "}" "," EndParam "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"match\"" ":" "{" subquery=SpanQuery "}" "," EndParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"match\""
		public Keyword getMatchKeyword_1() { return cMatchKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//subquery=SpanQuery
		public Assignment getSubqueryAssignment_4() { return cSubqueryAssignment_4; }

		//SpanQuery
		public RuleCall getSubquerySpanQueryParserRuleCall_4_0() { return cSubquerySpanQueryParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//EndParam
		public RuleCall getEndParamParserRuleCall_7() { return cEndParamParserRuleCall_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class SpanMultiQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanMultiQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpan_multiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSpanMultiQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SpanMultiQuery:
		//	"\"span_multi\"" ":" SpanMultiQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"span_multi\"" ":" SpanMultiQueryObject
		public Group getGroup() { return cGroup; }

		//"\"span_multi\""
		public Keyword getSpan_multiKeyword_0() { return cSpan_multiKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SpanMultiQueryObject
		public RuleCall getSpanMultiQueryObjectParserRuleCall_2() { return cSpanMultiQueryObjectParserRuleCall_2; }
	}

	public class SpanMultiQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanMultiQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMatchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cMultiTermQueryParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SpanMultiQueryObject:
		//	"{" "\"match\"" ":" MultiTermQuery "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"match\"" ":" MultiTermQuery "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"match\""
		public Keyword getMatchKeyword_1() { return cMatchKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//MultiTermQuery
		public RuleCall getMultiTermQueryParserRuleCall_3() { return cMultiTermQueryParserRuleCall_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SpanNearQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanNearQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpan_nearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSpanNearQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SpanNearQuery:
		//	"\"span_near\"" ":" SpanNearQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"span_near\"" ":" SpanNearQueryObject
		public Group getGroup() { return cGroup; }

		//"\"span_near\""
		public Keyword getSpan_nearKeyword_0() { return cSpan_nearKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SpanNearQueryObject
		public RuleCall getSpanNearQueryObjectParserRuleCall_2() { return cSpanNearQueryObjectParserRuleCall_2; }
	}

	public class SpanNearQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanNearQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClausesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClausesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClausesSpanQueryParserRuleCall_4_0 = (RuleCall)cClausesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cClausesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cClausesSpanQueryParserRuleCall_5_1_0 = (RuleCall)cClausesAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSlopAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSlopSlopParamParserRuleCall_8_0 = (RuleCall)cSlopAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cInOrderAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cInOrderInOrderParamParserRuleCall_10_0 = (RuleCall)cInOrderAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cCollectPayloadsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cCollectPayloadsCollectPayloadsParamParserRuleCall_12_0 = (RuleCall)cCollectPayloadsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//SpanNearQueryObject:
		//	"{" "\"clauses\"" ":" "[" clauses+=SpanQuery ("," clauses+=SpanQuery)* "]" "," slop=SlopParam "," inOrder=InOrderParam
		//	"," collectPayloads=CollectPayloadsParam "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"clauses\"" ":" "[" clauses+=SpanQuery ("," clauses+=SpanQuery)* "]" "," slop=SlopParam "," inOrder=InOrderParam
		//"," collectPayloads=CollectPayloadsParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"clauses\""
		public Keyword getClausesKeyword_1() { return cClausesKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//clauses+=SpanQuery
		public Assignment getClausesAssignment_4() { return cClausesAssignment_4; }

		//SpanQuery
		public RuleCall getClausesSpanQueryParserRuleCall_4_0() { return cClausesSpanQueryParserRuleCall_4_0; }

		//("," clauses+=SpanQuery)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//clauses+=SpanQuery
		public Assignment getClausesAssignment_5_1() { return cClausesAssignment_5_1; }

		//SpanQuery
		public RuleCall getClausesSpanQueryParserRuleCall_5_1_0() { return cClausesSpanQueryParserRuleCall_5_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//slop=SlopParam
		public Assignment getSlopAssignment_8() { return cSlopAssignment_8; }

		//SlopParam
		public RuleCall getSlopSlopParamParserRuleCall_8_0() { return cSlopSlopParamParserRuleCall_8_0; }

		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }

		//inOrder=InOrderParam
		public Assignment getInOrderAssignment_10() { return cInOrderAssignment_10; }

		//InOrderParam
		public RuleCall getInOrderInOrderParamParserRuleCall_10_0() { return cInOrderInOrderParamParserRuleCall_10_0; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//collectPayloads=CollectPayloadsParam
		public Assignment getCollectPayloadsAssignment_12() { return cCollectPayloadsAssignment_12; }

		//CollectPayloadsParam
		public RuleCall getCollectPayloadsCollectPayloadsParamParserRuleCall_12_0() { return cCollectPayloadsCollectPayloadsParamParserRuleCall_12_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class SpanNotQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanNotQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpan_notKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSpanNotQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SpanNotQuery:
		//	"\"span_not\"" ":" SpanNotQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"span_not\"" ":" SpanNotQueryObject
		public Group getGroup() { return cGroup; }

		//"\"span_not\""
		public Keyword getSpan_notKeyword_0() { return cSpan_notKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SpanNotQueryObject
		public RuleCall getSpanNotQueryObjectParserRuleCall_2() { return cSpanNotQueryObjectParserRuleCall_2; }
	}

	public class SpanNotQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanNotQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIncludeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIncludeQueryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIncludeQuerySpanQueryParserRuleCall_4_0 = (RuleCall)cIncludeQueryAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cExcludeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cExcludeQueryAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cExcludeQuerySpanQueryParserRuleCall_10_0 = (RuleCall)cExcludeQueryAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//SpanNotQueryObject:
		//	"{" "\"include\"" ":" "{" includeQuery=SpanQuery "}" "," "\"exclude\"" ":" "{" excludeQuery=SpanQuery "}" "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"include\"" ":" "{" includeQuery=SpanQuery "}" "," "\"exclude\"" ":" "{" excludeQuery=SpanQuery "}" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"include\""
		public Keyword getIncludeKeyword_1() { return cIncludeKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//includeQuery=SpanQuery
		public Assignment getIncludeQueryAssignment_4() { return cIncludeQueryAssignment_4; }

		//SpanQuery
		public RuleCall getIncludeQuerySpanQueryParserRuleCall_4_0() { return cIncludeQuerySpanQueryParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//"\"exclude\""
		public Keyword getExcludeKeyword_7() { return cExcludeKeyword_7; }

		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//excludeQuery=SpanQuery
		public Assignment getExcludeQueryAssignment_10() { return cExcludeQueryAssignment_10; }

		//SpanQuery
		public RuleCall getExcludeQuerySpanQueryParserRuleCall_10_0() { return cExcludeQuerySpanQueryParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class SpanOrQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanOrQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpan_orKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSpanOrQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SpanOrQuery:
		//	"\"span_or\"" ":" SpanOrQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"span_or\"" ":" SpanOrQueryObject
		public Group getGroup() { return cGroup; }

		//"\"span_or\""
		public Keyword getSpan_orKeyword_0() { return cSpan_orKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SpanOrQueryObject
		public RuleCall getSpanOrQueryObjectParserRuleCall_2() { return cSpanOrQueryObjectParserRuleCall_2; }
	}

	public class SpanOrQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanOrQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cClausesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cClausesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cClausesSpanQueryParserRuleCall_4_0 = (RuleCall)cClausesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cClausesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cClausesSpanQueryParserRuleCall_5_1_0 = (RuleCall)cClausesAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SpanOrQueryObject:
		//	"{" "\"clauses\"" ":" "[" clauses+=SpanQuery ("," clauses+=SpanQuery)* "]" "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"clauses\"" ":" "[" clauses+=SpanQuery ("," clauses+=SpanQuery)* "]" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"clauses\""
		public Keyword getClausesKeyword_1() { return cClausesKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//clauses+=SpanQuery
		public Assignment getClausesAssignment_4() { return cClausesAssignment_4; }

		//SpanQuery
		public RuleCall getClausesSpanQueryParserRuleCall_4_0() { return cClausesSpanQueryParserRuleCall_4_0; }

		//("," clauses+=SpanQuery)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//clauses+=SpanQuery
		public Assignment getClausesAssignment_5_1() { return cClausesAssignment_5_1; }

		//SpanQuery
		public RuleCall getClausesSpanQueryParserRuleCall_5_1_0() { return cClausesSpanQueryParserRuleCall_5_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class SpanTermQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanTermQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpan_termKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cSpanTermQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//SpanTermQuery:
		//	"\"span_term\"" ":" SpanTermQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"span_term\"" ":" SpanTermQueryObject
		public Group getGroup() { return cGroup; }

		//"\"span_term\""
		public Keyword getSpan_termKeyword_0() { return cSpan_termKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SpanTermQueryObject
		public RuleCall getSpanTermQueryObjectParserRuleCall_2() { return cSpanTermQueryObjectParserRuleCall_2; }
	}

	public class SpanTermQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SpanTermQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParamsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParamsTermQueryObjectParserRuleCall_3_0 = (RuleCall)cParamsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SpanTermQueryObject:
		//	"{" fieldName=STRING ":" params=TermQueryObject "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" params=TermQueryObject "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//params=TermQueryObject
		public Assignment getParamsAssignment_3() { return cParamsAssignment_3; }

		//TermQueryObject
		public RuleCall getParamsTermQueryObjectParserRuleCall_3_0() { return cParamsTermQueryObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class TermQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTermKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTermQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TermQuery:
		//	"\"term\"" ":" TermQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"term\"" ":" TermQueryObject
		public Group getGroup() { return cGroup; }

		//"\"term\""
		public Keyword getTermKeyword_0() { return cTermKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TermQueryObject
		public RuleCall getTermQueryObjectParserRuleCall_2() { return cTermQueryObjectParserRuleCall_2; }
	}

	public class TermQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cTermAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cTermSimpleTermParserRuleCall_3_0_0 = (RuleCall)cTermAssignment_3_0.eContents().get(0);
		private final Assignment cParamsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cParamsTermQueryParametersObjectParserRuleCall_3_1_0 = (RuleCall)cParamsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TermQueryObject:
		//	"{" fieldName=STRING ":" (term=SimpleTerm | params=TermQueryParametersObject) "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" (term=SimpleTerm | params=TermQueryParametersObject) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//term=SimpleTerm | params=TermQueryParametersObject
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//term=SimpleTerm
		public Assignment getTermAssignment_3_0() { return cTermAssignment_3_0; }

		//SimpleTerm
		public RuleCall getTermSimpleTermParserRuleCall_3_0_0() { return cTermSimpleTermParserRuleCall_3_0_0; }

		//params=TermQueryParametersObject
		public Assignment getParamsAssignment_3_1() { return cParamsAssignment_3_1; }

		//TermQueryParametersObject
		public RuleCall getParamsTermQueryParametersObjectParserRuleCall_3_1_0() { return cParamsTermQueryParametersObjectParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class SimpleTermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleTerm");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//SimpleTerm:
		//	STRING;
		public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class TermQueryParametersObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermQueryParametersObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cTermKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cValueKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTermAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTermSTRINGTerminalRuleCall_3_0 = (RuleCall)cTermAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBoostAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBoostBoostParamParserRuleCall_5_0 = (RuleCall)cBoostAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TermQueryParametersObject:
		//	"{" ("\"term\"" | "\"value\"") ":" term=STRING "," boost=BoostParam "}";
		public ParserRule getRule() { return rule; }

		//"{" ("\"term\"" | "\"value\"") ":" term=STRING "," boost=BoostParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"term\"" | "\"value\""
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"\"term\""
		public Keyword getTermKeyword_1_0() { return cTermKeyword_1_0; }

		//"\"value\""
		public Keyword getValueKeyword_1_1() { return cValueKeyword_1_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//term=STRING
		public Assignment getTermAssignment_3() { return cTermAssignment_3; }

		//STRING
		public RuleCall getTermSTRINGTerminalRuleCall_3_0() { return cTermSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//boost=BoostParam
		public Assignment getBoostAssignment_5() { return cBoostAssignment_5; }

		//BoostParam
		public RuleCall getBoostBoostParamParserRuleCall_5_0() { return cBoostBoostParamParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class TermsQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cInKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cTermsKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTermsQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TermsQuery:
		//	("\"in\"" | "\"terms\"") ":" TermsQueryObject;
		public ParserRule getRule() { return rule; }

		//("\"in\"" | "\"terms\"") ":" TermsQueryObject
		public Group getGroup() { return cGroup; }

		//"\"in\"" | "\"terms\""
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"\"in\""
		public Keyword getInKeyword_0_0() { return cInKeyword_0_0; }

		//"\"terms\""
		public Keyword getTermsKeyword_0_1() { return cTermsKeyword_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TermsQueryObject
		public RuleCall getTermsQueryObjectParserRuleCall_2() { return cTermsQueryObjectParserRuleCall_2; }
	}

	public class TermsQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTermsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTermsSTRINGTerminalRuleCall_4_0 = (RuleCall)cTermsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTermsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTermsSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cTermsAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final RuleCall cMinimumShouldMatchParamParserRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//TermsQueryObject:
		//	"{" fieldName=STRING ":" "[" terms+=STRING ("," terms+=STRING)* "]" "," MinimumShouldMatchParam "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" "[" terms+=STRING ("," terms+=STRING)* "]" "," MinimumShouldMatchParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//terms+=STRING
		public Assignment getTermsAssignment_4() { return cTermsAssignment_4; }

		//STRING
		public RuleCall getTermsSTRINGTerminalRuleCall_4_0() { return cTermsSTRINGTerminalRuleCall_4_0; }

		//("," terms+=STRING)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//terms+=STRING
		public Assignment getTermsAssignment_5_1() { return cTermsAssignment_5_1; }

		//STRING
		public RuleCall getTermsSTRINGTerminalRuleCall_5_1_0() { return cTermsSTRINGTerminalRuleCall_5_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//MinimumShouldMatchParam
		public RuleCall getMinimumShouldMatchParamParserRuleCall_8() { return cMinimumShouldMatchParamParserRuleCall_8; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class TopChildrenQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TopChildrenQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTop_childrenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTopChildrenQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TopChildrenQuery:
		//	"\"top_children\"" ":" TopChildrenQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"top_children\"" ":" TopChildrenQueryObject
		public Group getGroup() { return cGroup; }

		//"\"top_children\""
		public Keyword getTop_childrenKeyword_0() { return cTop_childrenKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TopChildrenQueryObject
		public RuleCall getTopChildrenQueryObjectParserRuleCall_2() { return cTopChildrenQueryObjectParserRuleCall_2; }
	}

	public class TopChildrenQueryObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TopChildrenQueryObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cChildTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cChildTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cChildTypeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cQueryAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cQueryQueryParserRuleCall_5_0 = (RuleCall)cQueryAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cParamsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cParamsTopChildrenQueryParameterParserRuleCall_6_1_0 = (RuleCall)cParamsAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cParamsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cParamsTopChildrenQueryParameterParserRuleCall_6_2_1_0 = (RuleCall)cParamsAssignment_6_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//TopChildrenQueryObject:
		//	"{" "\"type\"" ":" childType=STRING "," query=Query ("," params+=TopChildrenQueryParameter (","
		//	params+=TopChildrenQueryParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"type\"" ":" childType=STRING "," query=Query ("," params+=TopChildrenQueryParameter (","
		//params+=TopChildrenQueryParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"type\""
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//childType=STRING
		public Assignment getChildTypeAssignment_3() { return cChildTypeAssignment_3; }

		//STRING
		public RuleCall getChildTypeSTRINGTerminalRuleCall_3_0() { return cChildTypeSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//query=Query
		public Assignment getQueryAssignment_5() { return cQueryAssignment_5; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_5_0() { return cQueryQueryParserRuleCall_5_0; }

		//("," params+=TopChildrenQueryParameter ("," params+=TopChildrenQueryParameter)*)?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//params+=TopChildrenQueryParameter
		public Assignment getParamsAssignment_6_1() { return cParamsAssignment_6_1; }

		//TopChildrenQueryParameter
		public RuleCall getParamsTopChildrenQueryParameterParserRuleCall_6_1_0() { return cParamsTopChildrenQueryParameterParserRuleCall_6_1_0; }

		//("," params+=TopChildrenQueryParameter)*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//params+=TopChildrenQueryParameter
		public Assignment getParamsAssignment_6_2_1() { return cParamsAssignment_6_2_1; }

		//TopChildrenQueryParameter
		public RuleCall getParamsTopChildrenQueryParameterParserRuleCall_6_2_1_0() { return cParamsTopChildrenQueryParameterParserRuleCall_6_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class TopChildrenQueryParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TopChildrenQueryParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cScoreParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFactorParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cIncrementalFactorParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//TopChildrenQueryParameter:
		//	ScoreParam | FactorParam | IncrementalFactorParam;
		public ParserRule getRule() { return rule; }

		//ScoreParam | FactorParam | IncrementalFactorParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//ScoreParam
		public RuleCall getScoreParamParserRuleCall_0() { return cScoreParamParserRuleCall_0; }

		//FactorParam
		public RuleCall getFactorParamParserRuleCall_1() { return cFactorParamParserRuleCall_1; }

		//IncrementalFactorParam
		public RuleCall getIncrementalFactorParamParserRuleCall_2() { return cIncrementalFactorParamParserRuleCall_2; }
	}

	public class WildcardQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WildcardQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWildcardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTermQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//WildcardQuery:
		//	"\"wildcard\"" ":" TermQueryObject;
		public ParserRule getRule() { return rule; }

		//"\"wildcard\"" ":" TermQueryObject
		public Group getGroup() { return cGroup; }

		//"\"wildcard\""
		public Keyword getWildcardKeyword_0() { return cWildcardKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TermQueryObject
		public RuleCall getTermQueryObjectParserRuleCall_2() { return cTermQueryObjectParserRuleCall_2; }
	}

	public class AndFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cSimpleAndFilterArrayParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cAndFilterObjectParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		
		//// Filters:
		//AndFilter:
		//	"\"and\"" ":" (SimpleAndFilterArray | AndFilterObject);
		public ParserRule getRule() { return rule; }

		//"\"and\"" ":" (SimpleAndFilterArray | AndFilterObject)
		public Group getGroup() { return cGroup; }

		//"\"and\""
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//SimpleAndFilterArray | AndFilterObject
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//SimpleAndFilterArray
		public RuleCall getSimpleAndFilterArrayParserRuleCall_2_0() { return cSimpleAndFilterArrayParserRuleCall_2_0; }

		//AndFilterObject
		public RuleCall getAndFilterObjectParserRuleCall_2_1() { return cAndFilterObjectParserRuleCall_2_1; }
	}

	public class SimpleAndFilterArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleAndFilterArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSubFilterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSubFilterFilterParserRuleCall_2_0 = (RuleCall)cSubFilterAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSubFilterAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSubFilterFilterParserRuleCall_3_1_0 = (RuleCall)cSubFilterAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SimpleAndFilterArray:
		//	"[" "{" subFilter+=Filter ("," subFilter+=Filter)* "}" "]";
		public ParserRule getRule() { return rule; }

		//"[" "{" subFilter+=Filter ("," subFilter+=Filter)* "}" "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//subFilter+=Filter
		public Assignment getSubFilterAssignment_2() { return cSubFilterAssignment_2; }

		//Filter
		public RuleCall getSubFilterFilterParserRuleCall_2_0() { return cSubFilterFilterParserRuleCall_2_0; }

		//("," subFilter+=Filter)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//subFilter+=Filter
		public Assignment getSubFilterAssignment_3_1() { return cSubFilterAssignment_3_1; }

		//Filter
		public RuleCall getSubFilterFilterParserRuleCall_3_1_0() { return cSubFilterFilterParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }

		//"]"
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}

	public class AndFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFiltersKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cSimpleAndFilterArrayParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AndFilterObject:
		//	"{" "\"filters\"" ":" SimpleAndFilterArray ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"filters\"" ":" SimpleAndFilterArray ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"filters\""
		public Keyword getFiltersKeyword_1() { return cFiltersKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//SimpleAndFilterArray
		public RuleCall getSimpleAndFilterArrayParserRuleCall_3() { return cSimpleAndFilterArrayParserRuleCall_3; }

		//("," CacheParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_4_1() { return cCacheParamParserRuleCall_4_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class BoolFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBoolFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//BoolFilter:
		//	"\"bool\"" ":" BoolFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"bool\"" ":" BoolFilterObject
		public Group getGroup() { return cGroup; }

		//"\"bool\""
		public Keyword getBoolKeyword_0() { return cBoolKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//BoolFilterObject
		public RuleCall getBoolFilterObjectParserRuleCall_2() { return cBoolFilterObjectParserRuleCall_2; }
	}

	public class BoolFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClauseAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClauseBoolFilterClauseParserRuleCall_1_0 = (RuleCall)cClauseAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cClauseAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cClauseBoolFilterClauseParserRuleCall_2_1_0 = (RuleCall)cClauseAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BoolFilterObject:
		//	"{" clause+=BoolFilterClause ("," clause+=BoolFilterClause)* ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" clause+=BoolFilterClause ("," clause+=BoolFilterClause)* ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//clause+=BoolFilterClause
		public Assignment getClauseAssignment_1() { return cClauseAssignment_1; }

		//BoolFilterClause
		public RuleCall getClauseBoolFilterClauseParserRuleCall_1_0() { return cClauseBoolFilterClauseParserRuleCall_1_0; }

		//("," clause+=BoolFilterClause)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//clause+=BoolFilterClause
		public Assignment getClauseAssignment_2_1() { return cClauseAssignment_2_1; }

		//BoolFilterClause
		public RuleCall getClauseBoolFilterClauseParserRuleCall_2_1_0() { return cClauseBoolFilterClauseParserRuleCall_2_1_0; }

		//("," CacheParam)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_3_1() { return cCacheParamParserRuleCall_3_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class BoolFilterClauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoolFilterClause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cBOOL_CLAUSETerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFilterAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFilterFilterObjectParserRuleCall_2_0 = (RuleCall)cFilterAssignment_2.eContents().get(0);
		
		//BoolFilterClause:
		//	BOOL_CLAUSE ":" filter=FilterObject;
		public ParserRule getRule() { return rule; }

		//BOOL_CLAUSE ":" filter=FilterObject
		public Group getGroup() { return cGroup; }

		//BOOL_CLAUSE
		public RuleCall getBOOL_CLAUSETerminalRuleCall_0() { return cBOOL_CLAUSETerminalRuleCall_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//filter=FilterObject
		public Assignment getFilterAssignment_2() { return cFilterAssignment_2; }

		//FilterObject
		public RuleCall getFilterFilterObjectParserRuleCall_2_0() { return cFilterFilterObjectParserRuleCall_2_0; }
	}

	public class ExistsFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExistsFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExistsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cExistsFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ExistsFilter:
		//	"\"exists\"" ":" ExistsFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"exists\"" ":" ExistsFilterObject
		public Group getGroup() { return cGroup; }

		//"\"exists\""
		public Keyword getExistsKeyword_0() { return cExistsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//ExistsFilterObject
		public RuleCall getExistsFilterObjectParserRuleCall_2() { return cExistsFilterObjectParserRuleCall_2; }
	}

	public class ExistsFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExistsFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFieldParamParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ExistsFilterObject:
		//	"{" FieldParam "}";
		public ParserRule getRule() { return rule; }

		//"{" FieldParam "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//FieldParam
		public RuleCall getFieldParamParserRuleCall_1() { return cFieldParamParserRuleCall_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class GeoBoundingBoxFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoBoundingBoxFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_bounding_boxKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoBoundingBoxFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoBoundingBoxFilter:
		//	"\"geo_bounding_box\"" ":" GeoBoundingBoxFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_bounding_box\"" ":" GeoBoundingBoxFilterObject
		public Group getGroup() { return cGroup; }

		//"\"geo_bounding_box\""
		public Keyword getGeo_bounding_boxKeyword_0() { return cGeo_bounding_boxKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoBoundingBoxFilterObject
		public RuleCall getGeoBoundingBoxFilterObjectParserRuleCall_2() { return cGeoBoundingBoxFilterObjectParserRuleCall_2; }
	}

	public class GeoBoundingBoxFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoBoundingBoxFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBoundingBoxAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBoundingBoxBoundingBoxObjectParserRuleCall_3_0 = (RuleCall)cBoundingBoxAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cTypeParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GeoBoundingBoxFilterObject:
		//	"{" fieldName=STRING ":" boundingBox=BoundingBoxObject ("," TypeParam)? ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" boundingBox=BoundingBoxObject ("," TypeParam)? ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//boundingBox=BoundingBoxObject
		public Assignment getBoundingBoxAssignment_3() { return cBoundingBoxAssignment_3; }

		//BoundingBoxObject
		public RuleCall getBoundingBoxBoundingBoxObjectParserRuleCall_3_0() { return cBoundingBoxBoundingBoxObjectParserRuleCall_3_0; }

		//("," TypeParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//TypeParam
		public RuleCall getTypeParamParserRuleCall_4_1() { return cTypeParamParserRuleCall_4_1; }

		//("," CacheParam)?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_5_1() { return cCacheParamParserRuleCall_5_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class GeoDistanceFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_distanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoDistanceFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoDistanceFilter:
		//	"\"geo_distance\"" ":" GeoDistanceFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_distance\"" ":" GeoDistanceFilterObject
		public Group getGroup() { return cGroup; }

		//"\"geo_distance\""
		public Keyword getGeo_distanceKeyword_0() { return cGeo_distanceKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoDistanceFilterObject
		public RuleCall getGeoDistanceFilterObjectParserRuleCall_2() { return cGeoDistanceFilterObjectParserRuleCall_2; }
	}

	public class GeoDistanceFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDistanceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDistanceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDistanceSTRINGTerminalRuleCall_3_0 = (RuleCall)cDistanceAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFieldNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cFieldNameAssignment_5.eContents().get(0);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPointAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPointLatLonParserRuleCall_7_0 = (RuleCall)cPointAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cParamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cParamsGeoDistanceFilterParameterParserRuleCall_8_1_0 = (RuleCall)cParamsAssignment_8_1.eContents().get(0);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cParamsAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final RuleCall cParamsGeoDistanceFilterParameterParserRuleCall_8_2_1_0 = (RuleCall)cParamsAssignment_8_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//GeoDistanceFilterObject:
		//	"{" "\"distance\"" ":" distance=STRING "," fieldName=STRING ":" point=LatLon ("," params+=GeoDistanceFilterParameter
		//	("," params+=GeoDistanceFilterParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"distance\"" ":" distance=STRING "," fieldName=STRING ":" point=LatLon ("," params+=GeoDistanceFilterParameter
		//("," params+=GeoDistanceFilterParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"distance\""
		public Keyword getDistanceKeyword_1() { return cDistanceKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//distance=STRING
		public Assignment getDistanceAssignment_3() { return cDistanceAssignment_3; }

		//STRING
		public RuleCall getDistanceSTRINGTerminalRuleCall_3_0() { return cDistanceSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_5() { return cFieldNameAssignment_5; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_5_0() { return cFieldNameSTRINGTerminalRuleCall_5_0; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//point=LatLon
		public Assignment getPointAssignment_7() { return cPointAssignment_7; }

		//LatLon
		public RuleCall getPointLatLonParserRuleCall_7_0() { return cPointLatLonParserRuleCall_7_0; }

		//("," params+=GeoDistanceFilterParameter ("," params+=GeoDistanceFilterParameter)*)?
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//params+=GeoDistanceFilterParameter
		public Assignment getParamsAssignment_8_1() { return cParamsAssignment_8_1; }

		//GeoDistanceFilterParameter
		public RuleCall getParamsGeoDistanceFilterParameterParserRuleCall_8_1_0() { return cParamsGeoDistanceFilterParameterParserRuleCall_8_1_0; }

		//("," params+=GeoDistanceFilterParameter)*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }

		//params+=GeoDistanceFilterParameter
		public Assignment getParamsAssignment_8_2_1() { return cParamsAssignment_8_2_1; }

		//GeoDistanceFilterParameter
		public RuleCall getParamsGeoDistanceFilterParameterParserRuleCall_8_2_1_0() { return cParamsGeoDistanceFilterParameterParserRuleCall_8_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class GeoDistanceFilterParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceFilterParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDistanceTypeParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOptimizeBboxParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GeoDistanceFilterParameter:
		//	DistanceTypeParam | OptimizeBboxParam;
		public ParserRule getRule() { return rule; }

		//DistanceTypeParam | OptimizeBboxParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//DistanceTypeParam
		public RuleCall getDistanceTypeParamParserRuleCall_0() { return cDistanceTypeParamParserRuleCall_0; }

		//OptimizeBboxParam
		public RuleCall getOptimizeBboxParamParserRuleCall_1() { return cOptimizeBboxParamParserRuleCall_1; }
	}

	public class GeoDistanceRangeFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceRangeFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_distance_rangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoDistanceRangeFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoDistanceRangeFilter:
		//	"\"geo_distance_range\"" ":" GeoDistanceRangeFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_distance_range\"" ":" GeoDistanceRangeFilterObject
		public Group getGroup() { return cGroup; }

		//"\"geo_distance_range\""
		public Keyword getGeo_distance_rangeKeyword_0() { return cGeo_distance_rangeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoDistanceRangeFilterObject
		public RuleCall getGeoDistanceRangeFilterObjectParserRuleCall_2() { return cGeoDistanceRangeFilterObjectParserRuleCall_2; }
	}

	public class GeoDistanceRangeFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoDistanceRangeFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFromSTRINGTerminalRuleCall_3_0 = (RuleCall)cFromAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cToAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cToSTRINGTerminalRuleCall_7_0 = (RuleCall)cToAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cFieldNameAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_9_0 = (RuleCall)cFieldNameAssignment_9.eContents().get(0);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPointAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPointLatLonParserRuleCall_11_0 = (RuleCall)cPointAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//GeoDistanceRangeFilterObject:
		//	"{" "\"from\"" ":" from=STRING "," "\"to\"" ":" to=STRING "," fieldName=STRING ":" point=LatLon "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"from\"" ":" from=STRING "," "\"to\"" ":" to=STRING "," fieldName=STRING ":" point=LatLon "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"from\""
		public Keyword getFromKeyword_1() { return cFromKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//from=STRING
		public Assignment getFromAssignment_3() { return cFromAssignment_3; }

		//STRING
		public RuleCall getFromSTRINGTerminalRuleCall_3_0() { return cFromSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"\"to\""
		public Keyword getToKeyword_5() { return cToKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//to=STRING
		public Assignment getToAssignment_7() { return cToAssignment_7; }

		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_7_0() { return cToSTRINGTerminalRuleCall_7_0; }

		//","
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_9() { return cFieldNameAssignment_9; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_9_0() { return cFieldNameSTRINGTerminalRuleCall_9_0; }

		//":"
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }

		//point=LatLon
		public Assignment getPointAssignment_11() { return cPointAssignment_11; }

		//LatLon
		public RuleCall getPointLatLonParserRuleCall_11_0() { return cPointLatLonParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class GeoPolygonFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoPolygonFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_polygonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoPolygonFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoPolygonFilter:
		//	"\"geo_polygon\"" ":" GeoPolygonFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_polygon\"" ":" GeoPolygonFilterObject
		public Group getGroup() { return cGroup; }

		//"\"geo_polygon\""
		public Keyword getGeo_polygonKeyword_0() { return cGeo_polygonKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoPolygonFilterObject
		public RuleCall getGeoPolygonFilterObjectParserRuleCall_2() { return cGeoPolygonFilterObjectParserRuleCall_2; }
	}

	public class GeoPolygonFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoPolygonFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cPointsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPolygonAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cPolygonPolygonParserRuleCall_6_0 = (RuleCall)cPolygonAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//GeoPolygonFilterObject:
		//	"{" fieldName=STRING ":" "{" "\"points\"" ":" polygon=Polygon "}" ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" "{" "\"points\"" ":" polygon=Polygon "}" ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//"\"points\""
		public Keyword getPointsKeyword_4() { return cPointsKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//polygon=Polygon
		public Assignment getPolygonAssignment_6() { return cPolygonAssignment_6; }

		//Polygon
		public RuleCall getPolygonPolygonParserRuleCall_6_0() { return cPolygonPolygonParserRuleCall_6_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//("," CacheParam)?
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_8_1() { return cCacheParamParserRuleCall_8_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class GeoShapeFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoShapeFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeo_shapeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeoShapeFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeoShapeFilter:
		//	"\"geo_shape\"" ":" GeoShapeFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"geo_shape\"" ":" GeoShapeFilterObject
		public Group getGroup() { return cGroup; }

		//"\"geo_shape\""
		public Keyword getGeo_shapeKeyword_0() { return cGeo_shapeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeoShapeFilterObject
		public RuleCall getGeoShapeFilterObjectParserRuleCall_2() { return cGeoShapeFilterObjectParserRuleCall_2; }
	}

	public class GeoShapeFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoShapeFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cShapeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cShapeGeoShapeObjectParserRuleCall_3_0 = (RuleCall)cShapeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//GeoShapeFilterObject:
		//	"{" fieldName=STRING ":" shape=GeoShapeObject ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" shape=GeoShapeObject ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//shape=GeoShapeObject
		public Assignment getShapeAssignment_3() { return cShapeAssignment_3; }

		//GeoShapeObject
		public RuleCall getShapeGeoShapeObjectParserRuleCall_3_0() { return cShapeGeoShapeObjectParserRuleCall_3_0; }

		//("," CacheParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_4_1() { return cCacheParamParserRuleCall_4_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class GeohashCellFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeohashCellFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGeohash_cellKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cGeohashCellFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//GeohashCellFilter:
		//	"\"geohash_cell\"" ":" GeohashCellFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"geohash_cell\"" ":" GeohashCellFilterObject
		public Group getGroup() { return cGroup; }

		//"\"geohash_cell\""
		public Keyword getGeohash_cellKeyword_0() { return cGeohash_cellKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//GeohashCellFilterObject
		public RuleCall getGeohashCellFilterObjectParserRuleCall_2() { return cGeohashCellFilterObjectParserRuleCall_2; }
	}

	public class GeohashCellFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeohashCellFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cLatLonParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cPrecisionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final RuleCall cNUMBERParserRuleCall_7_0 = (RuleCall)cAlternatives_7.eContents().get(0);
		private final RuleCall cSTRINGTerminalRuleCall_7_1 = (RuleCall)cAlternatives_7.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cNeighborsKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cColonKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final RuleCall cBOOLEANTerminalRuleCall_8_3 = (RuleCall)cGroup_8.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//GeohashCellFilterObject:
		//	"{" "\"pin\"" ":" LatLon "," "\"precision\"" ":" (NUMBER | STRING) ("," "\"neighbors\"" ":" BOOLEAN)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"pin\"" ":" LatLon "," "\"precision\"" ":" (NUMBER | STRING) ("," "\"neighbors\"" ":" BOOLEAN)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"pin\""
		public Keyword getPinKeyword_1() { return cPinKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//LatLon
		public RuleCall getLatLonParserRuleCall_3() { return cLatLonParserRuleCall_3; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"\"precision\""
		public Keyword getPrecisionKeyword_5() { return cPrecisionKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//NUMBER | STRING
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_7_0() { return cNUMBERParserRuleCall_7_0; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_7_1() { return cSTRINGTerminalRuleCall_7_1; }

		//("," "\"neighbors\"" ":" BOOLEAN)?
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//"\"neighbors\""
		public Keyword getNeighborsKeyword_8_1() { return cNeighborsKeyword_8_1; }

		//":"
		public Keyword getColonKeyword_8_2() { return cColonKeyword_8_2; }

		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall_8_3() { return cBOOLEANTerminalRuleCall_8_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class HasChildFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasChildFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHas_childKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cHasChildFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//HasChildFilter:
		//	"\"has_child\"" ":" HasChildFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"has_child\"" ":" HasChildFilterObject
		public Group getGroup() { return cGroup; }

		//"\"has_child\""
		public Keyword getHas_childKeyword_0() { return cHas_childKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//HasChildFilterObject
		public RuleCall getHasChildFilterObjectParserRuleCall_2() { return cHasChildFilterObjectParserRuleCall_2; }
	}

	public class HasChildFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasChildFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cChildTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cChildTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cChildTypeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cQueryAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cQueryQueryParserRuleCall_5_0_0 = (RuleCall)cQueryAssignment_5_0.eContents().get(0);
		private final Assignment cFilterAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_5_1_0 = (RuleCall)cFilterAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//HasChildFilterObject:
		//	"{" "\"\"type\"\"" ":" childType=STRING "," (query=Query | filter=Filter) "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"\"type\"\"" ":" childType=STRING "," (query=Query | filter=Filter) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"\"type\"\""
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//childType=STRING
		public Assignment getChildTypeAssignment_3() { return cChildTypeAssignment_3; }

		//STRING
		public RuleCall getChildTypeSTRINGTerminalRuleCall_3_0() { return cChildTypeSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//query=Query | filter=Filter
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//query=Query
		public Assignment getQueryAssignment_5_0() { return cQueryAssignment_5_0; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_5_0_0() { return cQueryQueryParserRuleCall_5_0_0; }

		//filter=Filter
		public Assignment getFilterAssignment_5_1() { return cFilterAssignment_5_1; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_5_1_0() { return cFilterFilterParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class HasParentFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasParentFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHas_parentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cHasParentFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//HasParentFilter:
		//	"\"has_parent\"" ":" HasParentFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"has_parent\"" ":" HasParentFilterObject
		public Group getGroup() { return cGroup; }

		//"\"has_parent\""
		public Keyword getHas_parentKeyword_0() { return cHas_parentKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//HasParentFilterObject
		public RuleCall getHasParentFilterObjectParserRuleCall_2() { return cHasParentFilterObjectParserRuleCall_2; }
	}

	public class HasParentFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasParentFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final Keyword cParent_typeKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParentTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cParentTypeAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cQueryAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cQueryQueryParserRuleCall_5_0_0 = (RuleCall)cQueryAssignment_5_0.eContents().get(0);
		private final Assignment cFilterAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_5_1_0 = (RuleCall)cFilterAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//HasParentFilterObject:
		//	"{" ("\"type\"" | "\"parent_type\"") ":" parentType=STRING "," (query=Query | filter=Filter) "}";
		public ParserRule getRule() { return rule; }

		//"{" ("\"type\"" | "\"parent_type\"") ":" parentType=STRING "," (query=Query | filter=Filter) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"type\"" | "\"parent_type\""
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"\"type\""
		public Keyword getTypeKeyword_1_0() { return cTypeKeyword_1_0; }

		//"\"parent_type\""
		public Keyword getParent_typeKeyword_1_1() { return cParent_typeKeyword_1_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//parentType=STRING
		public Assignment getParentTypeAssignment_3() { return cParentTypeAssignment_3; }

		//STRING
		public RuleCall getParentTypeSTRINGTerminalRuleCall_3_0() { return cParentTypeSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//query=Query | filter=Filter
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//query=Query
		public Assignment getQueryAssignment_5_0() { return cQueryAssignment_5_0; }

		//Query
		public RuleCall getQueryQueryParserRuleCall_5_0_0() { return cQueryQueryParserRuleCall_5_0_0; }

		//filter=Filter
		public Assignment getFilterAssignment_5_1() { return cFilterAssignment_5_1; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_5_1_0() { return cFilterFilterParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class IdsFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IdsFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIdsObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IdsFilter:
		//	"\"ids\"" ":" IdsObject;
		public ParserRule getRule() { return rule; }

		//"\"ids\"" ":" IdsObject
		public Group getGroup() { return cGroup; }

		//"\"ids\""
		public Keyword getIdsKeyword_0() { return cIdsKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//IdsObject
		public RuleCall getIdsObjectParserRuleCall_2() { return cIdsObjectParserRuleCall_2; }
	}

	public class IndicesFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndicesFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndicesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIndicesFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//IndicesFilter:
		//	"\"indices\"" ":" IndicesFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"indices\"" ":" IndicesFilterObject
		public Group getGroup() { return cGroup; }

		//"\"indices\""
		public Keyword getIndicesKeyword_0() { return cIndicesKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//IndicesFilterObject
		public RuleCall getIndicesFilterObjectParserRuleCall_2() { return cIndicesFilterObjectParserRuleCall_2; }
	}

	public class IndicesFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndicesFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cIndicesParamParserRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cIndexParamParserRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Assignment cFilterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFilterFilterParserRuleCall_1_0 = (RuleCall)cFilterAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cNo_match_filterKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cColonKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cNoMatchFilterAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cNoMatchFilterFilterObjectParserRuleCall_2_3_0 = (RuleCall)cNoMatchFilterAssignment_2_3.eContents().get(0);
		
		//IndicesFilterObject:
		//	(IndicesParam | IndexParam) filter=Filter ("," "\"no_match_filter\"" ":" noMatchFilter=FilterObject)?;
		public ParserRule getRule() { return rule; }

		//(IndicesParam | IndexParam) filter=Filter ("," "\"no_match_filter\"" ":" noMatchFilter=FilterObject)?
		public Group getGroup() { return cGroup; }

		//IndicesParam | IndexParam
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//IndicesParam
		public RuleCall getIndicesParamParserRuleCall_0_0() { return cIndicesParamParserRuleCall_0_0; }

		//IndexParam
		public RuleCall getIndexParamParserRuleCall_0_1() { return cIndexParamParserRuleCall_0_1; }

		//filter=Filter
		public Assignment getFilterAssignment_1() { return cFilterAssignment_1; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_1_0() { return cFilterFilterParserRuleCall_1_0; }

		//("," "\"no_match_filter\"" ":" noMatchFilter=FilterObject)?
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//"\"no_match_filter\""
		public Keyword getNo_match_filterKeyword_2_1() { return cNo_match_filterKeyword_2_1; }

		//":"
		public Keyword getColonKeyword_2_2() { return cColonKeyword_2_2; }

		//noMatchFilter=FilterObject
		public Assignment getNoMatchFilterAssignment_2_3() { return cNoMatchFilterAssignment_2_3; }

		//FilterObject
		public RuleCall getNoMatchFilterFilterObjectParserRuleCall_2_3_0() { return cNoMatchFilterFilterObjectParserRuleCall_2_3_0; }
	}

	public class LimitFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LimitFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLimitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cLimitFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//LimitFilter:
		//	"\"limit\"" ":" LimitFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"limit\"" ":" LimitFilterObject
		public Group getGroup() { return cGroup; }

		//"\"limit\""
		public Keyword getLimitKeyword_0() { return cLimitKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//LimitFilterObject
		public RuleCall getLimitFilterObjectParserRuleCall_2() { return cLimitFilterObjectParserRuleCall_2; }
	}

	public class LimitFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LimitFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LimitFilterObject:
		//	"{" "\"value\"" ":" INT "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"value\"" ":" INT "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"value\""
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MatchAllFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchAllFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMatch_allKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMatchAllFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MatchAllFilter:
		//	"\"match_all\"" ":" MatchAllFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"match_all\"" ":" MatchAllFilterObject
		public Group getGroup() { return cGroup; }

		//"\"match_all\""
		public Keyword getMatch_allKeyword_0() { return cMatch_allKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MatchAllFilterObject
		public RuleCall getMatchAllFilterObjectParserRuleCall_2() { return cMatchAllFilterObjectParserRuleCall_2; }
	}

	public class MatchAllFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MatchAllFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MatchAllFilterObject:
		//	"{" "}";
		public ParserRule getRule() { return rule; }

		//"{" "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1() { return cRightCurlyBracketKeyword_1; }
	}

	public class MissingFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MissingFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMissingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cMissingFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//MissingFilter:
		//	"\"missing\"" ":" MissingFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"missing\"" ":" MissingFilterObject
		public Group getGroup() { return cGroup; }

		//"\"missing\""
		public Keyword getMissingKeyword_0() { return cMissingKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//MissingFilterObject
		public RuleCall getMissingFilterObjectParserRuleCall_2() { return cMissingFilterObjectParserRuleCall_2; }
	}

	public class MissingFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MissingFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cFieldParamParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cExistenceParamParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cNullValueParamParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//MissingFilterObject:
		//	"{" FieldParam ("," ExistenceParam)? ("," NullValueParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" FieldParam ("," ExistenceParam)? ("," NullValueParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//FieldParam
		public RuleCall getFieldParamParserRuleCall_1() { return cFieldParamParserRuleCall_1; }

		//("," ExistenceParam)?
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//ExistenceParam
		public RuleCall getExistenceParamParserRuleCall_2_1() { return cExistenceParamParserRuleCall_2_1; }

		//("," NullValueParam)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//NullValueParam
		public RuleCall getNullValueParamParserRuleCall_3_1() { return cNullValueParamParserRuleCall_3_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class NestedFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNestedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cNestedFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//NestedFilter:
		//	"\"nested\"" ":" NestedFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"nested\"" ":" NestedFilterObject
		public Group getGroup() { return cGroup; }

		//"\"nested\""
		public Keyword getNestedKeyword_0() { return cNestedKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NestedFilterObject
		public RuleCall getNestedFilterObjectParserRuleCall_2() { return cNestedFilterObjectParserRuleCall_2; }
	}

	public class NestedFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NestedFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPathAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPathSTRINGTerminalRuleCall_3_0 = (RuleCall)cPathAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFilterAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFilterFilterParserRuleCall_5_0 = (RuleCall)cFilterAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//NestedFilterObject:
		//	"{" "\"\"path\"\"" ":" path=STRING "," filter=Filter ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"\"path\"\"" ":" path=STRING "," filter=Filter ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"\"path\"\""
		public Keyword getPathKeyword_1() { return cPathKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//path=STRING
		public Assignment getPathAssignment_3() { return cPathAssignment_3; }

		//STRING
		public RuleCall getPathSTRINGTerminalRuleCall_3_0() { return cPathSTRINGTerminalRuleCall_3_0; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//filter=Filter
		public Assignment getFilterAssignment_5() { return cFilterAssignment_5; }

		//Filter
		public RuleCall getFilterFilterParserRuleCall_5_0() { return cFilterFilterParserRuleCall_5_0; }

		//("," CacheParam)?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_6_1() { return cCacheParamParserRuleCall_6_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class NotFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NotFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cNotFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//NotFilter:
		//	"\"not\"" ":" NotFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"not\"" ":" NotFilterObject
		public Group getGroup() { return cGroup; }

		//"\"not\""
		public Keyword getNotKeyword_0() { return cNotKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//NotFilterObject
		public RuleCall getNotFilterObjectParserRuleCall_2() { return cNotFilterObjectParserRuleCall_2; }
	}

	public class NotFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NotFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cQueryParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//NotFilterObject:
		//	"{" Query ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" Query ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//Query
		public RuleCall getQueryParserRuleCall_1() { return cQueryParserRuleCall_1; }

		//("," CacheParam)?
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_2_1() { return cCacheParamParserRuleCall_2_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class OrFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cOrFilterArrayParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//OrFilter:
		//	"\"or\"" ":" OrFilterArray;
		public ParserRule getRule() { return rule; }

		//"\"or\"" ":" OrFilterArray
		public Group getGroup() { return cGroup; }

		//"\"or\""
		public Keyword getOrKeyword_0() { return cOrKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//OrFilterArray
		public RuleCall getOrFilterArrayParserRuleCall_2() { return cOrFilterArrayParserRuleCall_2; }
	}

	public class OrFilterArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrFilterArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSubQueryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSubQueryQueryObjectParserRuleCall_1_0 = (RuleCall)cSubQueryAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSubQueryAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSubQueryQueryObjectParserRuleCall_2_1_0 = (RuleCall)cSubQueryAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//OrFilterArray:
		//	"[" subQuery+=QueryObject ("," subQuery+=QueryObject)* "]";
		public ParserRule getRule() { return rule; }

		//"[" subQuery+=QueryObject ("," subQuery+=QueryObject)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//subQuery+=QueryObject
		public Assignment getSubQueryAssignment_1() { return cSubQueryAssignment_1; }

		//QueryObject
		public RuleCall getSubQueryQueryObjectParserRuleCall_1_0() { return cSubQueryQueryObjectParserRuleCall_1_0; }

		//("," subQuery+=QueryObject)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//subQuery+=QueryObject
		public Assignment getSubQueryAssignment_2_1() { return cSubQueryAssignment_2_1; }

		//QueryObject
		public RuleCall getSubQueryQueryObjectParserRuleCall_2_1_0() { return cSubQueryQueryObjectParserRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class PrefixFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrefixFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrefixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cPrefixFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//PrefixFilter:
		//	"\"prefix\"" ":" PrefixFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"prefix\"" ":" PrefixFilterObject
		public Group getGroup() { return cGroup; }

		//"\"prefix\""
		public Keyword getPrefixKeyword_0() { return cPrefixKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//PrefixFilterObject
		public RuleCall getPrefixFilterObjectParserRuleCall_2() { return cPrefixFilterObjectParserRuleCall_2; }
	}

	public class PrefixFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrefixFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPrefixAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPrefixSTRINGTerminalRuleCall_3_0 = (RuleCall)cPrefixAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PrefixFilterObject:
		//	"{" fieldName=STRING ":" prefix=STRING ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" prefix=STRING ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//prefix=STRING
		public Assignment getPrefixAssignment_3() { return cPrefixAssignment_3; }

		//STRING
		public RuleCall getPrefixSTRINGTerminalRuleCall_3_0() { return cPrefixSTRINGTerminalRuleCall_3_0; }

		//("," CacheParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_4_1() { return cCacheParamParserRuleCall_4_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class QueryFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QueryFilter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQueryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFQueryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//QueryFilter:
		//	Query | FQuery;
		public ParserRule getRule() { return rule; }

		//Query | FQuery
		public Alternatives getAlternatives() { return cAlternatives; }

		//Query
		public RuleCall getQueryParserRuleCall_0() { return cQueryParserRuleCall_0; }

		//FQuery
		public RuleCall getFQueryParserRuleCall_1() { return cFQueryParserRuleCall_1; }
	}

	public class FQueryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQuery");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFqueryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cQueryObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		
		//FQuery:
		//	"\"fquery\"" ":" QueryObject ("," CacheParam)?;
		public ParserRule getRule() { return rule; }

		//"\"fquery\"" ":" QueryObject ("," CacheParam)?
		public Group getGroup() { return cGroup; }

		//"\"fquery\""
		public Keyword getFqueryKeyword_0() { return cFqueryKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//QueryObject
		public RuleCall getQueryObjectParserRuleCall_2() { return cQueryObjectParserRuleCall_2; }

		//("," CacheParam)?
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_3_1() { return cCacheParamParserRuleCall_3_1; }
	}

	public class RangeFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRangeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRangeFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RangeFilter:
		//	"\"range\"" ":" RangeFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"range\"" ":" RangeFilterObject
		public Group getGroup() { return cGroup; }

		//"\"range\""
		public Keyword getRangeKeyword_0() { return cRangeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//RangeFilterObject
		public RuleCall getRangeFilterObjectParserRuleCall_2() { return cRangeFilterObjectParserRuleCall_2; }
	}

	public class RangeFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParamsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParamsRangeQueryParametersObjectParserRuleCall_3_0 = (RuleCall)cParamsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cRangeFilterExecutionParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RangeFilterObject:
		//	"{" fieldName=STRING ":" params=RangeQueryParametersObject ("," RangeFilterExecutionParam)? ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" params=RangeQueryParametersObject ("," RangeFilterExecutionParam)? ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//params=RangeQueryParametersObject
		public Assignment getParamsAssignment_3() { return cParamsAssignment_3; }

		//RangeQueryParametersObject
		public RuleCall getParamsRangeQueryParametersObjectParserRuleCall_3_0() { return cParamsRangeQueryParametersObjectParserRuleCall_3_0; }

		//("," RangeFilterExecutionParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//RangeFilterExecutionParam
		public RuleCall getRangeFilterExecutionParamParserRuleCall_4_1() { return cRangeFilterExecutionParamParserRuleCall_4_1; }

		//("," CacheParam)?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_5_1() { return cCacheParamParserRuleCall_5_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class RangeFilterExecutionParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFilterExecutionParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExecutionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cIndexKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cFielddataKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		
		//RangeFilterExecutionParam:
		//	"\"execution\"" ":" ("\"index\"" | "\"fielddata\"");
		public ParserRule getRule() { return rule; }

		//"\"execution\"" ":" ("\"index\"" | "\"fielddata\"")
		public Group getGroup() { return cGroup; }

		//"\"execution\""
		public Keyword getExecutionKeyword_0() { return cExecutionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"index\"" | "\"fielddata\""
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"\"index\""
		public Keyword getIndexKeyword_2_0() { return cIndexKeyword_2_0; }

		//"\"fielddata\""
		public Keyword getFielddataKeyword_2_1() { return cFielddataKeyword_2_1; }
	}

	public class RangeFilterParametersObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFilterParametersObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParamsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamsRangeQueryParameterParserRuleCall_1_0 = (RuleCall)cParamsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParamsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParamsRangeQueryParameterParserRuleCall_2_1_0 = (RuleCall)cParamsAssignment_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//RangeFilterParametersObject:
		//	"{" params+=RangeQueryParameter ("," params+=RangeQueryParameter)* "}";
		public ParserRule getRule() { return rule; }

		//"{" params+=RangeQueryParameter ("," params+=RangeQueryParameter)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//params+=RangeQueryParameter
		public Assignment getParamsAssignment_1() { return cParamsAssignment_1; }

		//RangeQueryParameter
		public RuleCall getParamsRangeQueryParameterParserRuleCall_1_0() { return cParamsRangeQueryParameterParserRuleCall_1_0; }

		//("," params+=RangeQueryParameter)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//params+=RangeQueryParameter
		public Assignment getParamsAssignment_2_1() { return cParamsAssignment_2_1; }

		//RangeQueryParameter
		public RuleCall getParamsRangeQueryParameterParserRuleCall_2_1_0() { return cParamsRangeQueryParameterParserRuleCall_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class RangeFilterParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RangeFilterParameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGteParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGtParamParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLtParamParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLteParamParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//RangeFilterParameter:
		//	GteParam | GtParam | LtParam | LteParam;
		public ParserRule getRule() { return rule; }

		//GteParam | GtParam | LtParam | LteParam
		public Alternatives getAlternatives() { return cAlternatives; }

		//GteParam
		public RuleCall getGteParamParserRuleCall_0() { return cGteParamParserRuleCall_0; }

		//GtParam
		public RuleCall getGtParamParserRuleCall_1() { return cGtParamParserRuleCall_1; }

		//LtParam
		public RuleCall getLtParamParserRuleCall_2() { return cLtParamParserRuleCall_2; }

		//LteParam
		public RuleCall getLteParamParserRuleCall_3() { return cLteParamParserRuleCall_3; }
	}

	public class RegexpFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRegexpKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cRegexpFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//RegexpFilter:
		//	"\"regexp\"" ":" RegexpFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"regexp\"" ":" RegexpFilterObject
		public Group getGroup() { return cGroup; }

		//"\"regexp\""
		public Keyword getRegexpKeyword_0() { return cRegexpKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//RegexpFilterObject
		public RuleCall getRegexpFilterObjectParserRuleCall_2() { return cRegexpFilterObjectParserRuleCall_2; }
	}

	public class RegexpFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cRegexpAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cRegexpSTRINGTerminalRuleCall_3_0_0 = (RuleCall)cRegexpAssignment_3_0.eContents().get(0);
		private final Assignment cParamsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cParamsRegexpFilterParameterObjectParserRuleCall_3_1_0 = (RuleCall)cParamsAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RegexpFilterObject:
		//	"{" fieldName=STRING ":" (regexp=STRING | params=RegexpFilterParameterObject) "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" (regexp=STRING | params=RegexpFilterParameterObject) "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//regexp=STRING | params=RegexpFilterParameterObject
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//regexp=STRING
		public Assignment getRegexpAssignment_3_0() { return cRegexpAssignment_3_0; }

		//STRING
		public RuleCall getRegexpSTRINGTerminalRuleCall_3_0_0() { return cRegexpSTRINGTerminalRuleCall_3_0_0; }

		//params=RegexpFilterParameterObject
		public Assignment getParamsAssignment_3_1() { return cParamsAssignment_3_1; }

		//RegexpFilterParameterObject
		public RuleCall getParamsRegexpFilterParameterObjectParserRuleCall_3_1_0() { return cParamsRegexpFilterParameterObjectParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class RegexpFilterParameterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpFilterParameterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRegexpAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRegexpSTRINGTerminalRuleCall_3_0 = (RuleCall)cRegexpAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParamsRegexpFilterParameterParserRuleCall_4_1_0 = (RuleCall)cParamsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cParamsRegexpFilterParameterParserRuleCall_4_2_1_0 = (RuleCall)cParamsAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RegexpFilterParameterObject:
		//	"{" "\"value\"" ":" regexp=STRING ("," params+=RegexpFilterParameter ("," params+=RegexpFilterParameter)*)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"value\"" ":" regexp=STRING ("," params+=RegexpFilterParameter ("," params+=RegexpFilterParameter)*)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"value\""
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//regexp=STRING
		public Assignment getRegexpAssignment_3() { return cRegexpAssignment_3; }

		//STRING
		public RuleCall getRegexpSTRINGTerminalRuleCall_3_0() { return cRegexpSTRINGTerminalRuleCall_3_0; }

		//("," params+=RegexpFilterParameter ("," params+=RegexpFilterParameter)*)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//params+=RegexpFilterParameter
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//RegexpFilterParameter
		public RuleCall getParamsRegexpFilterParameterParserRuleCall_4_1_0() { return cParamsRegexpFilterParameterParserRuleCall_4_1_0; }

		//("," params+=RegexpFilterParameter)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//params+=RegexpFilterParameter
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//RegexpFilterParameter
		public RuleCall getParamsRegexpFilterParameterParserRuleCall_4_2_1_0() { return cParamsRegexpFilterParameterParserRuleCall_4_2_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class RegexpFilterParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RegexpFilterParameter");
		private final RuleCall cBoostParamParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//RegexpFilterParameter:
		//	BoostParam;
		public ParserRule getRule() { return rule; }

		//BoostParam
		public RuleCall getBoostParamParserRuleCall() { return cBoostParamParserRuleCall; }
	}

	public class ScriptFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScriptFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cScriptKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cScriptFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ScriptFilter:
		//	"\"script\"" ":" ScriptFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"script\"" ":" ScriptFilterObject
		public Group getGroup() { return cGroup; }

		//"\"script\""
		public Keyword getScriptKeyword_0() { return cScriptKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//ScriptFilterObject
		public RuleCall getScriptFilterObjectParserRuleCall_2() { return cScriptFilterObjectParserRuleCall_2; }
	}

	public class ScriptFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ScriptFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cScriptKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cScriptAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cScriptSTRINGTerminalRuleCall_3_0 = (RuleCall)cScriptAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cParamsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cParamsAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cParamsObjectParserRuleCall_4_3_0 = (RuleCall)cParamsAssignment_4_3.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ScriptFilterObject:
		//	"{" "\"script\"" ":" script=STRING ("," "\"params\"" ":" params=Object)? ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"script\"" ":" script=STRING ("," "\"params\"" ":" params=Object)? ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"script\""
		public Keyword getScriptKeyword_1() { return cScriptKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//script=STRING
		public Assignment getScriptAssignment_3() { return cScriptAssignment_3; }

		//STRING
		public RuleCall getScriptSTRINGTerminalRuleCall_3_0() { return cScriptSTRINGTerminalRuleCall_3_0; }

		//("," "\"params\"" ":" params=Object)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//"\"params\""
		public Keyword getParamsKeyword_4_1() { return cParamsKeyword_4_1; }

		//":"
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }

		//params=Object
		public Assignment getParamsAssignment_4_3() { return cParamsAssignment_4_3; }

		//Object
		public RuleCall getParamsObjectParserRuleCall_4_3_0() { return cParamsObjectParserRuleCall_4_3_0; }

		//("," CacheParam)?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_5_1() { return cCacheParamParserRuleCall_5_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class TermFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTermKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTermFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TermFilter:
		//	"\"term\"" ":" TermFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"term\"" ":" TermFilterObject
		public Group getGroup() { return cGroup; }

		//"\"term\""
		public Keyword getTermKeyword_0() { return cTermKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TermFilterObject
		public RuleCall getTermFilterObjectParserRuleCall_2() { return cTermFilterObjectParserRuleCall_2; }
	}

	public class TermFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTermAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTermSTRINGTerminalRuleCall_3_0 = (RuleCall)cTermAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cCacheParamParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TermFilterObject:
		//	"{" fieldName=STRING ":" term=STRING ("," CacheParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" term=STRING ("," CacheParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//term=STRING
		public Assignment getTermAssignment_3() { return cTermAssignment_3; }

		//STRING
		public RuleCall getTermSTRINGTerminalRuleCall_3_0() { return cTermSTRINGTerminalRuleCall_3_0; }

		//("," CacheParam)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//CacheParam
		public RuleCall getCacheParamParserRuleCall_4_1() { return cCacheParamParserRuleCall_4_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class TermsFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cInKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cTermsKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTermsFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TermsFilter:
		//	("\"in\"" | "\"terms\"") ":" TermsFilterObject;
		public ParserRule getRule() { return rule; }

		//("\"in\"" | "\"terms\"") ":" TermsFilterObject
		public Group getGroup() { return cGroup; }

		//"\"in\"" | "\"terms\""
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"\"in\""
		public Keyword getInKeyword_0_0() { return cInKeyword_0_0; }

		//"\"terms\""
		public Keyword getTermsKeyword_0_1() { return cTermsKeyword_0_1; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TermsFilterObject
		public RuleCall getTermsFilterObjectParserRuleCall_2() { return cTermsFilterObjectParserRuleCall_2; }
	}

	public class TermsFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFieldNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFieldNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cFieldNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTermsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTermsSTRINGTerminalRuleCall_4_0 = (RuleCall)cTermsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTermsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTermsSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cTermsAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cTermsFilterExecutionParamParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//TermsFilterObject:
		//	"{" fieldName=STRING ":" "[" terms+=STRING ("," terms+=STRING)* "]" ("," TermsFilterExecutionParam)? "}";
		public ParserRule getRule() { return rule; }

		//"{" fieldName=STRING ":" "[" terms+=STRING ("," terms+=STRING)* "]" ("," TermsFilterExecutionParam)? "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//fieldName=STRING
		public Assignment getFieldNameAssignment_1() { return cFieldNameAssignment_1; }

		//STRING
		public RuleCall getFieldNameSTRINGTerminalRuleCall_1_0() { return cFieldNameSTRINGTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//terms+=STRING
		public Assignment getTermsAssignment_4() { return cTermsAssignment_4; }

		//STRING
		public RuleCall getTermsSTRINGTerminalRuleCall_4_0() { return cTermsSTRINGTerminalRuleCall_4_0; }

		//("," terms+=STRING)*
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//terms+=STRING
		public Assignment getTermsAssignment_5_1() { return cTermsAssignment_5_1; }

		//STRING
		public RuleCall getTermsSTRINGTerminalRuleCall_5_1_0() { return cTermsSTRINGTerminalRuleCall_5_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//("," TermsFilterExecutionParam)?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//TermsFilterExecutionParam
		public RuleCall getTermsFilterExecutionParamParserRuleCall_7_1() { return cTermsFilterExecutionParamParserRuleCall_7_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class TermsFilterExecutionParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TermsFilterExecutionParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExecutionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cPlainKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cFielddataKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final Keyword cBoolKeyword_2_2 = (Keyword)cAlternatives_2.eContents().get(2);
		private final Keyword cAndKeyword_2_3 = (Keyword)cAlternatives_2.eContents().get(3);
		private final Keyword cOrKeyword_2_4 = (Keyword)cAlternatives_2.eContents().get(4);
		private final Keyword cBool_nocacheKeyword_2_5 = (Keyword)cAlternatives_2.eContents().get(5);
		private final Keyword cAnd_nocacheKeyword_2_6 = (Keyword)cAlternatives_2.eContents().get(6);
		private final Keyword cOr_nocacheKeyword_2_7 = (Keyword)cAlternatives_2.eContents().get(7);
		
		//TermsFilterExecutionParam:
		//	"\"execution\"" ":" ("\"plain\"" | "\"fielddata\"" | "\"bool\"" | "\"and\"" | "\"or\"" | "\"bool_nocache\"" |
		//	"\"and_nocache\"" | "\"or_nocache\"");
		public ParserRule getRule() { return rule; }

		//"\"execution\"" ":" ("\"plain\"" | "\"fielddata\"" | "\"bool\"" | "\"and\"" | "\"or\"" | "\"bool_nocache\"" |
		//"\"and_nocache\"" | "\"or_nocache\"")
		public Group getGroup() { return cGroup; }

		//"\"execution\""
		public Keyword getExecutionKeyword_0() { return cExecutionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"plain\"" | "\"fielddata\"" | "\"bool\"" | "\"and\"" | "\"or\"" | "\"bool_nocache\"" | "\"and_nocache\"" |
		//"\"or_nocache\""
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"\"plain\""
		public Keyword getPlainKeyword_2_0() { return cPlainKeyword_2_0; }

		//"\"fielddata\""
		public Keyword getFielddataKeyword_2_1() { return cFielddataKeyword_2_1; }

		//"\"bool\""
		public Keyword getBoolKeyword_2_2() { return cBoolKeyword_2_2; }

		//"\"and\""
		public Keyword getAndKeyword_2_3() { return cAndKeyword_2_3; }

		//"\"or\""
		public Keyword getOrKeyword_2_4() { return cOrKeyword_2_4; }

		//"\"bool_nocache\""
		public Keyword getBool_nocacheKeyword_2_5() { return cBool_nocacheKeyword_2_5; }

		//"\"and_nocache\""
		public Keyword getAnd_nocacheKeyword_2_6() { return cAnd_nocacheKeyword_2_6; }

		//"\"or_nocache\""
		public Keyword getOr_nocacheKeyword_2_7() { return cOr_nocacheKeyword_2_7; }
	}

	public class TypeFilterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeFilter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cTypeFilterObjectParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//TypeFilter:
		//	"\"type\"" ":" TypeFilterObject;
		public ParserRule getRule() { return rule; }

		//"\"type\"" ":" TypeFilterObject
		public Group getGroup() { return cGroup; }

		//"\"type\""
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//TypeFilterObject
		public RuleCall getTypeFilterObjectParserRuleCall_2() { return cTypeFilterObjectParserRuleCall_2; }
	}

	public class TypeFilterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeFilterObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeSTRINGTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TypeFilterObject:
		//	"{" "\"value\"" ":" type=STRING "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"value\"" ":" type=STRING "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"value\""
		public Keyword getValueKeyword_1() { return cValueKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=STRING
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//STRING
		public RuleCall getTypeSTRINGTerminalRuleCall_3_0() { return cTypeSTRINGTerminalRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class GeoShapeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoShapeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cGeoShapeParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// Data types:
		//GeoShapeObject:
		//	"{" GeoShape "}";
		public ParserRule getRule() { return rule; }

		//"{" GeoShape "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//GeoShape
		public RuleCall getGeoShapeParserRuleCall_1() { return cGeoShapeParserRuleCall_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class GeoShapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GeoShape");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cShapeAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cShapeShapeParserRuleCall_0_0 = (RuleCall)cShapeAssignment_0.eContents().get(0);
		private final Assignment cIndexedShapeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cIndexedShapeIndexedShapeParserRuleCall_1_0 = (RuleCall)cIndexedShapeAssignment_1.eContents().get(0);
		
		//GeoShape:
		//	shape=Shape | indexedShape=IndexedShape;
		public ParserRule getRule() { return rule; }

		//shape=Shape | indexedShape=IndexedShape
		public Alternatives getAlternatives() { return cAlternatives; }

		//shape=Shape
		public Assignment getShapeAssignment_0() { return cShapeAssignment_0; }

		//Shape
		public RuleCall getShapeShapeParserRuleCall_0_0() { return cShapeShapeParserRuleCall_0_0; }

		//indexedShape=IndexedShape
		public Assignment getIndexedShapeAssignment_1() { return cIndexedShapeAssignment_1; }

		//IndexedShape
		public RuleCall getIndexedShapeIndexedShapeParserRuleCall_1_0() { return cIndexedShapeIndexedShapeParserRuleCall_1_0; }
	}

	public class IndexedShapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IndexedShape");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndexed_shapeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cTypeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final RuleCall cSTRINGTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cIndexKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Keyword cColonKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_10_3 = (RuleCall)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cPathKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Keyword cColonKeyword_11_2 = (Keyword)cGroup_11.eContents().get(2);
		private final RuleCall cSTRINGTerminalRuleCall_11_3 = (RuleCall)cGroup_11.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//IndexedShape:
		//	"\"indexed_shape\"" ":" "{" "\"id\"" ":" STRING "," "\"type\"" ":" STRING ("," "\"index\"" ":" STRING)? (","
		//	"\"path\"" ":" STRING)? "}";
		public ParserRule getRule() { return rule; }

		//"\"indexed_shape\"" ":" "{" "\"id\"" ":" STRING "," "\"type\"" ":" STRING ("," "\"index\"" ":" STRING)? ("," "\"path\""
		//":" STRING)? "}"
		public Group getGroup() { return cGroup; }

		//"\"indexed_shape\""
		public Keyword getIndexed_shapeKeyword_0() { return cIndexed_shapeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"\"id\""
		public Keyword getIdKeyword_3() { return cIdKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_5() { return cSTRINGTerminalRuleCall_5; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//"\"type\""
		public Keyword getTypeKeyword_7() { return cTypeKeyword_7; }

		//":"
		public Keyword getColonKeyword_8() { return cColonKeyword_8; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_9() { return cSTRINGTerminalRuleCall_9; }

		//("," "\"index\"" ":" STRING)?
		public Group getGroup_10() { return cGroup_10; }

		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }

		//"\"index\""
		public Keyword getIndexKeyword_10_1() { return cIndexKeyword_10_1; }

		//":"
		public Keyword getColonKeyword_10_2() { return cColonKeyword_10_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_10_3() { return cSTRINGTerminalRuleCall_10_3; }

		//("," "\"path\"" ":" STRING)?
		public Group getGroup_11() { return cGroup_11; }

		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }

		//"\"path\""
		public Keyword getPathKeyword_11_1() { return cPathKeyword_11_1; }

		//":"
		public Keyword getColonKeyword_11_2() { return cColonKeyword_11_2; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_11_3() { return cSTRINGTerminalRuleCall_11_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class PolygonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Polygon");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPointsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPointsLatLonParserRuleCall_1_0 = (RuleCall)cPointsAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPointsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPointsLatLonParserRuleCall_2_1_0 = (RuleCall)cPointsAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Polygon:
		//	"[" points+=LatLon ("," points+=LatLon)* "]";
		public ParserRule getRule() { return rule; }

		//"[" points+=LatLon ("," points+=LatLon)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//points+=LatLon
		public Assignment getPointsAssignment_1() { return cPointsAssignment_1; }

		//LatLon
		public RuleCall getPointsLatLonParserRuleCall_1_0() { return cPointsLatLonParserRuleCall_1_0; }

		//("," points+=LatLon)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//points+=LatLon
		public Assignment getPointsAssignment_2_1() { return cPointsAssignment_2_1; }

		//LatLon
		public RuleCall getPointsLatLonParserRuleCall_2_1_0() { return cPointsLatLonParserRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class BoundingBoxObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BoundingBoxObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cTwoPointBoundingBoxAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTwoPointBoundingBoxTwoPointBoundingBoxParserRuleCall_0_1_0 = (RuleCall)cTwoPointBoundingBoxAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cVerticesBoundingBoxAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cVerticesBoundingBoxVerticesBoundingBoxParserRuleCall_1_0_0 = (RuleCall)cVerticesBoundingBoxAssignment_1_0.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//BoundingBoxObject:
		//	"{" twoPointBoundingBox=TwoPointBoundingBox | verticesBoundingBox=VerticesBoundingBox "}";
		public ParserRule getRule() { return rule; }

		//"{" twoPointBoundingBox=TwoPointBoundingBox | verticesBoundingBox=VerticesBoundingBox "}"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"{" twoPointBoundingBox=TwoPointBoundingBox
		public Group getGroup_0() { return cGroup_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_0() { return cLeftCurlyBracketKeyword_0_0; }

		//twoPointBoundingBox=TwoPointBoundingBox
		public Assignment getTwoPointBoundingBoxAssignment_0_1() { return cTwoPointBoundingBoxAssignment_0_1; }

		//TwoPointBoundingBox
		public RuleCall getTwoPointBoundingBoxTwoPointBoundingBoxParserRuleCall_0_1_0() { return cTwoPointBoundingBoxTwoPointBoundingBoxParserRuleCall_0_1_0; }

		//verticesBoundingBox=VerticesBoundingBox "}"
		public Group getGroup_1() { return cGroup_1; }

		//verticesBoundingBox=VerticesBoundingBox
		public Assignment getVerticesBoundingBoxAssignment_1_0() { return cVerticesBoundingBoxAssignment_1_0; }

		//VerticesBoundingBox
		public RuleCall getVerticesBoundingBoxVerticesBoundingBoxParserRuleCall_1_0_0() { return cVerticesBoundingBoxVerticesBoundingBoxParserRuleCall_1_0_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_1() { return cRightCurlyBracketKeyword_1_1; }
	}

	public class TwoPointBoundingBoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TwoPointBoundingBox");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTop_leftKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTopLeftAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTopLeftLatLonParserRuleCall_2_0 = (RuleCall)cTopLeftAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cBottom_rightKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cBottomRightAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cBottomRightLatLonParserRuleCall_6_0 = (RuleCall)cBottomRightAssignment_6.eContents().get(0);
		
		//TwoPointBoundingBox:
		//	"\"top_left\"" ":" topLeft=LatLon "," "\"bottom_right\"" ":" bottomRight=LatLon;
		public ParserRule getRule() { return rule; }

		//"\"top_left\"" ":" topLeft=LatLon "," "\"bottom_right\"" ":" bottomRight=LatLon
		public Group getGroup() { return cGroup; }

		//"\"top_left\""
		public Keyword getTop_leftKeyword_0() { return cTop_leftKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//topLeft=LatLon
		public Assignment getTopLeftAssignment_2() { return cTopLeftAssignment_2; }

		//LatLon
		public RuleCall getTopLeftLatLonParserRuleCall_2_0() { return cTopLeftLatLonParserRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"\"bottom_right\""
		public Keyword getBottom_rightKeyword_4() { return cBottom_rightKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//bottomRight=LatLon
		public Assignment getBottomRightAssignment_6() { return cBottomRightAssignment_6; }

		//LatLon
		public RuleCall getBottomRightLatLonParserRuleCall_6_0() { return cBottomRightLatLonParserRuleCall_6_0; }
	}

	public class VerticesBoundingBoxElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerticesBoundingBox");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cFLOATParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cBottomKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final RuleCall cFLOATParserRuleCall_10 = (RuleCall)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cRightKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final RuleCall cFLOATParserRuleCall_14 = (RuleCall)cGroup.eContents().get(14);
		
		//VerticesBoundingBox:
		//	"\"top\"" ":" FLOAT "," "\"left\"" ":" FLOAT "," "\"bottom\"" ":" FLOAT "," "\"right\"" ":" FLOAT;
		public ParserRule getRule() { return rule; }

		//"\"top\"" ":" FLOAT "," "\"left\"" ":" FLOAT "," "\"bottom\"" ":" FLOAT "," "\"right\"" ":" FLOAT
		public Group getGroup() { return cGroup; }

		//"\"top\""
		public Keyword getTopKeyword_0() { return cTopKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_2() { return cFLOATParserRuleCall_2; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"\"left\""
		public Keyword getLeftKeyword_4() { return cLeftKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_6() { return cFLOATParserRuleCall_6; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//"\"bottom\""
		public Keyword getBottomKeyword_8() { return cBottomKeyword_8; }

		//":"
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_10() { return cFLOATParserRuleCall_10; }

		//","
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }

		//"\"right\""
		public Keyword getRightKeyword_12() { return cRightKeyword_12; }

		//":"
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_14() { return cFLOATParserRuleCall_14; }
	}

	public class LatLonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LatLon");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cLatLonObjectAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cLatLonObjectLatLonPropertyObjectParserRuleCall_0_0 = (RuleCall)cLatLonObjectAssignment_0.eContents().get(0);
		private final Assignment cLatLonArrayAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cLatLonArrayLatLonArrayParserRuleCall_1_0 = (RuleCall)cLatLonArrayAssignment_1.eContents().get(0);
		private final Assignment cLatLonStringAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cLatLonStringLatLonStringParserRuleCall_2_0 = (RuleCall)cLatLonStringAssignment_2.eContents().get(0);
		
		//LatLon:
		//	latLonObject=LatLonPropertyObject | latLonArray=LatLonArray | latLonString=LatLonString;
		public ParserRule getRule() { return rule; }

		//latLonObject=LatLonPropertyObject | latLonArray=LatLonArray | latLonString=LatLonString
		public Alternatives getAlternatives() { return cAlternatives; }

		//latLonObject=LatLonPropertyObject
		public Assignment getLatLonObjectAssignment_0() { return cLatLonObjectAssignment_0; }

		//LatLonPropertyObject
		public RuleCall getLatLonObjectLatLonPropertyObjectParserRuleCall_0_0() { return cLatLonObjectLatLonPropertyObjectParserRuleCall_0_0; }

		//latLonArray=LatLonArray
		public Assignment getLatLonArrayAssignment_1() { return cLatLonArrayAssignment_1; }

		//LatLonArray
		public RuleCall getLatLonArrayLatLonArrayParserRuleCall_1_0() { return cLatLonArrayLatLonArrayParserRuleCall_1_0; }

		//latLonString=LatLonString
		public Assignment getLatLonStringAssignment_2() { return cLatLonStringAssignment_2; }

		//LatLonString
		public RuleCall getLatLonStringLatLonStringParserRuleCall_2_0() { return cLatLonStringLatLonStringParserRuleCall_2_0; }
	}

	public class LatLonPropertyObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LatLonPropertyObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLatKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cFLOATParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cFLOATParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//LatLonPropertyObject:
		//	"{" "\"lat\"" ":" FLOAT "," "\"lon\"" ":" FLOAT "}";
		public ParserRule getRule() { return rule; }

		//"{" "\"lat\"" ":" FLOAT "," "\"lon\"" ":" FLOAT "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//"\"lat\""
		public Keyword getLatKeyword_1() { return cLatKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_3() { return cFLOATParserRuleCall_3; }

		//","
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }

		//"\"lon\""
		public Keyword getLonKeyword_5() { return cLonKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_7() { return cFLOATParserRuleCall_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class LatLonArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LatLonArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLonAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLonFLOATParserRuleCall_1_0 = (RuleCall)cLonAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLatAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLatFLOATParserRuleCall_3_0 = (RuleCall)cLatAssignment_3.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LatLonArray:
		//	"[" lon=FLOAT "," lat=FLOAT "]";
		public ParserRule getRule() { return rule; }

		//"[" lon=FLOAT "," lat=FLOAT "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//lon=FLOAT
		public Assignment getLonAssignment_1() { return cLonAssignment_1; }

		//FLOAT
		public RuleCall getLonFLOATParserRuleCall_1_0() { return cLonFLOATParserRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//lat=FLOAT
		public Assignment getLatAssignment_3() { return cLatAssignment_3; }

		//FLOAT
		public RuleCall getLatFLOATParserRuleCall_3_0() { return cLatFLOATParserRuleCall_3_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class LatLonStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LatLonString");
		private final Assignment cLatLonOrHashAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cLatLonOrHashSTRINGTerminalRuleCall_0 = (RuleCall)cLatLonOrHashAssignment.eContents().get(0);
		
		//LatLonString:
		//	latLonOrHash=STRING;
		public ParserRule getRule() { return rule; }

		//latLonOrHash=STRING
		public Assignment getLatLonOrHashAssignment() { return cLatLonOrHashAssignment; }

		//STRING
		public RuleCall getLatLonOrHashSTRINGTerminalRuleCall_0() { return cLatLonOrHashSTRINGTerminalRuleCall_0; }
	}

	public class ShapeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShapeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cShapeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cShapeShapeParserRuleCall_1_0 = (RuleCall)cShapeAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ShapeObject:
		//	"{" shape=Shape "}";
		public ParserRule getRule() { return rule; }

		//"{" shape=Shape "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//shape=Shape
		public Assignment getShapeAssignment_1() { return cShapeAssignment_1; }

		//Shape
		public RuleCall getShapeShapeParserRuleCall_1_0() { return cShapeShapeParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class ShapeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Shape");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShapeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cShapeTypeParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Shape:
		//	"\"shape\"" ":" "{" ShapeType "}";
		public ParserRule getRule() { return rule; }

		//"\"shape\"" ":" "{" ShapeType "}"
		public Group getGroup() { return cGroup; }

		//"\"shape\""
		public Keyword getShapeKeyword_0() { return cShapeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//ShapeType
		public RuleCall getShapeTypeParserRuleCall_3() { return cShapeTypeParserRuleCall_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ShapeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShapeType");
		private final RuleCall cShapeTypeEnvelopeParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ShapeType:
		//	ShapeTypeEnvelope;
		public ParserRule getRule() { return rule; }

		//ShapeTypeEnvelope
		public RuleCall getShapeTypeEnvelopeParserRuleCall() { return cShapeTypeEnvelopeParserRuleCall; }
	}

	public class ShapeTypeEnvelopeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ShapeTypeEnvelope");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEnvelopeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cCoordinatesKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPointsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPointsLatLonArrayParserRuleCall_7_0 = (RuleCall)cPointsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cPointsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cPointsLatLonArrayParserRuleCall_8_1_0 = (RuleCall)cPointsAssignment_8_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ShapeTypeEnvelope:
		//	"\"type\"" ":" "\"envelope\"" "," "\"coordinates\"" ":" "[" points+=LatLonArray ("," points+=LatLonArray)* "]";
		public ParserRule getRule() { return rule; }

		//"\"type\"" ":" "\"envelope\"" "," "\"coordinates\"" ":" "[" points+=LatLonArray ("," points+=LatLonArray)* "]"
		public Group getGroup() { return cGroup; }

		//"\"type\""
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//"\"envelope\""
		public Keyword getEnvelopeKeyword_2() { return cEnvelopeKeyword_2; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"\"coordinates\""
		public Keyword getCoordinatesKeyword_4() { return cCoordinatesKeyword_4; }

		//":"
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }

		//"["
		public Keyword getLeftSquareBracketKeyword_6() { return cLeftSquareBracketKeyword_6; }

		//points+=LatLonArray
		public Assignment getPointsAssignment_7() { return cPointsAssignment_7; }

		//LatLonArray
		public RuleCall getPointsLatLonArrayParserRuleCall_7_0() { return cPointsLatLonArrayParserRuleCall_7_0; }

		//("," points+=LatLonArray)*
		public Group getGroup_8() { return cGroup_8; }

		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }

		//points+=LatLonArray
		public Assignment getPointsAssignment_8_1() { return cPointsAssignment_8_1; }

		//LatLonArray
		public RuleCall getPointsLatLonArrayParserRuleCall_8_1_0() { return cPointsLatLonArrayParserRuleCall_8_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
	}

	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Object");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cObjectAction_1 = (Action)cGroup.eContents().get(1);
		private final Assignment cMembersAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMembersMemberParserRuleCall_2_0 = (RuleCall)cMembersAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMembersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMembersMemberParserRuleCall_3_1_0 = (RuleCall)cMembersAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Object:
		//	"{" {Object} members+=Member? ("," members+=Member)* "}";
		public ParserRule getRule() { return rule; }

		//"{" {Object} members+=Member? ("," members+=Member)* "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//{Object}
		public Action getObjectAction_1() { return cObjectAction_1; }

		//members+=Member?
		public Assignment getMembersAssignment_2() { return cMembersAssignment_2; }

		//Member
		public RuleCall getMembersMemberParserRuleCall_2_0() { return cMembersMemberParserRuleCall_2_0; }

		//("," members+=Member)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//members+=Member
		public Assignment getMembersAssignment_3_1() { return cMembersAssignment_3_1; }

		//Member
		public RuleCall getMembersMemberParserRuleCall_3_1_0() { return cMembersMemberParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Member");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Member:
		//	key=STRING ":" value=Value;
		public ParserRule getRule() { return rule; }

		//key=STRING ":" value=Value
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}

	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cObjectAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cObjectObjectParserRuleCall_0_0 = (RuleCall)cObjectAssignment_0.eContents().get(0);
		private final Assignment cStringAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cStringSTRINGTerminalRuleCall_1_0 = (RuleCall)cStringAssignment_1.eContents().get(0);
		private final Assignment cArrayAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cArrayArrayParserRuleCall_2_0 = (RuleCall)cArrayAssignment_2.eContents().get(0);
		private final Assignment cBoolAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cBoolBOOLEANTerminalRuleCall_3_0 = (RuleCall)cBoolAssignment_3.eContents().get(0);
		private final Assignment cNullAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cNullNULLTerminalRuleCall_4_0 = (RuleCall)cNullAssignment_4.eContents().get(0);
		private final Assignment cNumberAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cNumberNUMBERParserRuleCall_5_0 = (RuleCall)cNumberAssignment_5.eContents().get(0);
		
		//Value:
		//	object=Object | string=STRING | array=Array | bool=BOOLEAN | null=NULL | number=NUMBER;
		public ParserRule getRule() { return rule; }

		//object=Object | string=STRING | array=Array | bool=BOOLEAN | null=NULL | number=NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//object=Object
		public Assignment getObjectAssignment_0() { return cObjectAssignment_0; }

		//Object
		public RuleCall getObjectObjectParserRuleCall_0_0() { return cObjectObjectParserRuleCall_0_0; }

		//string=STRING
		public Assignment getStringAssignment_1() { return cStringAssignment_1; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_1_0() { return cStringSTRINGTerminalRuleCall_1_0; }

		//array=Array
		public Assignment getArrayAssignment_2() { return cArrayAssignment_2; }

		//Array
		public RuleCall getArrayArrayParserRuleCall_2_0() { return cArrayArrayParserRuleCall_2_0; }

		//bool=BOOLEAN
		public Assignment getBoolAssignment_3() { return cBoolAssignment_3; }

		//BOOLEAN
		public RuleCall getBoolBOOLEANTerminalRuleCall_3_0() { return cBoolBOOLEANTerminalRuleCall_3_0; }

		//null=NULL
		public Assignment getNullAssignment_4() { return cNullAssignment_4; }

		//NULL
		public RuleCall getNullNULLTerminalRuleCall_4_0() { return cNullNULLTerminalRuleCall_4_0; }

		//number=NUMBER
		public Assignment getNumberAssignment_5() { return cNumberAssignment_5; }

		//NUMBER
		public RuleCall getNumberNUMBERParserRuleCall_5_0() { return cNumberNUMBERParserRuleCall_5_0; }
	}

	public class ArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Array");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cArrayAction_1 = (Action)cGroup.eContents().get(1);
		private final Assignment cValuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValuesValueParserRuleCall_2_0 = (RuleCall)cValuesAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValuesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValuesValueParserRuleCall_3_1_0 = (RuleCall)cValuesAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Array:
		//	"[" {Array} values+=Value? ("," values+=Value)* "]";
		public ParserRule getRule() { return rule; }

		//"[" {Array} values+=Value? ("," values+=Value)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//{Array}
		public Action getArrayAction_1() { return cArrayAction_1; }

		//values+=Value?
		public Assignment getValuesAssignment_2() { return cValuesAssignment_2; }

		//Value
		public RuleCall getValuesValueParserRuleCall_2_0() { return cValuesValueParserRuleCall_2_0; }

		//("," values+=Value)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//values+=Value
		public Assignment getValuesAssignment_3_1() { return cValuesAssignment_3_1; }

		//Value
		public RuleCall getValuesValueParserRuleCall_3_1_0() { return cValuesValueParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cFLOATParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NUMBER:
		//	FLOAT | INT;
		public ParserRule getRule() { return rule; }

		//FLOAT | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//FLOAT
		public RuleCall getFLOATParserRuleCall_0() { return cFLOATParserRuleCall_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class FLOATElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FLOAT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//FLOAT:
		//	"-"? INT? "." INT (("E" | "e") "-"? INT)?;
		public ParserRule getRule() { return rule; }

		//"-"? INT? "." INT (("E" | "e") "-"? INT)?
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }

		//(("E" | "e") "-"? INT)?
		public Group getGroup_4() { return cGroup_4; }

		//"E" | "e"
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }

		//"E"
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }

		//"e"
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }

		//"-"?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}

	public class AND_ORElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AND_OR");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cOrKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AND_OR:
		//	"\"and\"" | "\"or\"";
		public ParserRule getRule() { return rule; }

		//"\"and\"" | "\"or\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//"\"and\""
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }

		//"\"or\""
		public Keyword getOrKeyword_1() { return cOrKeyword_1; }
	}
	
	
	private SearchDSLElements pSearchDSL;
	private SearchFieldElements pSearchField;
	private StatsElements pStats;
	private FromElements pFrom;
	private SizeElements pSize;
	private SortElements pSort;
	private SortValueElements pSortValue;
	private ShortSortOjectElements pShortSortOject;
	private SortObjectElements pSortObject;
	private SortObjectPropertiesObjectElements pSortObjectPropertiesObject;
	private SortObjectPropertyElements pSortObjectProperty;
	private SORT_MODEElements pSORT_MODE;
	private ASC_DESCElements pASC_DESC;
	private FieldsElements pFields;
	private QueryElements pQuery;
	private FilterElements pFilter;
	private FilterObjectElements pFilterObject;
	private FilterTypeElements pFilterType;
	private QueryObjectElements pQueryObject;
	private QueryTypeElements pQueryType;
	private SpanQueryElements pSpanQuery;
	private MultiTermQueryElements pMultiTermQuery;
	private FacetsElements pFacets;
	private FacetsObjectElements pFacetsObject;
	private FacetTypeObjectElements pFacetTypeObject;
	private FacetTypeElements pFacetType;
	private GeoDistanceFacetElements pGeoDistanceFacet;
	private GeoDistanceFacetObjectElements pGeoDistanceFacetObject;
	private TermsStatsFacetElements pTermsStatsFacet;
	private StatisticalFacetElements pStatisticalFacet;
	private StatisticalFacetObjectElements pStatisticalFacetObject;
	private QueryFacetElements pQueryFacet;
	private FilterFacetElements pFilterFacet;
	private DateHistogramFacetElements pDateHistogramFacet;
	private DateHistogramFacetObjectElements pDateHistogramFacetObject;
	private HistogramFacetElements pHistogramFacet;
	private HistogramFacetObjectElements pHistogramFacetObject;
	private HistogramFacetParameterElements pHistogramFacetParameter;
	private RangeFacetElements pRangeFacet;
	private RangeFacetObjectElements pRangeFacetObject;
	private RangesParamElements pRangesParam;
	private KeyValueFieldElements pKeyValueField;
	private KeyValueScriptElements pKeyValueScript;
	private RangeObjectElements pRangeObject;
	private TermsFacetElements pTermsFacet;
	private TermsFacetObjectElements pTermsFacetObject;
	private TermsFacetParameterElements pTermsFacetParameter;
	private FacetParameterElements pFacetParameter;
	private FacetFilterParamElements pFacetFilterParam;
	private IntervalParamElements pIntervalParam;
	private TimeIntervalParamElements pTimeIntervalParam;
	private FromParamElements pFromParam;
	private ToParamElements pToParam;
	private SizeParamElements pSizeParam;
	private OrderParamElements pOrderParam;
	private AllTermsParamElements pAllTermsParam;
	private ExcludeParamElements pExcludeParam;
	private ScriptParamElements pScriptParam;
	private ScriptFieldParamElements pScriptFieldParam;
	private RegexParamElements pRegexParam;
	private RegexFlagsParamElements pRegexFlagsParam;
	private GlobalParamElements pGlobalParam;
	private CutoffFrequenceParamElements pCutoffFrequenceParam;
	private ZeroTermsQueryParamElements pZeroTermsQueryParam;
	private MinimumShouldMatchParamElements pMinimumShouldMatchParam;
	private ComplexMinimumShouldMatchElements pComplexMinimumShouldMatch;
	private ExistenceParamElements pExistenceParam;
	private NullValueParamElements pNullValueParam;
	private MinTermFreqParamElements pMinTermFreqParam;
	private LowFreqOperatorParamElements pLowFreqOperatorParam;
	private OperatorParamElements pOperatorParam;
	private BoostParamElements pBoostParam;
	private AnalyzerParamElements pAnalyzerParam;
	private FlagsParamElements pFlagsParam;
	private DisableCoordParamElements pDisableCoordParam;
	private TieBreakerParamElements pTieBreakerParam;
	private PercentTermsToMatchParamElements pPercentTermsToMatchParam;
	private StopWordsParamElements pStopWordsParam;
	private MinDocFreqParamElements pMinDocFreqParam;
	private MaxDocFreqParamElements pMaxDocFreqParam;
	private MinWordLengthParamElements pMinWordLengthParam;
	private MaxWordLengthParamElements pMaxWordLengthParam;
	private BoostTermsParamElements pBoostTermsParam;
	private GteParamElements pGteParam;
	private GtParamElements pGtParam;
	private LtParamElements pLtParam;
	private LteParamElements pLteParam;
	private TypeParamElements pTypeParam;
	private SlopParamElements pSlopParam;
	private FieldParamElements pFieldParam;
	private FieldsParamElements pFieldsParam;
	private DefaultFieldParamElements pDefaultFieldParam;
	private DefaultOperatorParamElements pDefaultOperatorParam;
	private AllowLeadingWildcardParamElements pAllowLeadingWildcardParam;
	private LowercaseExpandedTermsParamElements pLowercaseExpandedTermsParam;
	private EnablePositionIncrementsParamElements pEnablePositionIncrementsParam;
	private FuzzyMaxExpansionsParamElements pFuzzyMaxExpansionsParam;
	private FuzzyPrefixLengthParamElements pFuzzyPrefixLengthParam;
	private PhraseSlopParamElements pPhraseSlopParam;
	private AnalyzeWildcardParamElements pAnalyzeWildcardParam;
	private AutoGeneratePhraseQueriesParamElements pAutoGeneratePhraseQueriesParam;
	private LenientParamElements pLenientParam;
	private LocaleParamElements pLocaleParam;
	private IgnoreTfParamElements pIgnoreTfParam;
	private MaxQueryTermsParamElements pMaxQueryTermsParam;
	private FuzzinessParamElements pFuzzinessParam;
	private PrefixLengthParamElements pPrefixLengthParam;
	private MaxExpansionsParamElements pMaxExpansionsParam;
	private ScoreModeParamElements pScoreModeParam;
	private ScoreParamElements pScoreParam;
	private IndicesParamElements pIndicesParam;
	private IndexParamElements pIndexParam;
	private LikeTextParamElements pLikeTextParam;
	private EndParamElements pEndParam;
	private InOrderParamElements pInOrderParam;
	private CollectPayloadsParamElements pCollectPayloadsParam;
	private FactorParamElements pFactorParam;
	private IncrementalFactorParamElements pIncrementalFactorParam;
	private CacheParamElements pCacheParam;
	private DistanceTypeParamElements pDistanceTypeParam;
	private OptimizeBboxParamElements pOptimizeBboxParam;
	private MatchQueryElements pMatchQuery;
	private ShortMatchQueryObjectElements pShortMatchQueryObject;
	private MatchQueryObjectElements pMatchQueryObject;
	private MatchQueryParametersObjectElements pMatchQueryParametersObject;
	private MatchQueryParameterElements pMatchQueryParameter;
	private MultiMatchQueryElements pMultiMatchQuery;
	private MultiMatchQueryObjectElements pMultiMatchQueryObject;
	private MultiMatchQueryParameterElements pMultiMatchQueryParameter;
	private MultiMatchTypeParamElements pMultiMatchTypeParam;
	private MultiMatchTypeParamTypesElements pMultiMatchTypeParamTypes;
	private BoolQueryElements pBoolQuery;
	private BoolQueryObjectElements pBoolQueryObject;
	private BoolQueryParameterElements pBoolQueryParameter;
	private BoolClauseElements pBoolClause;
	private CommonQueryElements pCommonQuery;
	private CommonQueryObjectElements pCommonQueryObject;
	private CommonQueryParametersObjectElements pCommonQueryParametersObject;
	private CommonQueryParameterElements pCommonQueryParameter;
	private ConstantScoreQueryElements pConstantScoreQuery;
	private ConstantScoreQueryObjectElements pConstantScoreQueryObject;
	private DisMaxQueryElements pDisMaxQuery;
	private DisMaxQueryObjectElements pDisMaxQueryObject;
	private FilteredQueryElements pFilteredQuery;
	private FilteredQueryObjectElements pFilteredQueryObject;
	private FuzzyLikeThisQueryElements pFuzzyLikeThisQuery;
	private FuzzyLikeThisQueryObjectElements pFuzzyLikeThisQueryObject;
	private FuzzyLikeThisQueryParameterElements pFuzzyLikeThisQueryParameter;
	private FuzzyLikeThisFieldQueryElements pFuzzyLikeThisFieldQuery;
	private FuzzyLikeThisFieldQueryObjectElements pFuzzyLikeThisFieldQueryObject;
	private FuzzyLikeThisFieldQueryParameterElements pFuzzyLikeThisFieldQueryParameter;
	private FuzzyQueryElements pFuzzyQuery;
	private SimpleFuzzyQueryObjectElements pSimpleFuzzyQueryObject;
	private FuzzyQueryObjectElements pFuzzyQueryObject;
	private FuzzyQueryObjectParametersElements pFuzzyQueryObjectParameters;
	private FuzzyQueryParameterElements pFuzzyQueryParameter;
	private GeoshapeQueryElements pGeoshapeQuery;
	private GeoshapeQueryObjectElements pGeoshapeQueryObject;
	private HasChildQueryElements pHasChildQuery;
	private HasChildQueryObjectElements pHasChildQueryObject;
	private HasParentQueryElements pHasParentQuery;
	private HasParentQueryObjectElements pHasParentQueryObject;
	private IdsQueryElements pIdsQuery;
	private IdsObjectElements pIdsObject;
	private IndicesQueryElements pIndicesQuery;
	private IndicesQueryObjectElements pIndicesQueryObject;
	private MatchAllQueryElements pMatchAllQuery;
	private MatchAllQueryObjectElements pMatchAllQueryObject;
	private MoreLikeThisQueryElements pMoreLikeThisQuery;
	private MoreLikeThisQueryObjectElements pMoreLikeThisQueryObject;
	private MoreLikeThisQueryParameterElements pMoreLikeThisQueryParameter;
	private MoreLikeThisFieldQueryElements pMoreLikeThisFieldQuery;
	private MoreLikeThisFieldQueryObjectElements pMoreLikeThisFieldQueryObject;
	private MoreLikeThisFieldQueryParameterElements pMoreLikeThisFieldQueryParameter;
	private NestedQueryElements pNestedQuery;
	private NestedQueryObjectElements pNestedQueryObject;
	private PrefixQueryElements pPrefixQuery;
	private SimplePrefixQueryObjectElements pSimplePrefixQueryObject;
	private PrefixQueryObjectElements pPrefixQueryObject;
	private PrefixQueryParameterObjectElements pPrefixQueryParameterObject;
	private QueryStringQueryElements pQueryStringQuery;
	private QueryStringQueryObjectElements pQueryStringQueryObject;
	private QueryStringQueryParameterElements pQueryStringQueryParameter;
	private SimpleQueryStringQueryElements pSimpleQueryStringQuery;
	private SimpleQueryStringQueryObjectElements pSimpleQueryStringQueryObject;
	private SimpleQueryStringQueryParameterElements pSimpleQueryStringQueryParameter;
	private RangeQueryElements pRangeQuery;
	private RangeQueryObjectElements pRangeQueryObject;
	private RangeQueryParametersObjectElements pRangeQueryParametersObject;
	private RangeQueryParameterElements pRangeQueryParameter;
	private RegexpQueryElements pRegexpQuery;
	private RegexpQueryObjectElements pRegexpQueryObject;
	private RegexpQueryParameterObjectElements pRegexpQueryParameterObject;
	private RegexpQueryParameterElements pRegexpQueryParameter;
	private SpanFirstQueryElements pSpanFirstQuery;
	private SpanFirstQueryObjectElements pSpanFirstQueryObject;
	private SpanMultiQueryElements pSpanMultiQuery;
	private SpanMultiQueryObjectElements pSpanMultiQueryObject;
	private SpanNearQueryElements pSpanNearQuery;
	private SpanNearQueryObjectElements pSpanNearQueryObject;
	private SpanNotQueryElements pSpanNotQuery;
	private SpanNotQueryObjectElements pSpanNotQueryObject;
	private SpanOrQueryElements pSpanOrQuery;
	private SpanOrQueryObjectElements pSpanOrQueryObject;
	private SpanTermQueryElements pSpanTermQuery;
	private SpanTermQueryObjectElements pSpanTermQueryObject;
	private TermQueryElements pTermQuery;
	private TermQueryObjectElements pTermQueryObject;
	private SimpleTermElements pSimpleTerm;
	private TermQueryParametersObjectElements pTermQueryParametersObject;
	private TermsQueryElements pTermsQuery;
	private TermsQueryObjectElements pTermsQueryObject;
	private TopChildrenQueryElements pTopChildrenQuery;
	private TopChildrenQueryObjectElements pTopChildrenQueryObject;
	private TopChildrenQueryParameterElements pTopChildrenQueryParameter;
	private WildcardQueryElements pWildcardQuery;
	private AndFilterElements pAndFilter;
	private SimpleAndFilterArrayElements pSimpleAndFilterArray;
	private AndFilterObjectElements pAndFilterObject;
	private BoolFilterElements pBoolFilter;
	private BoolFilterObjectElements pBoolFilterObject;
	private BoolFilterClauseElements pBoolFilterClause;
	private ExistsFilterElements pExistsFilter;
	private ExistsFilterObjectElements pExistsFilterObject;
	private GeoBoundingBoxFilterElements pGeoBoundingBoxFilter;
	private GeoBoundingBoxFilterObjectElements pGeoBoundingBoxFilterObject;
	private GeoDistanceFilterElements pGeoDistanceFilter;
	private GeoDistanceFilterObjectElements pGeoDistanceFilterObject;
	private GeoDistanceFilterParameterElements pGeoDistanceFilterParameter;
	private GeoDistanceRangeFilterElements pGeoDistanceRangeFilter;
	private GeoDistanceRangeFilterObjectElements pGeoDistanceRangeFilterObject;
	private GeoPolygonFilterElements pGeoPolygonFilter;
	private GeoPolygonFilterObjectElements pGeoPolygonFilterObject;
	private GeoShapeFilterElements pGeoShapeFilter;
	private GeoShapeFilterObjectElements pGeoShapeFilterObject;
	private GeohashCellFilterElements pGeohashCellFilter;
	private GeohashCellFilterObjectElements pGeohashCellFilterObject;
	private HasChildFilterElements pHasChildFilter;
	private HasChildFilterObjectElements pHasChildFilterObject;
	private HasParentFilterElements pHasParentFilter;
	private HasParentFilterObjectElements pHasParentFilterObject;
	private IdsFilterElements pIdsFilter;
	private IndicesFilterElements pIndicesFilter;
	private IndicesFilterObjectElements pIndicesFilterObject;
	private LimitFilterElements pLimitFilter;
	private LimitFilterObjectElements pLimitFilterObject;
	private MatchAllFilterElements pMatchAllFilter;
	private MatchAllFilterObjectElements pMatchAllFilterObject;
	private MissingFilterElements pMissingFilter;
	private MissingFilterObjectElements pMissingFilterObject;
	private NestedFilterElements pNestedFilter;
	private NestedFilterObjectElements pNestedFilterObject;
	private NotFilterElements pNotFilter;
	private NotFilterObjectElements pNotFilterObject;
	private OrFilterElements pOrFilter;
	private OrFilterArrayElements pOrFilterArray;
	private PrefixFilterElements pPrefixFilter;
	private PrefixFilterObjectElements pPrefixFilterObject;
	private QueryFilterElements pQueryFilter;
	private FQueryElements pFQuery;
	private RangeFilterElements pRangeFilter;
	private RangeFilterObjectElements pRangeFilterObject;
	private RangeFilterExecutionParamElements pRangeFilterExecutionParam;
	private RangeFilterParametersObjectElements pRangeFilterParametersObject;
	private RangeFilterParameterElements pRangeFilterParameter;
	private RegexpFilterElements pRegexpFilter;
	private RegexpFilterObjectElements pRegexpFilterObject;
	private RegexpFilterParameterObjectElements pRegexpFilterParameterObject;
	private RegexpFilterParameterElements pRegexpFilterParameter;
	private ScriptFilterElements pScriptFilter;
	private ScriptFilterObjectElements pScriptFilterObject;
	private TermFilterElements pTermFilter;
	private TermFilterObjectElements pTermFilterObject;
	private TermsFilterElements pTermsFilter;
	private TermsFilterObjectElements pTermsFilterObject;
	private TermsFilterExecutionParamElements pTermsFilterExecutionParam;
	private TypeFilterElements pTypeFilter;
	private TypeFilterObjectElements pTypeFilterObject;
	private GeoShapeObjectElements pGeoShapeObject;
	private GeoShapeElements pGeoShape;
	private IndexedShapeElements pIndexedShape;
	private PolygonElements pPolygon;
	private BoundingBoxObjectElements pBoundingBoxObject;
	private TwoPointBoundingBoxElements pTwoPointBoundingBox;
	private VerticesBoundingBoxElements pVerticesBoundingBox;
	private LatLonElements pLatLon;
	private LatLonPropertyObjectElements pLatLonPropertyObject;
	private LatLonArrayElements pLatLonArray;
	private LatLonStringElements pLatLonString;
	private ShapeObjectElements pShapeObject;
	private ShapeElements pShape;
	private ShapeTypeElements pShapeType;
	private ShapeTypeEnvelopeElements pShapeTypeEnvelope;
	private ObjectElements pObject;
	private MemberElements pMember;
	private ValueElements pValue;
	private ArrayElements pArray;
	private NUMBERElements pNUMBER;
	private FLOATElements pFLOAT;
	private TerminalRule tBOOLEAN;
	private TerminalRule tNULL;
	private TerminalRule tNONE_ALL;
	private AND_ORElements pAND_OR;
	private TerminalRule tBOOL_CLAUSE;
	private TerminalRule tSCORE_MODES;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public SearchDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.first8.elasticsearch.dsl.SearchDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// conventions used:
	//// xxxObject includes the brackets (e.g. '{' something '}')
	//// xxxParam are generic optional parameters (e.g. '"size"' ':' INT)
	//// xxxParameter is an allowed parameter for the query type xxx
	//// a xxQuery or xxFilter definition maps the query/filter name. 
	//// The actual definition is done in a xxQueryObject or xxFilterObject.
	//// If the definition is the same for bot a filter or a query, the object is simply called xxObject.
	//// TODO add _source parameter
	//// TODO add script_fields
	//// TODO add fielddata_fields
	//// TODO http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-multi-term-rewrite.html
	//// TODO http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-template-query.html
	//// TODO add BoostingQuery, FunctionScoreQUery
	//// TODO Aggregations
	//SearchDSL:
	//	"{" (fields=Fields ",")? (from=From ",")? (size=Size ",")? (sort=Sort ",")? query=Query ("," facets=Facets)? (","
	//	stats=Stats)? "}";
	public SearchDSLElements getSearchDSLAccess() {
		return (pSearchDSL != null) ? pSearchDSL : (pSearchDSL = new SearchDSLElements());
	}
	
	public ParserRule getSearchDSLRule() {
		return getSearchDSLAccess().getRule();
	}

	//SearchField:
	//	fields=Fields | from=From | size=Size | sort=Sort | query=Query | facets=Facets | stats=Stats;
	public SearchFieldElements getSearchFieldAccess() {
		return (pSearchField != null) ? pSearchField : (pSearchField = new SearchFieldElements());
	}
	
	public ParserRule getSearchFieldRule() {
		return getSearchFieldAccess().getRule();
	}

	//Stats:
	//	"\"stats\"" ":" "[" groups+=STRING ("," groups+=STRING)* "]";
	public StatsElements getStatsAccess() {
		return (pStats != null) ? pStats : (pStats = new StatsElements());
	}
	
	public ParserRule getStatsRule() {
		return getStatsAccess().getRule();
	}

	//From:
	//	"\"from\"" ":" INT;
	public FromElements getFromAccess() {
		return (pFrom != null) ? pFrom : (pFrom = new FromElements());
	}
	
	public ParserRule getFromRule() {
		return getFromAccess().getRule();
	}

	//Size:
	//	"\"size\"" ":" INT;
	public SizeElements getSizeAccess() {
		return (pSize != null) ? pSize : (pSize = new SizeElements());
	}
	
	public ParserRule getSizeRule() {
		return getSizeAccess().getRule();
	}

	//Sort:
	//	"\"sort\"" ":" "[" sortvalues+=SortValue ("," sortvalues+=SortValue)* "]";
	public SortElements getSortAccess() {
		return (pSort != null) ? pSort : (pSort = new SortElements());
	}
	
	public ParserRule getSortRule() {
		return getSortAccess().getRule();
	}

	//SortValue:
	//	sortFieldName=STRING | sortShortObject=ShortSortOject | sortObject=SortObject | sortByScore="\"_score\"";
	public SortValueElements getSortValueAccess() {
		return (pSortValue != null) ? pSortValue : (pSortValue = new SortValueElements());
	}
	
	public ParserRule getSortValueRule() {
		return getSortValueAccess().getRule();
	}

	//ShortSortOject:
	//	"{" sortFieldName=STRING ":" ascDesc=ASC_DESC "}";
	public ShortSortOjectElements getShortSortOjectAccess() {
		return (pShortSortOject != null) ? pShortSortOject : (pShortSortOject = new ShortSortOjectElements());
	}
	
	public ParserRule getShortSortOjectRule() {
		return getShortSortOjectAccess().getRule();
	}

	//SortObject:
	//	"{" sortFieldName=STRING ":" sortProperties=SortObjectPropertiesObject "}";
	public SortObjectElements getSortObjectAccess() {
		return (pSortObject != null) ? pSortObject : (pSortObject = new SortObjectElements());
	}
	
	public ParserRule getSortObjectRule() {
		return getSortObjectAccess().getRule();
	}

	//SortObjectPropertiesObject:
	//	"{" sort+=SortObjectProperty ("," sort+=SortObjectProperty)* "}";
	public SortObjectPropertiesObjectElements getSortObjectPropertiesObjectAccess() {
		return (pSortObjectPropertiesObject != null) ? pSortObjectPropertiesObject : (pSortObjectPropertiesObject = new SortObjectPropertiesObjectElements());
	}
	
	public ParserRule getSortObjectPropertiesObjectRule() {
		return getSortObjectPropertiesObjectAccess().getRule();
	}

	//SortObjectProperty:
	//	"\"order\"" ":" order=ASC_DESC | "\"mode\"" ":" sortMode=SORT_MODE | "\"missing\"" ":" missing=STRING;
	public SortObjectPropertyElements getSortObjectPropertyAccess() {
		return (pSortObjectProperty != null) ? pSortObjectProperty : (pSortObjectProperty = new SortObjectPropertyElements());
	}
	
	public ParserRule getSortObjectPropertyRule() {
		return getSortObjectPropertyAccess().getRule();
	}

	//SORT_MODE:
	//	sortMode=("\"min\"" | "\"max\"" | "\"avg\"" | "\'sum\'");
	public SORT_MODEElements getSORT_MODEAccess() {
		return (pSORT_MODE != null) ? pSORT_MODE : (pSORT_MODE = new SORT_MODEElements());
	}
	
	public ParserRule getSORT_MODERule() {
		return getSORT_MODEAccess().getRule();
	}

	//ASC_DESC:
	//	ascDesc=("\"asc\"" | "\"desc\"");
	public ASC_DESCElements getASC_DESCAccess() {
		return (pASC_DESC != null) ? pASC_DESC : (pASC_DESC = new ASC_DESCElements());
	}
	
	public ParserRule getASC_DESCRule() {
		return getASC_DESCAccess().getRule();
	}

	//Fields:
	//	"\"fields\"" ":" selectfields=Array;
	public FieldsElements getFieldsAccess() {
		return (pFields != null) ? pFields : (pFields = new FieldsElements());
	}
	
	public ParserRule getFieldsRule() {
		return getFieldsAccess().getRule();
	}

	//Query:
	//	"\"query\"" ":" query=QueryObject;
	public QueryElements getQueryAccess() {
		return (pQuery != null) ? pQuery : (pQuery = new QueryElements());
	}
	
	public ParserRule getQueryRule() {
		return getQueryAccess().getRule();
	}

	//Filter:
	//	"\"filter\"" ":" filter=FilterObject;
	public FilterElements getFilterAccess() {
		return (pFilter != null) ? pFilter : (pFilter = new FilterElements());
	}
	
	public ParserRule getFilterRule() {
		return getFilterAccess().getRule();
	}

	//FilterObject:
	//	"{" FilterType "}";
	public FilterObjectElements getFilterObjectAccess() {
		return (pFilterObject != null) ? pFilterObject : (pFilterObject = new FilterObjectElements());
	}
	
	public ParserRule getFilterObjectRule() {
		return getFilterObjectAccess().getRule();
	}

	//FilterType:
	//	and=AndFilter | bool=BoolFilter | exists=ExistsFilter | geoBoundingBox=GeoBoundingBoxFilter |
	//	geoDistance=GeoDistanceFilter | geoDistanceRange=GeoDistanceRangeFilter | geoPolygon=GeoPolygonFilter |
	//	geoShape=GeoShapeFilter | geoHashCell=GeohashCellFilter | hasChild=HasChildFilter | hasParent=HasParentFilter |
	//	ids=IdsFilter | indices=IndicesFilter | limit=LimitFilter | matchAll=MatchAllFilter | missing=MissingFilter |
	//	nested=NestedFilter | not=NotFilter | or=OrFilter | prefix=PrefixFilter | query=QueryFilter | regexp=RegexpFilter |
	//	script=ScriptFilter | term=TermFilter | terms=TermsFilter | type=TypeFilter;
	public FilterTypeElements getFilterTypeAccess() {
		return (pFilterType != null) ? pFilterType : (pFilterType = new FilterTypeElements());
	}
	
	public ParserRule getFilterTypeRule() {
		return getFilterTypeAccess().getRule();
	}

	//QueryObject:
	//	"{" queryType=QueryType "}";
	public QueryObjectElements getQueryObjectAccess() {
		return (pQueryObject != null) ? pQueryObject : (pQueryObject = new QueryObjectElements());
	}
	
	public ParserRule getQueryObjectRule() {
		return getQueryObjectAccess().getRule();
	}

	//QueryType:
	//	match=MatchQuery | multiMatch=MultiMatchQuery | bool=BoolQuery | common=CommonQuery | constantScore=ConstantScoreQuery
	//	| disMax=DisMaxQuery | filtered=FilteredQuery | fuzzyLikeThis=FuzzyLikeThisQuery |
	//	fuzzyLikeThisField=FuzzyLikeThisFieldQuery | geoshape=GeoshapeQuery | hasChild=HasChildQuery |
	//	hasParent=HasParentQuery | ids=IdsQuery | indices=IndicesQuery | matchAll=MatchAllQuery |
	//	moreLikeThis=MoreLikeThisQuery | moreLikeThisField=MoreLikeThisFieldQuery | nested=NestedQuery |
	//	queryString=QueryStringQuery | simpleQuery=SimpleQueryStringQuery | spanFirst=SpanFirstQuery |
	//	spanMulti=SpanMultiQuery | spanNear=SpanNearQuery | spanNot=SpanNotQuery | spanOr=SpanOrQuery | spanTerm=SpanTermQuery
	//	| fuzzy=FuzzyQuery | prefix=PrefixQuery | term=TermQuery | range=RangeQuery | regexp=RegexpQuery |
	//	wildcard=WildcardQuery | terms=TermsQuery | topChildren=TopChildrenQuery;
	public QueryTypeElements getQueryTypeAccess() {
		return (pQueryType != null) ? pQueryType : (pQueryType = new QueryTypeElements());
	}
	
	public ParserRule getQueryTypeRule() {
		return getQueryTypeAccess().getRule();
	}

	//SpanQuery:
	//	spanQuery=SpanFirstQuery | SpanMultiQuery | SpanNearQuery | SpanNotQuery | SpanOrQuery | SpanTermQuery;
	public SpanQueryElements getSpanQueryAccess() {
		return (pSpanQuery != null) ? pSpanQuery : (pSpanQuery = new SpanQueryElements());
	}
	
	public ParserRule getSpanQueryRule() {
		return getSpanQueryAccess().getRule();
	}

	//MultiTermQuery:
	//	multiTermQuery=FuzzyQuery | PrefixQuery | TermQuery | RangeQuery | RegexpQuery | WildcardQuery;
	public MultiTermQueryElements getMultiTermQueryAccess() {
		return (pMultiTermQuery != null) ? pMultiTermQuery : (pMultiTermQuery = new MultiTermQueryElements());
	}
	
	public ParserRule getMultiTermQueryRule() {
		return getMultiTermQueryAccess().getRule();
	}

	//Facets:
	//	"\"facets\"" ":" FacetsObject;
	public FacetsElements getFacetsAccess() {
		return (pFacets != null) ? pFacets : (pFacets = new FacetsElements());
	}
	
	public ParserRule getFacetsRule() {
		return getFacetsAccess().getRule();
	}

	//FacetsObject:
	//	"{" facetName=STRING ":" config=FacetTypeObject "}";
	public FacetsObjectElements getFacetsObjectAccess() {
		return (pFacetsObject != null) ? pFacetsObject : (pFacetsObject = new FacetsObjectElements());
	}
	
	public ParserRule getFacetsObjectRule() {
		return getFacetsObjectAccess().getRule();
	}

	//FacetTypeObject:
	//	"{" facetType=FacetType ("," params+=FacetParameter)* "}";
	public FacetTypeObjectElements getFacetTypeObjectAccess() {
		return (pFacetTypeObject != null) ? pFacetTypeObject : (pFacetTypeObject = new FacetTypeObjectElements());
	}
	
	public ParserRule getFacetTypeObjectRule() {
		return getFacetTypeObjectAccess().getRule();
	}

	//FacetType:
	//	facetType=TermsFacet | RangeFacet | HistogramFacet | DateHistogramFacet | FilterFacet | QueryFacet | StatisticalFacet
	//	| TermsStatsFacet | GeoDistanceFacet;
	public FacetTypeElements getFacetTypeAccess() {
		return (pFacetType != null) ? pFacetType : (pFacetType = new FacetTypeElements());
	}
	
	public ParserRule getFacetTypeRule() {
		return getFacetTypeAccess().getRule();
	}

	//GeoDistanceFacet:
	//	"\"geo_distance\"" ":" GeoDistanceFacetObject;
	public GeoDistanceFacetElements getGeoDistanceFacetAccess() {
		return (pGeoDistanceFacet != null) ? pGeoDistanceFacet : (pGeoDistanceFacet = new GeoDistanceFacetElements());
	}
	
	public ParserRule getGeoDistanceFacetRule() {
		return getGeoDistanceFacetAccess().getRule();
	}

	//GeoDistanceFacetObject:
	//	"{" fieldName=STRING ":" point=LatLon "," RangesParam "}";
	public GeoDistanceFacetObjectElements getGeoDistanceFacetObjectAccess() {
		return (pGeoDistanceFacetObject != null) ? pGeoDistanceFacetObject : (pGeoDistanceFacetObject = new GeoDistanceFacetObjectElements());
	}
	
	public ParserRule getGeoDistanceFacetObjectRule() {
		return getGeoDistanceFacetObjectAccess().getRule();
	}

	//// TODO
	//TermsStatsFacet:
	//	"\"terms_stats\"" ":" Object;
	public TermsStatsFacetElements getTermsStatsFacetAccess() {
		return (pTermsStatsFacet != null) ? pTermsStatsFacet : (pTermsStatsFacet = new TermsStatsFacetElements());
	}
	
	public ParserRule getTermsStatsFacetRule() {
		return getTermsStatsFacetAccess().getRule();
	}

	//StatisticalFacet:
	//	"\"statistical\"" ":" StatisticalFacetObject;
	public StatisticalFacetElements getStatisticalFacetAccess() {
		return (pStatisticalFacet != null) ? pStatisticalFacet : (pStatisticalFacet = new StatisticalFacetElements());
	}
	
	public ParserRule getStatisticalFacetRule() {
		return getStatisticalFacetAccess().getRule();
	}

	//StatisticalFacetObject:
	//	"{" field=FieldParam | script=ScriptParam | fields=FieldsParam "}";
	public StatisticalFacetObjectElements getStatisticalFacetObjectAccess() {
		return (pStatisticalFacetObject != null) ? pStatisticalFacetObject : (pStatisticalFacetObject = new StatisticalFacetObjectElements());
	}
	
	public ParserRule getStatisticalFacetObjectRule() {
		return getStatisticalFacetObjectAccess().getRule();
	}

	//QueryFacet:
	//	Query;
	public QueryFacetElements getQueryFacetAccess() {
		return (pQueryFacet != null) ? pQueryFacet : (pQueryFacet = new QueryFacetElements());
	}
	
	public ParserRule getQueryFacetRule() {
		return getQueryFacetAccess().getRule();
	}

	//FilterFacet:
	//	Filter;
	public FilterFacetElements getFilterFacetAccess() {
		return (pFilterFacet != null) ? pFilterFacet : (pFilterFacet = new FilterFacetElements());
	}
	
	public ParserRule getFilterFacetRule() {
		return getFilterFacetAccess().getRule();
	}

	//DateHistogramFacet:
	//	"\"date_histogram\"" ":" DateHistogramFacetObject;
	public DateHistogramFacetElements getDateHistogramFacetAccess() {
		return (pDateHistogramFacet != null) ? pDateHistogramFacet : (pDateHistogramFacet = new DateHistogramFacetElements());
	}
	
	public ParserRule getDateHistogramFacetRule() {
		return getDateHistogramFacetAccess().getRule();
	}

	//DateHistogramFacetObject:
	//	"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) "," "\"interval\"" ":" STRING "}";
	public DateHistogramFacetObjectElements getDateHistogramFacetObjectAccess() {
		return (pDateHistogramFacetObject != null) ? pDateHistogramFacetObject : (pDateHistogramFacetObject = new DateHistogramFacetObjectElements());
	}
	
	public ParserRule getDateHistogramFacetObjectRule() {
		return getDateHistogramFacetObjectAccess().getRule();
	}

	//HistogramFacet:
	//	"\"histogram\"" ":" HistogramFacetObject;
	public HistogramFacetElements getHistogramFacetAccess() {
		return (pHistogramFacet != null) ? pHistogramFacet : (pHistogramFacet = new HistogramFacetElements());
	}
	
	public ParserRule getHistogramFacetRule() {
		return getHistogramFacetAccess().getRule();
	}

	//HistogramFacetObject:
	//	"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) ("," HistogramFacetParameter)* "}";
	public HistogramFacetObjectElements getHistogramFacetObjectAccess() {
		return (pHistogramFacetObject != null) ? pHistogramFacetObject : (pHistogramFacetObject = new HistogramFacetObjectElements());
	}
	
	public ParserRule getHistogramFacetObjectRule() {
		return getHistogramFacetObjectAccess().getRule();
	}

	//HistogramFacetParameter:
	//	IntervalParam | TimeIntervalParam;
	public HistogramFacetParameterElements getHistogramFacetParameterAccess() {
		return (pHistogramFacetParameter != null) ? pHistogramFacetParameter : (pHistogramFacetParameter = new HistogramFacetParameterElements());
	}
	
	public ParserRule getHistogramFacetParameterRule() {
		return getHistogramFacetParameterAccess().getRule();
	}

	//RangeFacet:
	//	"\"range\"" ":" RangeFacetObject;
	public RangeFacetElements getRangeFacetAccess() {
		return (pRangeFacet != null) ? pRangeFacet : (pRangeFacet = new RangeFacetElements());
	}
	
	public ParserRule getRangeFacetRule() {
		return getRangeFacetAccess().getRule();
	}

	//RangeFacetObject:
	//	"{" (field=FieldParam | keyValue=KeyValueField | keyValueScript=KeyValueScript) RangesParam "}";
	public RangeFacetObjectElements getRangeFacetObjectAccess() {
		return (pRangeFacetObject != null) ? pRangeFacetObject : (pRangeFacetObject = new RangeFacetObjectElements());
	}
	
	public ParserRule getRangeFacetObjectRule() {
		return getRangeFacetObjectAccess().getRule();
	}

	//RangesParam:
	//	"\"ranges\"" ":" "[" RangeObject ("," RangeObject)* "]";
	public RangesParamElements getRangesParamAccess() {
		return (pRangesParam != null) ? pRangesParam : (pRangesParam = new RangesParamElements());
	}
	
	public ParserRule getRangesParamRule() {
		return getRangesParamAccess().getRule();
	}

	//KeyValueField:
	//	"\"key_field\"" ":" keyField=STRING "," "\"value_field\"" ":" valueField=STRING;
	public KeyValueFieldElements getKeyValueFieldAccess() {
		return (pKeyValueField != null) ? pKeyValueField : (pKeyValueField = new KeyValueFieldElements());
	}
	
	public ParserRule getKeyValueFieldRule() {
		return getKeyValueFieldAccess().getRule();
	}

	//KeyValueScript:
	//	"\"key_script\"" ":" keyScript=STRING "," "\"value_script\"" ":" valueScript=STRING;
	public KeyValueScriptElements getKeyValueScriptAccess() {
		return (pKeyValueScript != null) ? pKeyValueScript : (pKeyValueScript = new KeyValueScriptElements());
	}
	
	public ParserRule getKeyValueScriptRule() {
		return getKeyValueScriptAccess().getRule();
	}

	//RangeObject:
	//	"{" FromParam | FromParam "," ToParam | ToParam "}";
	public RangeObjectElements getRangeObjectAccess() {
		return (pRangeObject != null) ? pRangeObject : (pRangeObject = new RangeObjectElements());
	}
	
	public ParserRule getRangeObjectRule() {
		return getRangeObjectAccess().getRule();
	}

	//TermsFacet:
	//	"\"terms\"" ":" TermsFacetObject;
	public TermsFacetElements getTermsFacetAccess() {
		return (pTermsFacet != null) ? pTermsFacet : (pTermsFacet = new TermsFacetElements());
	}
	
	public ParserRule getTermsFacetRule() {
		return getTermsFacetAccess().getRule();
	}

	//TermsFacetObject:
	//	"{" params+=TermsFacetParameter ("," params+=TermsFacetParameter)* "}";
	public TermsFacetObjectElements getTermsFacetObjectAccess() {
		return (pTermsFacetObject != null) ? pTermsFacetObject : (pTermsFacetObject = new TermsFacetObjectElements());
	}
	
	public ParserRule getTermsFacetObjectRule() {
		return getTermsFacetObjectAccess().getRule();
	}

	//TermsFacetParameter:
	//	field=FieldParam | fields=FieldsParam | size=SizeParam | order=OrderParam | allTerms=AllTermsParam |
	//	exclude=ExcludeParam | regex=RegexParam | regexFlags=RegexFlagsParam | script=ScriptParam |
	//	scriptField=ScriptFieldParam;
	public TermsFacetParameterElements getTermsFacetParameterAccess() {
		return (pTermsFacetParameter != null) ? pTermsFacetParameter : (pTermsFacetParameter = new TermsFacetParameterElements());
	}
	
	public ParserRule getTermsFacetParameterRule() {
		return getTermsFacetParameterAccess().getRule();
	}

	//FacetParameter:
	//	global=GlobalParam | faceFilter=FacetFilterParam;
	public FacetParameterElements getFacetParameterAccess() {
		return (pFacetParameter != null) ? pFacetParameter : (pFacetParameter = new FacetParameterElements());
	}
	
	public ParserRule getFacetParameterRule() {
		return getFacetParameterAccess().getRule();
	}

	//FacetFilterParam:
	//	"\"facet_filter\"" ":" Filter;
	public FacetFilterParamElements getFacetFilterParamAccess() {
		return (pFacetFilterParam != null) ? pFacetFilterParam : (pFacetFilterParam = new FacetFilterParamElements());
	}
	
	public ParserRule getFacetFilterParamRule() {
		return getFacetFilterParamAccess().getRule();
	}

	//// Common parameters for queries, filters and facets
	//IntervalParam:
	//	"\"interval\"" ":" INT;
	public IntervalParamElements getIntervalParamAccess() {
		return (pIntervalParam != null) ? pIntervalParam : (pIntervalParam = new IntervalParamElements());
	}
	
	public ParserRule getIntervalParamRule() {
		return getIntervalParamAccess().getRule();
	}

	//TimeIntervalParam:
	//	"\"time_interval\"" ":" STRING;
	public TimeIntervalParamElements getTimeIntervalParamAccess() {
		return (pTimeIntervalParam != null) ? pTimeIntervalParam : (pTimeIntervalParam = new TimeIntervalParamElements());
	}
	
	public ParserRule getTimeIntervalParamRule() {
		return getTimeIntervalParamAccess().getRule();
	}

	//FromParam:
	//	"\"from\"" ":" (NUMBER | STRING);
	public FromParamElements getFromParamAccess() {
		return (pFromParam != null) ? pFromParam : (pFromParam = new FromParamElements());
	}
	
	public ParserRule getFromParamRule() {
		return getFromParamAccess().getRule();
	}

	//ToParam:
	//	"\"to\"" ":" (NUMBER | STRING);
	public ToParamElements getToParamAccess() {
		return (pToParam != null) ? pToParam : (pToParam = new ToParamElements());
	}
	
	public ParserRule getToParamRule() {
		return getToParamAccess().getRule();
	}

	//SizeParam:
	//	"\"size\"" ":" INT;
	public SizeParamElements getSizeParamAccess() {
		return (pSizeParam != null) ? pSizeParam : (pSizeParam = new SizeParamElements());
	}
	
	public ParserRule getSizeParamRule() {
		return getSizeParamAccess().getRule();
	}

	//OrderParam:
	//	"\"order\"" ":" ("\"count\"" | "\"term\"" | "\"reverse_count\"" | "\"reverse_term\"");
	public OrderParamElements getOrderParamAccess() {
		return (pOrderParam != null) ? pOrderParam : (pOrderParam = new OrderParamElements());
	}
	
	public ParserRule getOrderParamRule() {
		return getOrderParamAccess().getRule();
	}

	//AllTermsParam:
	//	"\"all_terms\"" ":" allTerms=BOOLEAN;
	public AllTermsParamElements getAllTermsParamAccess() {
		return (pAllTermsParam != null) ? pAllTermsParam : (pAllTermsParam = new AllTermsParamElements());
	}
	
	public ParserRule getAllTermsParamRule() {
		return getAllTermsParamAccess().getRule();
	}

	//ExcludeParam:
	//	"\"exclude\"" ":" "[" excludeFieldNames+=STRING ("," excludeFieldNames+=STRING)* "]";
	public ExcludeParamElements getExcludeParamAccess() {
		return (pExcludeParam != null) ? pExcludeParam : (pExcludeParam = new ExcludeParamElements());
	}
	
	public ParserRule getExcludeParamRule() {
		return getExcludeParamAccess().getRule();
	}

	//ScriptParam:
	//	"\"script\"" ":" script=STRING;
	public ScriptParamElements getScriptParamAccess() {
		return (pScriptParam != null) ? pScriptParam : (pScriptParam = new ScriptParamElements());
	}
	
	public ParserRule getScriptParamRule() {
		return getScriptParamAccess().getRule();
	}

	//ScriptFieldParam:
	//	"\"script_field\"" ":" fieldName=STRING;
	public ScriptFieldParamElements getScriptFieldParamAccess() {
		return (pScriptFieldParam != null) ? pScriptFieldParam : (pScriptFieldParam = new ScriptFieldParamElements());
	}
	
	public ParserRule getScriptFieldParamRule() {
		return getScriptFieldParamAccess().getRule();
	}

	//RegexParam:
	//	"\"regex\"" ":" STRING;
	public RegexParamElements getRegexParamAccess() {
		return (pRegexParam != null) ? pRegexParam : (pRegexParam = new RegexParamElements());
	}
	
	public ParserRule getRegexParamRule() {
		return getRegexParamAccess().getRule();
	}

	//RegexFlagsParam:
	//	"\"regex_flags\"" ":" STRING;
	public RegexFlagsParamElements getRegexFlagsParamAccess() {
		return (pRegexFlagsParam != null) ? pRegexFlagsParam : (pRegexFlagsParam = new RegexFlagsParamElements());
	}
	
	public ParserRule getRegexFlagsParamRule() {
		return getRegexFlagsParamAccess().getRule();
	}

	//GlobalParam:
	//	"\"global\"" ":" BOOLEAN;
	public GlobalParamElements getGlobalParamAccess() {
		return (pGlobalParam != null) ? pGlobalParam : (pGlobalParam = new GlobalParamElements());
	}
	
	public ParserRule getGlobalParamRule() {
		return getGlobalParamAccess().getRule();
	}

	//CutoffFrequenceParam:
	//	"\"cutoff_frequency\"" ":" FLOAT;
	public CutoffFrequenceParamElements getCutoffFrequenceParamAccess() {
		return (pCutoffFrequenceParam != null) ? pCutoffFrequenceParam : (pCutoffFrequenceParam = new CutoffFrequenceParamElements());
	}
	
	public ParserRule getCutoffFrequenceParamRule() {
		return getCutoffFrequenceParamAccess().getRule();
	}

	//ZeroTermsQueryParam:
	//	"\"zero_terms_query\"" ":" NONE_ALL;
	public ZeroTermsQueryParamElements getZeroTermsQueryParamAccess() {
		return (pZeroTermsQueryParam != null) ? pZeroTermsQueryParam : (pZeroTermsQueryParam = new ZeroTermsQueryParamElements());
	}
	
	public ParserRule getZeroTermsQueryParamRule() {
		return getZeroTermsQueryParamAccess().getRule();
	}

	//MinimumShouldMatchParam:
	//	"\"minimum_should_match\"" ":" (INT | STRING | ComplexMinimumShouldMatch);
	public MinimumShouldMatchParamElements getMinimumShouldMatchParamAccess() {
		return (pMinimumShouldMatchParam != null) ? pMinimumShouldMatchParam : (pMinimumShouldMatchParam = new MinimumShouldMatchParamElements());
	}
	
	public ParserRule getMinimumShouldMatchParamRule() {
		return getMinimumShouldMatchParamAccess().getRule();
	}

	//ComplexMinimumShouldMatch:
	//	"{" "\"low_freq\"" ":" INT ("," "\"high_freq\"" ":" INT)? "}";
	public ComplexMinimumShouldMatchElements getComplexMinimumShouldMatchAccess() {
		return (pComplexMinimumShouldMatch != null) ? pComplexMinimumShouldMatch : (pComplexMinimumShouldMatch = new ComplexMinimumShouldMatchElements());
	}
	
	public ParserRule getComplexMinimumShouldMatchRule() {
		return getComplexMinimumShouldMatchAccess().getRule();
	}

	//ExistenceParam:
	//	"\"existence\"" ":" BOOLEAN;
	public ExistenceParamElements getExistenceParamAccess() {
		return (pExistenceParam != null) ? pExistenceParam : (pExistenceParam = new ExistenceParamElements());
	}
	
	public ParserRule getExistenceParamRule() {
		return getExistenceParamAccess().getRule();
	}

	//NullValueParam:
	//	"\"null_value\"" ":" BOOLEAN;
	public NullValueParamElements getNullValueParamAccess() {
		return (pNullValueParam != null) ? pNullValueParam : (pNullValueParam = new NullValueParamElements());
	}
	
	public ParserRule getNullValueParamRule() {
		return getNullValueParamAccess().getRule();
	}

	//MinTermFreqParam:
	//	"\"min_term_freq\"" ":" INT;
	public MinTermFreqParamElements getMinTermFreqParamAccess() {
		return (pMinTermFreqParam != null) ? pMinTermFreqParam : (pMinTermFreqParam = new MinTermFreqParamElements());
	}
	
	public ParserRule getMinTermFreqParamRule() {
		return getMinTermFreqParamAccess().getRule();
	}

	//LowFreqOperatorParam:
	//	"\"low_freq_operator\"" ":" AND_OR;
	public LowFreqOperatorParamElements getLowFreqOperatorParamAccess() {
		return (pLowFreqOperatorParam != null) ? pLowFreqOperatorParam : (pLowFreqOperatorParam = new LowFreqOperatorParamElements());
	}
	
	public ParserRule getLowFreqOperatorParamRule() {
		return getLowFreqOperatorParamAccess().getRule();
	}

	//OperatorParam:
	//	"\"operator\"" ":" AND_OR;
	public OperatorParamElements getOperatorParamAccess() {
		return (pOperatorParam != null) ? pOperatorParam : (pOperatorParam = new OperatorParamElements());
	}
	
	public ParserRule getOperatorParamRule() {
		return getOperatorParamAccess().getRule();
	}

	//BoostParam:
	//	"\"boost\"" ":" FLOAT;
	public BoostParamElements getBoostParamAccess() {
		return (pBoostParam != null) ? pBoostParam : (pBoostParam = new BoostParamElements());
	}
	
	public ParserRule getBoostParamRule() {
		return getBoostParamAccess().getRule();
	}

	//AnalyzerParam:
	//	"\"analyzer\"" ":" STRING;
	public AnalyzerParamElements getAnalyzerParamAccess() {
		return (pAnalyzerParam != null) ? pAnalyzerParam : (pAnalyzerParam = new AnalyzerParamElements());
	}
	
	public ParserRule getAnalyzerParamRule() {
		return getAnalyzerParamAccess().getRule();
	}

	//FlagsParam:
	//	"\"flags\"" ":" STRING;
	public FlagsParamElements getFlagsParamAccess() {
		return (pFlagsParam != null) ? pFlagsParam : (pFlagsParam = new FlagsParamElements());
	}
	
	public ParserRule getFlagsParamRule() {
		return getFlagsParamAccess().getRule();
	}

	//DisableCoordParam:
	//	"\"disable_coord\"" ":" BOOLEAN;
	public DisableCoordParamElements getDisableCoordParamAccess() {
		return (pDisableCoordParam != null) ? pDisableCoordParam : (pDisableCoordParam = new DisableCoordParamElements());
	}
	
	public ParserRule getDisableCoordParamRule() {
		return getDisableCoordParamAccess().getRule();
	}

	//TieBreakerParam:
	//	"\"tie_breaker\"" ":" FLOAT;
	public TieBreakerParamElements getTieBreakerParamAccess() {
		return (pTieBreakerParam != null) ? pTieBreakerParam : (pTieBreakerParam = new TieBreakerParamElements());
	}
	
	public ParserRule getTieBreakerParamRule() {
		return getTieBreakerParamAccess().getRule();
	}

	//PercentTermsToMatchParam:
	//	"\"percent_terms_to_match\"" ":" FLOAT;
	public PercentTermsToMatchParamElements getPercentTermsToMatchParamAccess() {
		return (pPercentTermsToMatchParam != null) ? pPercentTermsToMatchParam : (pPercentTermsToMatchParam = new PercentTermsToMatchParamElements());
	}
	
	public ParserRule getPercentTermsToMatchParamRule() {
		return getPercentTermsToMatchParamAccess().getRule();
	}

	//StopWordsParam:
	//	"\"stop_words\"" ":" "[" STRING ("," STRING)* "]";
	public StopWordsParamElements getStopWordsParamAccess() {
		return (pStopWordsParam != null) ? pStopWordsParam : (pStopWordsParam = new StopWordsParamElements());
	}
	
	public ParserRule getStopWordsParamRule() {
		return getStopWordsParamAccess().getRule();
	}

	//MinDocFreqParam:
	//	"\"min_doc_freq\"" ":" INT;
	public MinDocFreqParamElements getMinDocFreqParamAccess() {
		return (pMinDocFreqParam != null) ? pMinDocFreqParam : (pMinDocFreqParam = new MinDocFreqParamElements());
	}
	
	public ParserRule getMinDocFreqParamRule() {
		return getMinDocFreqParamAccess().getRule();
	}

	//MaxDocFreqParam:
	//	"\"max_doc_freq\"" ":" INT;
	public MaxDocFreqParamElements getMaxDocFreqParamAccess() {
		return (pMaxDocFreqParam != null) ? pMaxDocFreqParam : (pMaxDocFreqParam = new MaxDocFreqParamElements());
	}
	
	public ParserRule getMaxDocFreqParamRule() {
		return getMaxDocFreqParamAccess().getRule();
	}

	//MinWordLengthParam:
	//	"\"min_word_length\"" ":" INT;
	public MinWordLengthParamElements getMinWordLengthParamAccess() {
		return (pMinWordLengthParam != null) ? pMinWordLengthParam : (pMinWordLengthParam = new MinWordLengthParamElements());
	}
	
	public ParserRule getMinWordLengthParamRule() {
		return getMinWordLengthParamAccess().getRule();
	}

	//MaxWordLengthParam:
	//	"\"max_word_length\"" ":" INT;
	public MaxWordLengthParamElements getMaxWordLengthParamAccess() {
		return (pMaxWordLengthParam != null) ? pMaxWordLengthParam : (pMaxWordLengthParam = new MaxWordLengthParamElements());
	}
	
	public ParserRule getMaxWordLengthParamRule() {
		return getMaxWordLengthParamAccess().getRule();
	}

	//BoostTermsParam:
	//	"\"boost_terms\"" ":" INT;
	public BoostTermsParamElements getBoostTermsParamAccess() {
		return (pBoostTermsParam != null) ? pBoostTermsParam : (pBoostTermsParam = new BoostTermsParamElements());
	}
	
	public ParserRule getBoostTermsParamRule() {
		return getBoostTermsParamAccess().getRule();
	}

	//GteParam:
	//	"\"gte\"" ":" (STRING | NUMBER);
	public GteParamElements getGteParamAccess() {
		return (pGteParam != null) ? pGteParam : (pGteParam = new GteParamElements());
	}
	
	public ParserRule getGteParamRule() {
		return getGteParamAccess().getRule();
	}

	//GtParam:
	//	"\"gt\"" ":" (STRING | NUMBER);
	public GtParamElements getGtParamAccess() {
		return (pGtParam != null) ? pGtParam : (pGtParam = new GtParamElements());
	}
	
	public ParserRule getGtParamRule() {
		return getGtParamAccess().getRule();
	}

	//LtParam:
	//	"\"lt\"" ":" (STRING | NUMBER);
	public LtParamElements getLtParamAccess() {
		return (pLtParam != null) ? pLtParam : (pLtParam = new LtParamElements());
	}
	
	public ParserRule getLtParamRule() {
		return getLtParamAccess().getRule();
	}

	//LteParam:
	//	"\"lte\"" ":" (STRING | NUMBER);
	public LteParamElements getLteParamAccess() {
		return (pLteParam != null) ? pLteParam : (pLteParam = new LteParamElements());
	}
	
	public ParserRule getLteParamRule() {
		return getLteParamAccess().getRule();
	}

	//TypeParam:
	//	"\"type\"" ":" ("\"indexed\"" | "\"memory\"");
	public TypeParamElements getTypeParamAccess() {
		return (pTypeParam != null) ? pTypeParam : (pTypeParam = new TypeParamElements());
	}
	
	public ParserRule getTypeParamRule() {
		return getTypeParamAccess().getRule();
	}

	//SlopParam:
	//	"\"slop\"" ":" INT;
	public SlopParamElements getSlopParamAccess() {
		return (pSlopParam != null) ? pSlopParam : (pSlopParam = new SlopParamElements());
	}
	
	public ParserRule getSlopParamRule() {
		return getSlopParamAccess().getRule();
	}

	//FieldParam:
	//	"\"field\"" ":" STRING;
	public FieldParamElements getFieldParamAccess() {
		return (pFieldParam != null) ? pFieldParam : (pFieldParam = new FieldParamElements());
	}
	
	public ParserRule getFieldParamRule() {
		return getFieldParamAccess().getRule();
	}

	//FieldsParam:
	//	"\"fields\"" ":" "[" STRING ("," STRING)* "]";
	public FieldsParamElements getFieldsParamAccess() {
		return (pFieldsParam != null) ? pFieldsParam : (pFieldsParam = new FieldsParamElements());
	}
	
	public ParserRule getFieldsParamRule() {
		return getFieldsParamAccess().getRule();
	}

	//DefaultFieldParam:
	//	"\"default_field\"" ":" STRING;
	public DefaultFieldParamElements getDefaultFieldParamAccess() {
		return (pDefaultFieldParam != null) ? pDefaultFieldParam : (pDefaultFieldParam = new DefaultFieldParamElements());
	}
	
	public ParserRule getDefaultFieldParamRule() {
		return getDefaultFieldParamAccess().getRule();
	}

	//DefaultOperatorParam:
	//	"\"default_operator\"" ":" AND_OR;
	public DefaultOperatorParamElements getDefaultOperatorParamAccess() {
		return (pDefaultOperatorParam != null) ? pDefaultOperatorParam : (pDefaultOperatorParam = new DefaultOperatorParamElements());
	}
	
	public ParserRule getDefaultOperatorParamRule() {
		return getDefaultOperatorParamAccess().getRule();
	}

	//AllowLeadingWildcardParam:
	//	"\"allow_leading_wildcard\"" ":" BOOLEAN;
	public AllowLeadingWildcardParamElements getAllowLeadingWildcardParamAccess() {
		return (pAllowLeadingWildcardParam != null) ? pAllowLeadingWildcardParam : (pAllowLeadingWildcardParam = new AllowLeadingWildcardParamElements());
	}
	
	public ParserRule getAllowLeadingWildcardParamRule() {
		return getAllowLeadingWildcardParamAccess().getRule();
	}

	//LowercaseExpandedTermsParam:
	//	"\"lowercase_expanded_terms\"" ":" BOOLEAN;
	public LowercaseExpandedTermsParamElements getLowercaseExpandedTermsParamAccess() {
		return (pLowercaseExpandedTermsParam != null) ? pLowercaseExpandedTermsParam : (pLowercaseExpandedTermsParam = new LowercaseExpandedTermsParamElements());
	}
	
	public ParserRule getLowercaseExpandedTermsParamRule() {
		return getLowercaseExpandedTermsParamAccess().getRule();
	}

	//EnablePositionIncrementsParam:
	//	"\"enable_position_increments\"" ":" BOOLEAN;
	public EnablePositionIncrementsParamElements getEnablePositionIncrementsParamAccess() {
		return (pEnablePositionIncrementsParam != null) ? pEnablePositionIncrementsParam : (pEnablePositionIncrementsParam = new EnablePositionIncrementsParamElements());
	}
	
	public ParserRule getEnablePositionIncrementsParamRule() {
		return getEnablePositionIncrementsParamAccess().getRule();
	}

	//FuzzyMaxExpansionsParam:
	//	"\"fuzzy_max_expansions\"" ":" INT;
	public FuzzyMaxExpansionsParamElements getFuzzyMaxExpansionsParamAccess() {
		return (pFuzzyMaxExpansionsParam != null) ? pFuzzyMaxExpansionsParam : (pFuzzyMaxExpansionsParam = new FuzzyMaxExpansionsParamElements());
	}
	
	public ParserRule getFuzzyMaxExpansionsParamRule() {
		return getFuzzyMaxExpansionsParamAccess().getRule();
	}

	//FuzzyPrefixLengthParam:
	//	"\"fuzzy_prefix_length\"" ":" INT;
	public FuzzyPrefixLengthParamElements getFuzzyPrefixLengthParamAccess() {
		return (pFuzzyPrefixLengthParam != null) ? pFuzzyPrefixLengthParam : (pFuzzyPrefixLengthParam = new FuzzyPrefixLengthParamElements());
	}
	
	public ParserRule getFuzzyPrefixLengthParamRule() {
		return getFuzzyPrefixLengthParamAccess().getRule();
	}

	//PhraseSlopParam:
	//	"\"phrase_slop\"" ":" INT;
	public PhraseSlopParamElements getPhraseSlopParamAccess() {
		return (pPhraseSlopParam != null) ? pPhraseSlopParam : (pPhraseSlopParam = new PhraseSlopParamElements());
	}
	
	public ParserRule getPhraseSlopParamRule() {
		return getPhraseSlopParamAccess().getRule();
	}

	//AnalyzeWildcardParam:
	//	"\"analyze_wildcard\"" ":" BOOLEAN;
	public AnalyzeWildcardParamElements getAnalyzeWildcardParamAccess() {
		return (pAnalyzeWildcardParam != null) ? pAnalyzeWildcardParam : (pAnalyzeWildcardParam = new AnalyzeWildcardParamElements());
	}
	
	public ParserRule getAnalyzeWildcardParamRule() {
		return getAnalyzeWildcardParamAccess().getRule();
	}

	//AutoGeneratePhraseQueriesParam:
	//	"\"auto_generate_phrase_queries\"" ":" BOOLEAN;
	public AutoGeneratePhraseQueriesParamElements getAutoGeneratePhraseQueriesParamAccess() {
		return (pAutoGeneratePhraseQueriesParam != null) ? pAutoGeneratePhraseQueriesParam : (pAutoGeneratePhraseQueriesParam = new AutoGeneratePhraseQueriesParamElements());
	}
	
	public ParserRule getAutoGeneratePhraseQueriesParamRule() {
		return getAutoGeneratePhraseQueriesParamAccess().getRule();
	}

	//LenientParam:
	//	"\"lenient\"" ":" BOOLEAN;
	public LenientParamElements getLenientParamAccess() {
		return (pLenientParam != null) ? pLenientParam : (pLenientParam = new LenientParamElements());
	}
	
	public ParserRule getLenientParamRule() {
		return getLenientParamAccess().getRule();
	}

	//LocaleParam:
	//	"\"locale\"" ":" STRING;
	public LocaleParamElements getLocaleParamAccess() {
		return (pLocaleParam != null) ? pLocaleParam : (pLocaleParam = new LocaleParamElements());
	}
	
	public ParserRule getLocaleParamRule() {
		return getLocaleParamAccess().getRule();
	}

	//IgnoreTfParam:
	//	"\"ignore_tf\"" ":" BOOLEAN;
	public IgnoreTfParamElements getIgnoreTfParamAccess() {
		return (pIgnoreTfParam != null) ? pIgnoreTfParam : (pIgnoreTfParam = new IgnoreTfParamElements());
	}
	
	public ParserRule getIgnoreTfParamRule() {
		return getIgnoreTfParamAccess().getRule();
	}

	//MaxQueryTermsParam:
	//	"\"max_query_terms\"" ":" INT;
	public MaxQueryTermsParamElements getMaxQueryTermsParamAccess() {
		return (pMaxQueryTermsParam != null) ? pMaxQueryTermsParam : (pMaxQueryTermsParam = new MaxQueryTermsParamElements());
	}
	
	public ParserRule getMaxQueryTermsParamRule() {
		return getMaxQueryTermsParamAccess().getRule();
	}

	//FuzzinessParam:
	//	"\"fuzziness\"" ":" NUMBER;
	public FuzzinessParamElements getFuzzinessParamAccess() {
		return (pFuzzinessParam != null) ? pFuzzinessParam : (pFuzzinessParam = new FuzzinessParamElements());
	}
	
	public ParserRule getFuzzinessParamRule() {
		return getFuzzinessParamAccess().getRule();
	}

	//PrefixLengthParam:
	//	"\"prefix_length\"" ":" INT;
	public PrefixLengthParamElements getPrefixLengthParamAccess() {
		return (pPrefixLengthParam != null) ? pPrefixLengthParam : (pPrefixLengthParam = new PrefixLengthParamElements());
	}
	
	public ParserRule getPrefixLengthParamRule() {
		return getPrefixLengthParamAccess().getRule();
	}

	//MaxExpansionsParam:
	//	"\"max_expansions\"" ":" INT;
	public MaxExpansionsParamElements getMaxExpansionsParamAccess() {
		return (pMaxExpansionsParam != null) ? pMaxExpansionsParam : (pMaxExpansionsParam = new MaxExpansionsParamElements());
	}
	
	public ParserRule getMaxExpansionsParamRule() {
		return getMaxExpansionsParamAccess().getRule();
	}

	//ScoreModeParam:
	//	"\"score_mode\"" ":" SCORE_MODES;
	public ScoreModeParamElements getScoreModeParamAccess() {
		return (pScoreModeParam != null) ? pScoreModeParam : (pScoreModeParam = new ScoreModeParamElements());
	}
	
	public ParserRule getScoreModeParamRule() {
		return getScoreModeParamAccess().getRule();
	}

	//ScoreParam:
	//	"\"score\"" ":" SCORE_MODES;
	public ScoreParamElements getScoreParamAccess() {
		return (pScoreParam != null) ? pScoreParam : (pScoreParam = new ScoreParamElements());
	}
	
	public ParserRule getScoreParamRule() {
		return getScoreParamAccess().getRule();
	}

	//IndicesParam:
	//	"\"indices\"" ":" "[" INT ("," INT)* "]";
	public IndicesParamElements getIndicesParamAccess() {
		return (pIndicesParam != null) ? pIndicesParam : (pIndicesParam = new IndicesParamElements());
	}
	
	public ParserRule getIndicesParamRule() {
		return getIndicesParamAccess().getRule();
	}

	//IndexParam:
	//	"\"index\"" ":" STRING;
	public IndexParamElements getIndexParamAccess() {
		return (pIndexParam != null) ? pIndexParam : (pIndexParam = new IndexParamElements());
	}
	
	public ParserRule getIndexParamRule() {
		return getIndexParamAccess().getRule();
	}

	//LikeTextParam:
	//	"\"like_text\"" ":" likeQuery=STRING;
	public LikeTextParamElements getLikeTextParamAccess() {
		return (pLikeTextParam != null) ? pLikeTextParam : (pLikeTextParam = new LikeTextParamElements());
	}
	
	public ParserRule getLikeTextParamRule() {
		return getLikeTextParamAccess().getRule();
	}

	//EndParam:
	//	"\"end\"" ":" INT;
	public EndParamElements getEndParamAccess() {
		return (pEndParam != null) ? pEndParam : (pEndParam = new EndParamElements());
	}
	
	public ParserRule getEndParamRule() {
		return getEndParamAccess().getRule();
	}

	//InOrderParam:
	//	"\"in_order\"" ":" BOOLEAN;
	public InOrderParamElements getInOrderParamAccess() {
		return (pInOrderParam != null) ? pInOrderParam : (pInOrderParam = new InOrderParamElements());
	}
	
	public ParserRule getInOrderParamRule() {
		return getInOrderParamAccess().getRule();
	}

	//CollectPayloadsParam:
	//	"\"collect_payloads\"" ":" BOOLEAN;
	public CollectPayloadsParamElements getCollectPayloadsParamAccess() {
		return (pCollectPayloadsParam != null) ? pCollectPayloadsParam : (pCollectPayloadsParam = new CollectPayloadsParamElements());
	}
	
	public ParserRule getCollectPayloadsParamRule() {
		return getCollectPayloadsParamAccess().getRule();
	}

	//FactorParam:
	//	"\"factor\"" ":" INT;
	public FactorParamElements getFactorParamAccess() {
		return (pFactorParam != null) ? pFactorParam : (pFactorParam = new FactorParamElements());
	}
	
	public ParserRule getFactorParamRule() {
		return getFactorParamAccess().getRule();
	}

	//IncrementalFactorParam:
	//	"\"incremental_factor\"" ":" INT;
	public IncrementalFactorParamElements getIncrementalFactorParamAccess() {
		return (pIncrementalFactorParam != null) ? pIncrementalFactorParam : (pIncrementalFactorParam = new IncrementalFactorParamElements());
	}
	
	public ParserRule getIncrementalFactorParamRule() {
		return getIncrementalFactorParamAccess().getRule();
	}

	//CacheParam:
	//	"\"_cache\"" ":" BOOLEAN;
	public CacheParamElements getCacheParamAccess() {
		return (pCacheParam != null) ? pCacheParam : (pCacheParam = new CacheParamElements());
	}
	
	public ParserRule getCacheParamRule() {
		return getCacheParamAccess().getRule();
	}

	//DistanceTypeParam:
	//	"\"distance_type\"" ":" ("\"arc\"" | "\"sloppy_arc\"" | "\"plane\"");
	public DistanceTypeParamElements getDistanceTypeParamAccess() {
		return (pDistanceTypeParam != null) ? pDistanceTypeParam : (pDistanceTypeParam = new DistanceTypeParamElements());
	}
	
	public ParserRule getDistanceTypeParamRule() {
		return getDistanceTypeParamAccess().getRule();
	}

	//OptimizeBboxParam:
	//	"\"optimize_bbox\"" ":" ("\"memory\"" | "\"indexed\"" | "\"none\"");
	public OptimizeBboxParamElements getOptimizeBboxParamAccess() {
		return (pOptimizeBboxParam != null) ? pOptimizeBboxParam : (pOptimizeBboxParam = new OptimizeBboxParamElements());
	}
	
	public ParserRule getOptimizeBboxParamRule() {
		return getOptimizeBboxParamAccess().getRule();
	}

	//// Queries:
	//MatchQuery:
	//	"\"match\"" ":" (ShortMatchQueryObject | MatchQueryObject);
	public MatchQueryElements getMatchQueryAccess() {
		return (pMatchQuery != null) ? pMatchQuery : (pMatchQuery = new MatchQueryElements());
	}
	
	public ParserRule getMatchQueryRule() {
		return getMatchQueryAccess().getRule();
	}

	//ShortMatchQueryObject:
	//	"{" fieldName=STRING ":" query=STRING "}";
	public ShortMatchQueryObjectElements getShortMatchQueryObjectAccess() {
		return (pShortMatchQueryObject != null) ? pShortMatchQueryObject : (pShortMatchQueryObject = new ShortMatchQueryObjectElements());
	}
	
	public ParserRule getShortMatchQueryObjectRule() {
		return getShortMatchQueryObjectAccess().getRule();
	}

	//MatchQueryObject:
	//	"{" fieldName=STRING ":" parameters=MatchQueryParametersObject "}";
	public MatchQueryObjectElements getMatchQueryObjectAccess() {
		return (pMatchQueryObject != null) ? pMatchQueryObject : (pMatchQueryObject = new MatchQueryObjectElements());
	}
	
	public ParserRule getMatchQueryObjectRule() {
		return getMatchQueryObjectAccess().getRule();
	}

	//MatchQueryParametersObject:
	//	"{" "\"query\"" ":" query=STRING ("," params+=MatchQueryParameter ("," params+=MatchQueryParameter)*)? "}";
	public MatchQueryParametersObjectElements getMatchQueryParametersObjectAccess() {
		return (pMatchQueryParametersObject != null) ? pMatchQueryParametersObject : (pMatchQueryParametersObject = new MatchQueryParametersObjectElements());
	}
	
	public ParserRule getMatchQueryParametersObjectRule() {
		return getMatchQueryParametersObjectAccess().getRule();
	}

	//MatchQueryParameter:
	//	OperatorParam | ZeroTermsQueryParam | CutoffFrequenceParam | AnalyzerParam | BoostParam | SlopParam;
	public MatchQueryParameterElements getMatchQueryParameterAccess() {
		return (pMatchQueryParameter != null) ? pMatchQueryParameter : (pMatchQueryParameter = new MatchQueryParameterElements());
	}
	
	public ParserRule getMatchQueryParameterRule() {
		return getMatchQueryParameterAccess().getRule();
	}

	//MultiMatchQuery:
	//	"\"multi_match\"" ":" MultiMatchQueryObject;
	public MultiMatchQueryElements getMultiMatchQueryAccess() {
		return (pMultiMatchQuery != null) ? pMultiMatchQuery : (pMultiMatchQuery = new MultiMatchQueryElements());
	}
	
	public ParserRule getMultiMatchQueryRule() {
		return getMultiMatchQueryAccess().getRule();
	}

	//MultiMatchQueryObject:
	//	"{" "\"query\"" ":" STRING "," fields=FieldsParam ("," params+=MultiMatchQueryParameter (","
	//	params+=MultiMatchQueryParameter)*)? "}";
	public MultiMatchQueryObjectElements getMultiMatchQueryObjectAccess() {
		return (pMultiMatchQueryObject != null) ? pMultiMatchQueryObject : (pMultiMatchQueryObject = new MultiMatchQueryObjectElements());
	}
	
	public ParserRule getMultiMatchQueryObjectRule() {
		return getMultiMatchQueryObjectAccess().getRule();
	}

	//MultiMatchQueryParameter:
	//	MultiMatchTypeParam | TieBreakerParam;
	public MultiMatchQueryParameterElements getMultiMatchQueryParameterAccess() {
		return (pMultiMatchQueryParameter != null) ? pMultiMatchQueryParameter : (pMultiMatchQueryParameter = new MultiMatchQueryParameterElements());
	}
	
	public ParserRule getMultiMatchQueryParameterRule() {
		return getMultiMatchQueryParameterAccess().getRule();
	}

	//MultiMatchTypeParam:
	//	"\"type\"" ":" MultiMatchTypeParamTypes;
	public MultiMatchTypeParamElements getMultiMatchTypeParamAccess() {
		return (pMultiMatchTypeParam != null) ? pMultiMatchTypeParam : (pMultiMatchTypeParam = new MultiMatchTypeParamElements());
	}
	
	public ParserRule getMultiMatchTypeParamRule() {
		return getMultiMatchTypeParamAccess().getRule();
	}

	//MultiMatchTypeParamTypes:
	//	"\"best_fields\"" | "\"most_fields\"" | "\"cross_fields\"" | "\"phrase\"" | "\"phrase_prefix\"";
	public MultiMatchTypeParamTypesElements getMultiMatchTypeParamTypesAccess() {
		return (pMultiMatchTypeParamTypes != null) ? pMultiMatchTypeParamTypes : (pMultiMatchTypeParamTypes = new MultiMatchTypeParamTypesElements());
	}
	
	public ParserRule getMultiMatchTypeParamTypesRule() {
		return getMultiMatchTypeParamTypesAccess().getRule();
	}

	//BoolQuery:
	//	"\"bool\"" ":" BoolQueryObject;
	public BoolQueryElements getBoolQueryAccess() {
		return (pBoolQuery != null) ? pBoolQuery : (pBoolQuery = new BoolQueryElements());
	}
	
	public ParserRule getBoolQueryRule() {
		return getBoolQueryAccess().getRule();
	}

	//BoolQueryObject:
	//	"{" clause+=BoolClause ("," clause+=BoolClause)* ("," params+=BoolQueryParameter ("," params+=BoolQueryParameter)*)?
	//	"}";
	public BoolQueryObjectElements getBoolQueryObjectAccess() {
		return (pBoolQueryObject != null) ? pBoolQueryObject : (pBoolQueryObject = new BoolQueryObjectElements());
	}
	
	public ParserRule getBoolQueryObjectRule() {
		return getBoolQueryObjectAccess().getRule();
	}

	//BoolQueryParameter:
	//	MinimumShouldMatchParam | BoostParam;
	public BoolQueryParameterElements getBoolQueryParameterAccess() {
		return (pBoolQueryParameter != null) ? pBoolQueryParameter : (pBoolQueryParameter = new BoolQueryParameterElements());
	}
	
	public ParserRule getBoolQueryParameterRule() {
		return getBoolQueryParameterAccess().getRule();
	}

	//BoolClause:
	//	BOOL_CLAUSE ":" query=QueryObject;
	public BoolClauseElements getBoolClauseAccess() {
		return (pBoolClause != null) ? pBoolClause : (pBoolClause = new BoolClauseElements());
	}
	
	public ParserRule getBoolClauseRule() {
		return getBoolClauseAccess().getRule();
	}

	//CommonQuery:
	//	"\"common\"" ":" CommonQueryObject;
	public CommonQueryElements getCommonQueryAccess() {
		return (pCommonQuery != null) ? pCommonQuery : (pCommonQuery = new CommonQueryElements());
	}
	
	public ParserRule getCommonQueryRule() {
		return getCommonQueryAccess().getRule();
	}

	//CommonQueryObject:
	//	"{" fieldName=STRING ":" parameters=CommonQueryParametersObject "}";
	public CommonQueryObjectElements getCommonQueryObjectAccess() {
		return (pCommonQueryObject != null) ? pCommonQueryObject : (pCommonQueryObject = new CommonQueryObjectElements());
	}
	
	public ParserRule getCommonQueryObjectRule() {
		return getCommonQueryObjectAccess().getRule();
	}

	//CommonQueryParametersObject:
	//	"{" "\"query\"" ":" query=STRING ("," params+=CommonQueryParameter ("," params+=CommonQueryParameter)*)? "}";
	public CommonQueryParametersObjectElements getCommonQueryParametersObjectAccess() {
		return (pCommonQueryParametersObject != null) ? pCommonQueryParametersObject : (pCommonQueryParametersObject = new CommonQueryParametersObjectElements());
	}
	
	public ParserRule getCommonQueryParametersObjectRule() {
		return getCommonQueryParametersObjectAccess().getRule();
	}

	//CommonQueryParameter:
	//	CutoffFrequenceParam | LowFreqOperatorParam | MinimumShouldMatchParam | BoostParam | AnalyzerParam |
	//	DisableCoordParam;
	public CommonQueryParameterElements getCommonQueryParameterAccess() {
		return (pCommonQueryParameter != null) ? pCommonQueryParameter : (pCommonQueryParameter = new CommonQueryParameterElements());
	}
	
	public ParserRule getCommonQueryParameterRule() {
		return getCommonQueryParameterAccess().getRule();
	}

	//ConstantScoreQuery:
	//	"\"constant_score\"" ":" ConstantScoreQueryObject;
	public ConstantScoreQueryElements getConstantScoreQueryAccess() {
		return (pConstantScoreQuery != null) ? pConstantScoreQuery : (pConstantScoreQuery = new ConstantScoreQueryElements());
	}
	
	public ParserRule getConstantScoreQueryRule() {
		return getConstantScoreQueryAccess().getRule();
	}

	//ConstantScoreQueryObject:
	//	"{" (Query | Filter) "," BoostParam "}";
	public ConstantScoreQueryObjectElements getConstantScoreQueryObjectAccess() {
		return (pConstantScoreQueryObject != null) ? pConstantScoreQueryObject : (pConstantScoreQueryObject = new ConstantScoreQueryObjectElements());
	}
	
	public ParserRule getConstantScoreQueryObjectRule() {
		return getConstantScoreQueryObjectAccess().getRule();
	}

	//DisMaxQuery:
	//	"\"dis_max\"" ":" DisMaxQueryObject;
	public DisMaxQueryElements getDisMaxQueryAccess() {
		return (pDisMaxQuery != null) ? pDisMaxQuery : (pDisMaxQuery = new DisMaxQueryElements());
	}
	
	public ParserRule getDisMaxQueryRule() {
		return getDisMaxQueryAccess().getRule();
	}

	//DisMaxQueryObject:
	//	"{" TieBreakerParam "," BoostParam "," "\"queries\"" ":" "[" query+=QueryObject ("," query+=QueryObject)* "]" "}";
	public DisMaxQueryObjectElements getDisMaxQueryObjectAccess() {
		return (pDisMaxQueryObject != null) ? pDisMaxQueryObject : (pDisMaxQueryObject = new DisMaxQueryObjectElements());
	}
	
	public ParserRule getDisMaxQueryObjectRule() {
		return getDisMaxQueryObjectAccess().getRule();
	}

	//FilteredQuery:
	//	"\"filtered\"" ":" FilteredQueryObject;
	public FilteredQueryElements getFilteredQueryAccess() {
		return (pFilteredQuery != null) ? pFilteredQuery : (pFilteredQuery = new FilteredQueryElements());
	}
	
	public ParserRule getFilteredQueryRule() {
		return getFilteredQueryAccess().getRule();
	}

	//FilteredQueryObject:
	//	"{" query=Query "," filter=Filter "}";
	public FilteredQueryObjectElements getFilteredQueryObjectAccess() {
		return (pFilteredQueryObject != null) ? pFilteredQueryObject : (pFilteredQueryObject = new FilteredQueryObjectElements());
	}
	
	public ParserRule getFilteredQueryObjectRule() {
		return getFilteredQueryObjectAccess().getRule();
	}

	//FuzzyLikeThisQuery:
	//	("\"flt\"" | "\"fuzzy_like_this\"") ":" FuzzyLikeThisQueryObject;
	public FuzzyLikeThisQueryElements getFuzzyLikeThisQueryAccess() {
		return (pFuzzyLikeThisQuery != null) ? pFuzzyLikeThisQuery : (pFuzzyLikeThisQuery = new FuzzyLikeThisQueryElements());
	}
	
	public ParserRule getFuzzyLikeThisQueryRule() {
		return getFuzzyLikeThisQueryAccess().getRule();
	}

	//FuzzyLikeThisQueryObject:
	//	"{" FieldsParam "," LikeTextParam ("," params+=FuzzyLikeThisQueryParameter (","
	//	params+=FuzzyLikeThisQueryParameter)*)? "}";
	public FuzzyLikeThisQueryObjectElements getFuzzyLikeThisQueryObjectAccess() {
		return (pFuzzyLikeThisQueryObject != null) ? pFuzzyLikeThisQueryObject : (pFuzzyLikeThisQueryObject = new FuzzyLikeThisQueryObjectElements());
	}
	
	public ParserRule getFuzzyLikeThisQueryObjectRule() {
		return getFuzzyLikeThisQueryObjectAccess().getRule();
	}

	//FuzzyLikeThisQueryParameter:
	//	IgnoreTfParam | MaxQueryTermsParam | FuzzinessParam | PrefixLengthParam | BoostParam | AnalyzerParam;
	public FuzzyLikeThisQueryParameterElements getFuzzyLikeThisQueryParameterAccess() {
		return (pFuzzyLikeThisQueryParameter != null) ? pFuzzyLikeThisQueryParameter : (pFuzzyLikeThisQueryParameter = new FuzzyLikeThisQueryParameterElements());
	}
	
	public ParserRule getFuzzyLikeThisQueryParameterRule() {
		return getFuzzyLikeThisQueryParameterAccess().getRule();
	}

	//FuzzyLikeThisFieldQuery:
	//	("\"flt_field\"" | "\"fuzzy_like_this_field\"") ":" FuzzyLikeThisFieldQueryObject;
	public FuzzyLikeThisFieldQueryElements getFuzzyLikeThisFieldQueryAccess() {
		return (pFuzzyLikeThisFieldQuery != null) ? pFuzzyLikeThisFieldQuery : (pFuzzyLikeThisFieldQuery = new FuzzyLikeThisFieldQueryElements());
	}
	
	public ParserRule getFuzzyLikeThisFieldQueryRule() {
		return getFuzzyLikeThisFieldQueryAccess().getRule();
	}

	//FuzzyLikeThisFieldQueryObject:
	//	"{" fieldName=STRING ":" "{" "\"like_text\"" ":" STRING ("," params+=FuzzyLikeThisFieldQueryParameter (","
	//	params+=FuzzyLikeThisFieldQueryParameter)*)? "}" "}";
	public FuzzyLikeThisFieldQueryObjectElements getFuzzyLikeThisFieldQueryObjectAccess() {
		return (pFuzzyLikeThisFieldQueryObject != null) ? pFuzzyLikeThisFieldQueryObject : (pFuzzyLikeThisFieldQueryObject = new FuzzyLikeThisFieldQueryObjectElements());
	}
	
	public ParserRule getFuzzyLikeThisFieldQueryObjectRule() {
		return getFuzzyLikeThisFieldQueryObjectAccess().getRule();
	}

	//FuzzyLikeThisFieldQueryParameter:
	//	IgnoreTfParam | MaxQueryTermsParam | FuzzinessParam | PrefixLengthParam | BoostParam | AnalyzerParam;
	public FuzzyLikeThisFieldQueryParameterElements getFuzzyLikeThisFieldQueryParameterAccess() {
		return (pFuzzyLikeThisFieldQueryParameter != null) ? pFuzzyLikeThisFieldQueryParameter : (pFuzzyLikeThisFieldQueryParameter = new FuzzyLikeThisFieldQueryParameterElements());
	}
	
	public ParserRule getFuzzyLikeThisFieldQueryParameterRule() {
		return getFuzzyLikeThisFieldQueryParameterAccess().getRule();
	}

	//FuzzyQuery:
	//	"\"fuzzy\"" ":" (SimpleFuzzyQueryObject | FuzzyQueryObject);
	public FuzzyQueryElements getFuzzyQueryAccess() {
		return (pFuzzyQuery != null) ? pFuzzyQuery : (pFuzzyQuery = new FuzzyQueryElements());
	}
	
	public ParserRule getFuzzyQueryRule() {
		return getFuzzyQueryAccess().getRule();
	}

	//SimpleFuzzyQueryObject:
	//	"{" field=STRING ":" query=STRING "}";
	public SimpleFuzzyQueryObjectElements getSimpleFuzzyQueryObjectAccess() {
		return (pSimpleFuzzyQueryObject != null) ? pSimpleFuzzyQueryObject : (pSimpleFuzzyQueryObject = new SimpleFuzzyQueryObjectElements());
	}
	
	public ParserRule getSimpleFuzzyQueryObjectRule() {
		return getSimpleFuzzyQueryObjectAccess().getRule();
	}

	//FuzzyQueryObject:
	//	"{" field=STRING ":" q=FuzzyQueryObjectParameters "}";
	public FuzzyQueryObjectElements getFuzzyQueryObjectAccess() {
		return (pFuzzyQueryObject != null) ? pFuzzyQueryObject : (pFuzzyQueryObject = new FuzzyQueryObjectElements());
	}
	
	public ParserRule getFuzzyQueryObjectRule() {
		return getFuzzyQueryObjectAccess().getRule();
	}

	//FuzzyQueryObjectParameters:
	//	"\"value\"" ":" value=STRING ("," params+=FuzzyQueryParameter ("," params+=FuzzyQueryParameter)*)?;
	public FuzzyQueryObjectParametersElements getFuzzyQueryObjectParametersAccess() {
		return (pFuzzyQueryObjectParameters != null) ? pFuzzyQueryObjectParameters : (pFuzzyQueryObjectParameters = new FuzzyQueryObjectParametersElements());
	}
	
	public ParserRule getFuzzyQueryObjectParametersRule() {
		return getFuzzyQueryObjectParametersAccess().getRule();
	}

	//FuzzyQueryParameter:
	//	BoostParam | FuzzinessParam | PrefixLengthParam | MaxExpansionsParam;
	public FuzzyQueryParameterElements getFuzzyQueryParameterAccess() {
		return (pFuzzyQueryParameter != null) ? pFuzzyQueryParameter : (pFuzzyQueryParameter = new FuzzyQueryParameterElements());
	}
	
	public ParserRule getFuzzyQueryParameterRule() {
		return getFuzzyQueryParameterAccess().getRule();
	}

	//GeoshapeQuery:
	//	"\"geo_shape\"" ":" GeoshapeQueryObject;
	public GeoshapeQueryElements getGeoshapeQueryAccess() {
		return (pGeoshapeQuery != null) ? pGeoshapeQuery : (pGeoshapeQuery = new GeoshapeQueryElements());
	}
	
	public ParserRule getGeoshapeQueryRule() {
		return getGeoshapeQueryAccess().getRule();
	}

	//GeoshapeQueryObject:
	//	"{" fieldName=STRING ":" shape=ShapeObject "}";
	public GeoshapeQueryObjectElements getGeoshapeQueryObjectAccess() {
		return (pGeoshapeQueryObject != null) ? pGeoshapeQueryObject : (pGeoshapeQueryObject = new GeoshapeQueryObjectElements());
	}
	
	public ParserRule getGeoshapeQueryObjectRule() {
		return getGeoshapeQueryObjectAccess().getRule();
	}

	//HasChildQuery:
	//	"\"has_child\"" ":" HasChildQueryObject;
	public HasChildQueryElements getHasChildQueryAccess() {
		return (pHasChildQuery != null) ? pHasChildQuery : (pHasChildQuery = new HasChildQueryElements());
	}
	
	public ParserRule getHasChildQueryRule() {
		return getHasChildQueryAccess().getRule();
	}

	//HasChildQueryObject:
	//	"{" "\"type\"" ":" childType=STRING ("," ScoreModeParam)? "," (query=Query | filter=Filter) "}";
	public HasChildQueryObjectElements getHasChildQueryObjectAccess() {
		return (pHasChildQueryObject != null) ? pHasChildQueryObject : (pHasChildQueryObject = new HasChildQueryObjectElements());
	}
	
	public ParserRule getHasChildQueryObjectRule() {
		return getHasChildQueryObjectAccess().getRule();
	}

	//HasParentQuery:
	//	"\"has_parent\"" ":" HasParentQueryObject;
	public HasParentQueryElements getHasParentQueryAccess() {
		return (pHasParentQuery != null) ? pHasParentQuery : (pHasParentQuery = new HasParentQueryElements());
	}
	
	public ParserRule getHasParentQueryRule() {
		return getHasParentQueryAccess().getRule();
	}

	//HasParentQueryObject:
	//	"{" "\"type\"" ":" parentType=STRING ("," ScoreModeParam)? "," (query=Query | filter=Filter) "}";
	public HasParentQueryObjectElements getHasParentQueryObjectAccess() {
		return (pHasParentQueryObject != null) ? pHasParentQueryObject : (pHasParentQueryObject = new HasParentQueryObjectElements());
	}
	
	public ParserRule getHasParentQueryObjectRule() {
		return getHasParentQueryObjectAccess().getRule();
	}

	//IdsQuery:
	//	"\"ids\"" ":" IdsObject;
	public IdsQueryElements getIdsQueryAccess() {
		return (pIdsQuery != null) ? pIdsQuery : (pIdsQuery = new IdsQueryElements());
	}
	
	public ParserRule getIdsQueryRule() {
		return getIdsQueryAccess().getRule();
	}

	//IdsObject:
	//	"{" ("\"type\"" ":" (STRING | "[" STRING ("," STRING) "]") ",")? "\"values\"" ":" "[" STRING ("," STRING)* "]" "}";
	public IdsObjectElements getIdsObjectAccess() {
		return (pIdsObject != null) ? pIdsObject : (pIdsObject = new IdsObjectElements());
	}
	
	public ParserRule getIdsObjectRule() {
		return getIdsObjectAccess().getRule();
	}

	//IndicesQuery:
	//	"\"indices\"" ":" IndicesQueryObject;
	public IndicesQueryElements getIndicesQueryAccess() {
		return (pIndicesQuery != null) ? pIndicesQuery : (pIndicesQuery = new IndicesQueryElements());
	}
	
	public ParserRule getIndicesQueryRule() {
		return getIndicesQueryAccess().getRule();
	}

	//IndicesQueryObject:
	//	"{" (IndicesParam | IndexParam) query=Query ("," "\"no_match_query\"" ":" noMatchQuery=QueryObject)? "}";
	public IndicesQueryObjectElements getIndicesQueryObjectAccess() {
		return (pIndicesQueryObject != null) ? pIndicesQueryObject : (pIndicesQueryObject = new IndicesQueryObjectElements());
	}
	
	public ParserRule getIndicesQueryObjectRule() {
		return getIndicesQueryObjectAccess().getRule();
	}

	//MatchAllQuery:
	//	"\"match_all\"" ":" MatchAllQueryObject;
	public MatchAllQueryElements getMatchAllQueryAccess() {
		return (pMatchAllQuery != null) ? pMatchAllQuery : (pMatchAllQuery = new MatchAllQueryElements());
	}
	
	public ParserRule getMatchAllQueryRule() {
		return getMatchAllQueryAccess().getRule();
	}

	//MatchAllQueryObject:
	//	"{" BoostParam? "}";
	public MatchAllQueryObjectElements getMatchAllQueryObjectAccess() {
		return (pMatchAllQueryObject != null) ? pMatchAllQueryObject : (pMatchAllQueryObject = new MatchAllQueryObjectElements());
	}
	
	public ParserRule getMatchAllQueryObjectRule() {
		return getMatchAllQueryObjectAccess().getRule();
	}

	//MoreLikeThisQuery:
	//	("\"mlt\"" | "\"more_like_this\"") ":" MoreLikeThisQueryObject;
	public MoreLikeThisQueryElements getMoreLikeThisQueryAccess() {
		return (pMoreLikeThisQuery != null) ? pMoreLikeThisQuery : (pMoreLikeThisQuery = new MoreLikeThisQueryElements());
	}
	
	public ParserRule getMoreLikeThisQueryRule() {
		return getMoreLikeThisQueryAccess().getRule();
	}

	//MoreLikeThisQueryObject:
	//	"{" FieldsParam "," LikeTextParam ("," params+=MoreLikeThisQueryParameter ("," params+=MoreLikeThisQueryParameter)*)?
	//	"}";
	public MoreLikeThisQueryObjectElements getMoreLikeThisQueryObjectAccess() {
		return (pMoreLikeThisQueryObject != null) ? pMoreLikeThisQueryObject : (pMoreLikeThisQueryObject = new MoreLikeThisQueryObjectElements());
	}
	
	public ParserRule getMoreLikeThisQueryObjectRule() {
		return getMoreLikeThisQueryObjectAccess().getRule();
	}

	//MoreLikeThisQueryParameter:
	//	PercentTermsToMatchParam | StopWordsParam | MinDocFreqParam | MaxDocFreqParam | MinWordLengthParam |
	//	MaxWordLengthParam | BoostTermsParam | BoostParam | AnalyzerParam | MinTermFreqParam | MaxQueryTermsParam;
	public MoreLikeThisQueryParameterElements getMoreLikeThisQueryParameterAccess() {
		return (pMoreLikeThisQueryParameter != null) ? pMoreLikeThisQueryParameter : (pMoreLikeThisQueryParameter = new MoreLikeThisQueryParameterElements());
	}
	
	public ParserRule getMoreLikeThisQueryParameterRule() {
		return getMoreLikeThisQueryParameterAccess().getRule();
	}

	//MoreLikeThisFieldQuery:
	//	("\"mlt_field\"" | "\"more_like_this_field\"") ":" MoreLikeThisQueryObject;
	public MoreLikeThisFieldQueryElements getMoreLikeThisFieldQueryAccess() {
		return (pMoreLikeThisFieldQuery != null) ? pMoreLikeThisFieldQuery : (pMoreLikeThisFieldQuery = new MoreLikeThisFieldQueryElements());
	}
	
	public ParserRule getMoreLikeThisFieldQueryRule() {
		return getMoreLikeThisFieldQueryAccess().getRule();
	}

	//MoreLikeThisFieldQueryObject:
	//	"{" fieldName=STRING ":" "{" query=LikeTextParam ("," params+=MoreLikeThisFieldQueryParameter (","
	//	params+=MoreLikeThisFieldQueryParameter)*)? "}" "}";
	public MoreLikeThisFieldQueryObjectElements getMoreLikeThisFieldQueryObjectAccess() {
		return (pMoreLikeThisFieldQueryObject != null) ? pMoreLikeThisFieldQueryObject : (pMoreLikeThisFieldQueryObject = new MoreLikeThisFieldQueryObjectElements());
	}
	
	public ParserRule getMoreLikeThisFieldQueryObjectRule() {
		return getMoreLikeThisFieldQueryObjectAccess().getRule();
	}

	//MoreLikeThisFieldQueryParameter:
	//	PercentTermsToMatchParam | StopWordsParam | MinDocFreqParam | MaxDocFreqParam | MinWordLengthParam |
	//	MaxWordLengthParam | BoostTermsParam | BoostParam | AnalyzerParam | MinTermFreqParam | MaxQueryTermsParam;
	public MoreLikeThisFieldQueryParameterElements getMoreLikeThisFieldQueryParameterAccess() {
		return (pMoreLikeThisFieldQueryParameter != null) ? pMoreLikeThisFieldQueryParameter : (pMoreLikeThisFieldQueryParameter = new MoreLikeThisFieldQueryParameterElements());
	}
	
	public ParserRule getMoreLikeThisFieldQueryParameterRule() {
		return getMoreLikeThisFieldQueryParameterAccess().getRule();
	}

	//NestedQuery:
	//	"\"nested\"" ":" NestedQueryObject;
	public NestedQueryElements getNestedQueryAccess() {
		return (pNestedQuery != null) ? pNestedQuery : (pNestedQuery = new NestedQueryElements());
	}
	
	public ParserRule getNestedQueryRule() {
		return getNestedQueryAccess().getRule();
	}

	//NestedQueryObject:
	//	"{" "\"path\"" ":" STRING "," ScoreModeParam "," Query "}";
	public NestedQueryObjectElements getNestedQueryObjectAccess() {
		return (pNestedQueryObject != null) ? pNestedQueryObject : (pNestedQueryObject = new NestedQueryObjectElements());
	}
	
	public ParserRule getNestedQueryObjectRule() {
		return getNestedQueryObjectAccess().getRule();
	}

	//PrefixQuery:
	//	"\"prefix\"" ":" (SimplePrefixQueryObject | PrefixQueryObject);
	public PrefixQueryElements getPrefixQueryAccess() {
		return (pPrefixQuery != null) ? pPrefixQuery : (pPrefixQuery = new PrefixQueryElements());
	}
	
	public ParserRule getPrefixQueryRule() {
		return getPrefixQueryAccess().getRule();
	}

	//SimplePrefixQueryObject:
	//	"{" fieldName=STRING ":" prefix=STRING "}";
	public SimplePrefixQueryObjectElements getSimplePrefixQueryObjectAccess() {
		return (pSimplePrefixQueryObject != null) ? pSimplePrefixQueryObject : (pSimplePrefixQueryObject = new SimplePrefixQueryObjectElements());
	}
	
	public ParserRule getSimplePrefixQueryObjectRule() {
		return getSimplePrefixQueryObjectAccess().getRule();
	}

	//PrefixQueryObject:
	//	"{" fieldName=STRING ":" prefix=PrefixQueryParameterObject "}";
	public PrefixQueryObjectElements getPrefixQueryObjectAccess() {
		return (pPrefixQueryObject != null) ? pPrefixQueryObject : (pPrefixQueryObject = new PrefixQueryObjectElements());
	}
	
	public ParserRule getPrefixQueryObjectRule() {
		return getPrefixQueryObjectAccess().getRule();
	}

	//PrefixQueryParameterObject:
	//	"{" ("\"value\"" | "\"prefix\"") ":" value=STRING "," BoostParam "}";
	public PrefixQueryParameterObjectElements getPrefixQueryParameterObjectAccess() {
		return (pPrefixQueryParameterObject != null) ? pPrefixQueryParameterObject : (pPrefixQueryParameterObject = new PrefixQueryParameterObjectElements());
	}
	
	public ParserRule getPrefixQueryParameterObjectRule() {
		return getPrefixQueryParameterObjectAccess().getRule();
	}

	//QueryStringQuery:
	//	"\"query_string\"" ":" QueryStringQueryObject;
	public QueryStringQueryElements getQueryStringQueryAccess() {
		return (pQueryStringQuery != null) ? pQueryStringQuery : (pQueryStringQuery = new QueryStringQueryElements());
	}
	
	public ParserRule getQueryStringQueryRule() {
		return getQueryStringQueryAccess().getRule();
	}

	//QueryStringQueryObject:
	//	"{" "\"query\"" ":" query=STRING ("," params+=QueryStringQueryParameter ("," params+=QueryStringQueryParameter)*)?
	//	"}";
	public QueryStringQueryObjectElements getQueryStringQueryObjectAccess() {
		return (pQueryStringQueryObject != null) ? pQueryStringQueryObject : (pQueryStringQueryObject = new QueryStringQueryObjectElements());
	}
	
	public ParserRule getQueryStringQueryObjectRule() {
		return getQueryStringQueryObjectAccess().getRule();
	}

	//QueryStringQueryParameter:
	//	FieldsParam | DefaultFieldParam | DefaultOperatorParam | AnalyzerParam | AllowLeadingWildcardParam |
	//	LowercaseExpandedTermsParam EnablePositionIncrementsParam | FuzzyMaxExpansionsParam | FuzzinessParam |
	//	FuzzyPrefixLengthParam | PhraseSlopParam | BoostParam | AnalyzeWildcardParam | AutoGeneratePhraseQueriesParam |
	//	MinimumShouldMatchParam | LenientParam | LocaleParam;
	public QueryStringQueryParameterElements getQueryStringQueryParameterAccess() {
		return (pQueryStringQueryParameter != null) ? pQueryStringQueryParameter : (pQueryStringQueryParameter = new QueryStringQueryParameterElements());
	}
	
	public ParserRule getQueryStringQueryParameterRule() {
		return getQueryStringQueryParameterAccess().getRule();
	}

	//SimpleQueryStringQuery:
	//	"\"simple_query_string\"" ":" SimpleQueryStringQueryObject;
	public SimpleQueryStringQueryElements getSimpleQueryStringQueryAccess() {
		return (pSimpleQueryStringQuery != null) ? pSimpleQueryStringQuery : (pSimpleQueryStringQuery = new SimpleQueryStringQueryElements());
	}
	
	public ParserRule getSimpleQueryStringQueryRule() {
		return getSimpleQueryStringQueryAccess().getRule();
	}

	//SimpleQueryStringQueryObject:
	//	"{" "\"query\"" ":" query=STRING ("," params+=SimpleQueryStringQueryParameter (","
	//	params+=SimpleQueryStringQueryParameter)*)? "}";
	public SimpleQueryStringQueryObjectElements getSimpleQueryStringQueryObjectAccess() {
		return (pSimpleQueryStringQueryObject != null) ? pSimpleQueryStringQueryObject : (pSimpleQueryStringQueryObject = new SimpleQueryStringQueryObjectElements());
	}
	
	public ParserRule getSimpleQueryStringQueryObjectRule() {
		return getSimpleQueryStringQueryObjectAccess().getRule();
	}

	//SimpleQueryStringQueryParameter:
	//	FieldsParam | DefaultOperatorParam | AnalyzerParam | FlagsParam | LowercaseExpandedTermsParam | LocaleParam;
	public SimpleQueryStringQueryParameterElements getSimpleQueryStringQueryParameterAccess() {
		return (pSimpleQueryStringQueryParameter != null) ? pSimpleQueryStringQueryParameter : (pSimpleQueryStringQueryParameter = new SimpleQueryStringQueryParameterElements());
	}
	
	public ParserRule getSimpleQueryStringQueryParameterRule() {
		return getSimpleQueryStringQueryParameterAccess().getRule();
	}

	//RangeQuery:
	//	"\"range\"" ":" RangeQueryObject;
	public RangeQueryElements getRangeQueryAccess() {
		return (pRangeQuery != null) ? pRangeQuery : (pRangeQuery = new RangeQueryElements());
	}
	
	public ParserRule getRangeQueryRule() {
		return getRangeQueryAccess().getRule();
	}

	//RangeQueryObject:
	//	"{" fieldName=STRING ":" params=RangeQueryParametersObject "}";
	public RangeQueryObjectElements getRangeQueryObjectAccess() {
		return (pRangeQueryObject != null) ? pRangeQueryObject : (pRangeQueryObject = new RangeQueryObjectElements());
	}
	
	public ParserRule getRangeQueryObjectRule() {
		return getRangeQueryObjectAccess().getRule();
	}

	//RangeQueryParametersObject:
	//	"{" params+=RangeQueryParameter ("," params+=RangeQueryParameter)* "}";
	public RangeQueryParametersObjectElements getRangeQueryParametersObjectAccess() {
		return (pRangeQueryParametersObject != null) ? pRangeQueryParametersObject : (pRangeQueryParametersObject = new RangeQueryParametersObjectElements());
	}
	
	public ParserRule getRangeQueryParametersObjectRule() {
		return getRangeQueryParametersObjectAccess().getRule();
	}

	//RangeQueryParameter:
	//	GteParam | GtParam | LtParam | LteParam | BoostParam;
	public RangeQueryParameterElements getRangeQueryParameterAccess() {
		return (pRangeQueryParameter != null) ? pRangeQueryParameter : (pRangeQueryParameter = new RangeQueryParameterElements());
	}
	
	public ParserRule getRangeQueryParameterRule() {
		return getRangeQueryParameterAccess().getRule();
	}

	//RegexpQuery:
	//	"\"regexp\"" ":" RegexpQueryObject;
	public RegexpQueryElements getRegexpQueryAccess() {
		return (pRegexpQuery != null) ? pRegexpQuery : (pRegexpQuery = new RegexpQueryElements());
	}
	
	public ParserRule getRegexpQueryRule() {
		return getRegexpQueryAccess().getRule();
	}

	//RegexpQueryObject:
	//	"{" fieldName=STRING ":" (regexp=STRING | params=RegexpQueryParameterObject) "}";
	public RegexpQueryObjectElements getRegexpQueryObjectAccess() {
		return (pRegexpQueryObject != null) ? pRegexpQueryObject : (pRegexpQueryObject = new RegexpQueryObjectElements());
	}
	
	public ParserRule getRegexpQueryObjectRule() {
		return getRegexpQueryObjectAccess().getRule();
	}

	//RegexpQueryParameterObject:
	//	"{" "\"value\"" ":" regex=STRING ("," params+=RegexpQueryParameter ("," params+=RegexpQueryParameter)*)? "}";
	public RegexpQueryParameterObjectElements getRegexpQueryParameterObjectAccess() {
		return (pRegexpQueryParameterObject != null) ? pRegexpQueryParameterObject : (pRegexpQueryParameterObject = new RegexpQueryParameterObjectElements());
	}
	
	public ParserRule getRegexpQueryParameterObjectRule() {
		return getRegexpQueryParameterObjectAccess().getRule();
	}

	//RegexpQueryParameter:
	//	BoostParam | FlagsParam;
	public RegexpQueryParameterElements getRegexpQueryParameterAccess() {
		return (pRegexpQueryParameter != null) ? pRegexpQueryParameter : (pRegexpQueryParameter = new RegexpQueryParameterElements());
	}
	
	public ParserRule getRegexpQueryParameterRule() {
		return getRegexpQueryParameterAccess().getRule();
	}

	//SpanFirstQuery:
	//	"\"span_first\"" ":" SpanFirstQueryObject;
	public SpanFirstQueryElements getSpanFirstQueryAccess() {
		return (pSpanFirstQuery != null) ? pSpanFirstQuery : (pSpanFirstQuery = new SpanFirstQueryElements());
	}
	
	public ParserRule getSpanFirstQueryRule() {
		return getSpanFirstQueryAccess().getRule();
	}

	//SpanFirstQueryObject:
	//	"{" "\"match\"" ":" "{" subquery=SpanQuery "}" "," EndParam "}";
	public SpanFirstQueryObjectElements getSpanFirstQueryObjectAccess() {
		return (pSpanFirstQueryObject != null) ? pSpanFirstQueryObject : (pSpanFirstQueryObject = new SpanFirstQueryObjectElements());
	}
	
	public ParserRule getSpanFirstQueryObjectRule() {
		return getSpanFirstQueryObjectAccess().getRule();
	}

	//SpanMultiQuery:
	//	"\"span_multi\"" ":" SpanMultiQueryObject;
	public SpanMultiQueryElements getSpanMultiQueryAccess() {
		return (pSpanMultiQuery != null) ? pSpanMultiQuery : (pSpanMultiQuery = new SpanMultiQueryElements());
	}
	
	public ParserRule getSpanMultiQueryRule() {
		return getSpanMultiQueryAccess().getRule();
	}

	//SpanMultiQueryObject:
	//	"{" "\"match\"" ":" MultiTermQuery "}";
	public SpanMultiQueryObjectElements getSpanMultiQueryObjectAccess() {
		return (pSpanMultiQueryObject != null) ? pSpanMultiQueryObject : (pSpanMultiQueryObject = new SpanMultiQueryObjectElements());
	}
	
	public ParserRule getSpanMultiQueryObjectRule() {
		return getSpanMultiQueryObjectAccess().getRule();
	}

	//SpanNearQuery:
	//	"\"span_near\"" ":" SpanNearQueryObject;
	public SpanNearQueryElements getSpanNearQueryAccess() {
		return (pSpanNearQuery != null) ? pSpanNearQuery : (pSpanNearQuery = new SpanNearQueryElements());
	}
	
	public ParserRule getSpanNearQueryRule() {
		return getSpanNearQueryAccess().getRule();
	}

	//SpanNearQueryObject:
	//	"{" "\"clauses\"" ":" "[" clauses+=SpanQuery ("," clauses+=SpanQuery)* "]" "," slop=SlopParam "," inOrder=InOrderParam
	//	"," collectPayloads=CollectPayloadsParam "}";
	public SpanNearQueryObjectElements getSpanNearQueryObjectAccess() {
		return (pSpanNearQueryObject != null) ? pSpanNearQueryObject : (pSpanNearQueryObject = new SpanNearQueryObjectElements());
	}
	
	public ParserRule getSpanNearQueryObjectRule() {
		return getSpanNearQueryObjectAccess().getRule();
	}

	//SpanNotQuery:
	//	"\"span_not\"" ":" SpanNotQueryObject;
	public SpanNotQueryElements getSpanNotQueryAccess() {
		return (pSpanNotQuery != null) ? pSpanNotQuery : (pSpanNotQuery = new SpanNotQueryElements());
	}
	
	public ParserRule getSpanNotQueryRule() {
		return getSpanNotQueryAccess().getRule();
	}

	//SpanNotQueryObject:
	//	"{" "\"include\"" ":" "{" includeQuery=SpanQuery "}" "," "\"exclude\"" ":" "{" excludeQuery=SpanQuery "}" "}";
	public SpanNotQueryObjectElements getSpanNotQueryObjectAccess() {
		return (pSpanNotQueryObject != null) ? pSpanNotQueryObject : (pSpanNotQueryObject = new SpanNotQueryObjectElements());
	}
	
	public ParserRule getSpanNotQueryObjectRule() {
		return getSpanNotQueryObjectAccess().getRule();
	}

	//SpanOrQuery:
	//	"\"span_or\"" ":" SpanOrQueryObject;
	public SpanOrQueryElements getSpanOrQueryAccess() {
		return (pSpanOrQuery != null) ? pSpanOrQuery : (pSpanOrQuery = new SpanOrQueryElements());
	}
	
	public ParserRule getSpanOrQueryRule() {
		return getSpanOrQueryAccess().getRule();
	}

	//SpanOrQueryObject:
	//	"{" "\"clauses\"" ":" "[" clauses+=SpanQuery ("," clauses+=SpanQuery)* "]" "}";
	public SpanOrQueryObjectElements getSpanOrQueryObjectAccess() {
		return (pSpanOrQueryObject != null) ? pSpanOrQueryObject : (pSpanOrQueryObject = new SpanOrQueryObjectElements());
	}
	
	public ParserRule getSpanOrQueryObjectRule() {
		return getSpanOrQueryObjectAccess().getRule();
	}

	//SpanTermQuery:
	//	"\"span_term\"" ":" SpanTermQueryObject;
	public SpanTermQueryElements getSpanTermQueryAccess() {
		return (pSpanTermQuery != null) ? pSpanTermQuery : (pSpanTermQuery = new SpanTermQueryElements());
	}
	
	public ParserRule getSpanTermQueryRule() {
		return getSpanTermQueryAccess().getRule();
	}

	//SpanTermQueryObject:
	//	"{" fieldName=STRING ":" params=TermQueryObject "}";
	public SpanTermQueryObjectElements getSpanTermQueryObjectAccess() {
		return (pSpanTermQueryObject != null) ? pSpanTermQueryObject : (pSpanTermQueryObject = new SpanTermQueryObjectElements());
	}
	
	public ParserRule getSpanTermQueryObjectRule() {
		return getSpanTermQueryObjectAccess().getRule();
	}

	//TermQuery:
	//	"\"term\"" ":" TermQueryObject;
	public TermQueryElements getTermQueryAccess() {
		return (pTermQuery != null) ? pTermQuery : (pTermQuery = new TermQueryElements());
	}
	
	public ParserRule getTermQueryRule() {
		return getTermQueryAccess().getRule();
	}

	//TermQueryObject:
	//	"{" fieldName=STRING ":" (term=SimpleTerm | params=TermQueryParametersObject) "}";
	public TermQueryObjectElements getTermQueryObjectAccess() {
		return (pTermQueryObject != null) ? pTermQueryObject : (pTermQueryObject = new TermQueryObjectElements());
	}
	
	public ParserRule getTermQueryObjectRule() {
		return getTermQueryObjectAccess().getRule();
	}

	//SimpleTerm:
	//	STRING;
	public SimpleTermElements getSimpleTermAccess() {
		return (pSimpleTerm != null) ? pSimpleTerm : (pSimpleTerm = new SimpleTermElements());
	}
	
	public ParserRule getSimpleTermRule() {
		return getSimpleTermAccess().getRule();
	}

	//TermQueryParametersObject:
	//	"{" ("\"term\"" | "\"value\"") ":" term=STRING "," boost=BoostParam "}";
	public TermQueryParametersObjectElements getTermQueryParametersObjectAccess() {
		return (pTermQueryParametersObject != null) ? pTermQueryParametersObject : (pTermQueryParametersObject = new TermQueryParametersObjectElements());
	}
	
	public ParserRule getTermQueryParametersObjectRule() {
		return getTermQueryParametersObjectAccess().getRule();
	}

	//TermsQuery:
	//	("\"in\"" | "\"terms\"") ":" TermsQueryObject;
	public TermsQueryElements getTermsQueryAccess() {
		return (pTermsQuery != null) ? pTermsQuery : (pTermsQuery = new TermsQueryElements());
	}
	
	public ParserRule getTermsQueryRule() {
		return getTermsQueryAccess().getRule();
	}

	//TermsQueryObject:
	//	"{" fieldName=STRING ":" "[" terms+=STRING ("," terms+=STRING)* "]" "," MinimumShouldMatchParam "}";
	public TermsQueryObjectElements getTermsQueryObjectAccess() {
		return (pTermsQueryObject != null) ? pTermsQueryObject : (pTermsQueryObject = new TermsQueryObjectElements());
	}
	
	public ParserRule getTermsQueryObjectRule() {
		return getTermsQueryObjectAccess().getRule();
	}

	//TopChildrenQuery:
	//	"\"top_children\"" ":" TopChildrenQueryObject;
	public TopChildrenQueryElements getTopChildrenQueryAccess() {
		return (pTopChildrenQuery != null) ? pTopChildrenQuery : (pTopChildrenQuery = new TopChildrenQueryElements());
	}
	
	public ParserRule getTopChildrenQueryRule() {
		return getTopChildrenQueryAccess().getRule();
	}

	//TopChildrenQueryObject:
	//	"{" "\"type\"" ":" childType=STRING "," query=Query ("," params+=TopChildrenQueryParameter (","
	//	params+=TopChildrenQueryParameter)*)? "}";
	public TopChildrenQueryObjectElements getTopChildrenQueryObjectAccess() {
		return (pTopChildrenQueryObject != null) ? pTopChildrenQueryObject : (pTopChildrenQueryObject = new TopChildrenQueryObjectElements());
	}
	
	public ParserRule getTopChildrenQueryObjectRule() {
		return getTopChildrenQueryObjectAccess().getRule();
	}

	//TopChildrenQueryParameter:
	//	ScoreParam | FactorParam | IncrementalFactorParam;
	public TopChildrenQueryParameterElements getTopChildrenQueryParameterAccess() {
		return (pTopChildrenQueryParameter != null) ? pTopChildrenQueryParameter : (pTopChildrenQueryParameter = new TopChildrenQueryParameterElements());
	}
	
	public ParserRule getTopChildrenQueryParameterRule() {
		return getTopChildrenQueryParameterAccess().getRule();
	}

	//WildcardQuery:
	//	"\"wildcard\"" ":" TermQueryObject;
	public WildcardQueryElements getWildcardQueryAccess() {
		return (pWildcardQuery != null) ? pWildcardQuery : (pWildcardQuery = new WildcardQueryElements());
	}
	
	public ParserRule getWildcardQueryRule() {
		return getWildcardQueryAccess().getRule();
	}

	//// Filters:
	//AndFilter:
	//	"\"and\"" ":" (SimpleAndFilterArray | AndFilterObject);
	public AndFilterElements getAndFilterAccess() {
		return (pAndFilter != null) ? pAndFilter : (pAndFilter = new AndFilterElements());
	}
	
	public ParserRule getAndFilterRule() {
		return getAndFilterAccess().getRule();
	}

	//SimpleAndFilterArray:
	//	"[" "{" subFilter+=Filter ("," subFilter+=Filter)* "}" "]";
	public SimpleAndFilterArrayElements getSimpleAndFilterArrayAccess() {
		return (pSimpleAndFilterArray != null) ? pSimpleAndFilterArray : (pSimpleAndFilterArray = new SimpleAndFilterArrayElements());
	}
	
	public ParserRule getSimpleAndFilterArrayRule() {
		return getSimpleAndFilterArrayAccess().getRule();
	}

	//AndFilterObject:
	//	"{" "\"filters\"" ":" SimpleAndFilterArray ("," CacheParam)? "}";
	public AndFilterObjectElements getAndFilterObjectAccess() {
		return (pAndFilterObject != null) ? pAndFilterObject : (pAndFilterObject = new AndFilterObjectElements());
	}
	
	public ParserRule getAndFilterObjectRule() {
		return getAndFilterObjectAccess().getRule();
	}

	//BoolFilter:
	//	"\"bool\"" ":" BoolFilterObject;
	public BoolFilterElements getBoolFilterAccess() {
		return (pBoolFilter != null) ? pBoolFilter : (pBoolFilter = new BoolFilterElements());
	}
	
	public ParserRule getBoolFilterRule() {
		return getBoolFilterAccess().getRule();
	}

	//BoolFilterObject:
	//	"{" clause+=BoolFilterClause ("," clause+=BoolFilterClause)* ("," CacheParam)? "}";
	public BoolFilterObjectElements getBoolFilterObjectAccess() {
		return (pBoolFilterObject != null) ? pBoolFilterObject : (pBoolFilterObject = new BoolFilterObjectElements());
	}
	
	public ParserRule getBoolFilterObjectRule() {
		return getBoolFilterObjectAccess().getRule();
	}

	//BoolFilterClause:
	//	BOOL_CLAUSE ":" filter=FilterObject;
	public BoolFilterClauseElements getBoolFilterClauseAccess() {
		return (pBoolFilterClause != null) ? pBoolFilterClause : (pBoolFilterClause = new BoolFilterClauseElements());
	}
	
	public ParserRule getBoolFilterClauseRule() {
		return getBoolFilterClauseAccess().getRule();
	}

	//ExistsFilter:
	//	"\"exists\"" ":" ExistsFilterObject;
	public ExistsFilterElements getExistsFilterAccess() {
		return (pExistsFilter != null) ? pExistsFilter : (pExistsFilter = new ExistsFilterElements());
	}
	
	public ParserRule getExistsFilterRule() {
		return getExistsFilterAccess().getRule();
	}

	//ExistsFilterObject:
	//	"{" FieldParam "}";
	public ExistsFilterObjectElements getExistsFilterObjectAccess() {
		return (pExistsFilterObject != null) ? pExistsFilterObject : (pExistsFilterObject = new ExistsFilterObjectElements());
	}
	
	public ParserRule getExistsFilterObjectRule() {
		return getExistsFilterObjectAccess().getRule();
	}

	//GeoBoundingBoxFilter:
	//	"\"geo_bounding_box\"" ":" GeoBoundingBoxFilterObject;
	public GeoBoundingBoxFilterElements getGeoBoundingBoxFilterAccess() {
		return (pGeoBoundingBoxFilter != null) ? pGeoBoundingBoxFilter : (pGeoBoundingBoxFilter = new GeoBoundingBoxFilterElements());
	}
	
	public ParserRule getGeoBoundingBoxFilterRule() {
		return getGeoBoundingBoxFilterAccess().getRule();
	}

	//GeoBoundingBoxFilterObject:
	//	"{" fieldName=STRING ":" boundingBox=BoundingBoxObject ("," TypeParam)? ("," CacheParam)? "}";
	public GeoBoundingBoxFilterObjectElements getGeoBoundingBoxFilterObjectAccess() {
		return (pGeoBoundingBoxFilterObject != null) ? pGeoBoundingBoxFilterObject : (pGeoBoundingBoxFilterObject = new GeoBoundingBoxFilterObjectElements());
	}
	
	public ParserRule getGeoBoundingBoxFilterObjectRule() {
		return getGeoBoundingBoxFilterObjectAccess().getRule();
	}

	//GeoDistanceFilter:
	//	"\"geo_distance\"" ":" GeoDistanceFilterObject;
	public GeoDistanceFilterElements getGeoDistanceFilterAccess() {
		return (pGeoDistanceFilter != null) ? pGeoDistanceFilter : (pGeoDistanceFilter = new GeoDistanceFilterElements());
	}
	
	public ParserRule getGeoDistanceFilterRule() {
		return getGeoDistanceFilterAccess().getRule();
	}

	//GeoDistanceFilterObject:
	//	"{" "\"distance\"" ":" distance=STRING "," fieldName=STRING ":" point=LatLon ("," params+=GeoDistanceFilterParameter
	//	("," params+=GeoDistanceFilterParameter)*)? "}";
	public GeoDistanceFilterObjectElements getGeoDistanceFilterObjectAccess() {
		return (pGeoDistanceFilterObject != null) ? pGeoDistanceFilterObject : (pGeoDistanceFilterObject = new GeoDistanceFilterObjectElements());
	}
	
	public ParserRule getGeoDistanceFilterObjectRule() {
		return getGeoDistanceFilterObjectAccess().getRule();
	}

	//GeoDistanceFilterParameter:
	//	DistanceTypeParam | OptimizeBboxParam;
	public GeoDistanceFilterParameterElements getGeoDistanceFilterParameterAccess() {
		return (pGeoDistanceFilterParameter != null) ? pGeoDistanceFilterParameter : (pGeoDistanceFilterParameter = new GeoDistanceFilterParameterElements());
	}
	
	public ParserRule getGeoDistanceFilterParameterRule() {
		return getGeoDistanceFilterParameterAccess().getRule();
	}

	//GeoDistanceRangeFilter:
	//	"\"geo_distance_range\"" ":" GeoDistanceRangeFilterObject;
	public GeoDistanceRangeFilterElements getGeoDistanceRangeFilterAccess() {
		return (pGeoDistanceRangeFilter != null) ? pGeoDistanceRangeFilter : (pGeoDistanceRangeFilter = new GeoDistanceRangeFilterElements());
	}
	
	public ParserRule getGeoDistanceRangeFilterRule() {
		return getGeoDistanceRangeFilterAccess().getRule();
	}

	//GeoDistanceRangeFilterObject:
	//	"{" "\"from\"" ":" from=STRING "," "\"to\"" ":" to=STRING "," fieldName=STRING ":" point=LatLon "}";
	public GeoDistanceRangeFilterObjectElements getGeoDistanceRangeFilterObjectAccess() {
		return (pGeoDistanceRangeFilterObject != null) ? pGeoDistanceRangeFilterObject : (pGeoDistanceRangeFilterObject = new GeoDistanceRangeFilterObjectElements());
	}
	
	public ParserRule getGeoDistanceRangeFilterObjectRule() {
		return getGeoDistanceRangeFilterObjectAccess().getRule();
	}

	//GeoPolygonFilter:
	//	"\"geo_polygon\"" ":" GeoPolygonFilterObject;
	public GeoPolygonFilterElements getGeoPolygonFilterAccess() {
		return (pGeoPolygonFilter != null) ? pGeoPolygonFilter : (pGeoPolygonFilter = new GeoPolygonFilterElements());
	}
	
	public ParserRule getGeoPolygonFilterRule() {
		return getGeoPolygonFilterAccess().getRule();
	}

	//GeoPolygonFilterObject:
	//	"{" fieldName=STRING ":" "{" "\"points\"" ":" polygon=Polygon "}" ("," CacheParam)? "}";
	public GeoPolygonFilterObjectElements getGeoPolygonFilterObjectAccess() {
		return (pGeoPolygonFilterObject != null) ? pGeoPolygonFilterObject : (pGeoPolygonFilterObject = new GeoPolygonFilterObjectElements());
	}
	
	public ParserRule getGeoPolygonFilterObjectRule() {
		return getGeoPolygonFilterObjectAccess().getRule();
	}

	//GeoShapeFilter:
	//	"\"geo_shape\"" ":" GeoShapeFilterObject;
	public GeoShapeFilterElements getGeoShapeFilterAccess() {
		return (pGeoShapeFilter != null) ? pGeoShapeFilter : (pGeoShapeFilter = new GeoShapeFilterElements());
	}
	
	public ParserRule getGeoShapeFilterRule() {
		return getGeoShapeFilterAccess().getRule();
	}

	//GeoShapeFilterObject:
	//	"{" fieldName=STRING ":" shape=GeoShapeObject ("," CacheParam)? "}";
	public GeoShapeFilterObjectElements getGeoShapeFilterObjectAccess() {
		return (pGeoShapeFilterObject != null) ? pGeoShapeFilterObject : (pGeoShapeFilterObject = new GeoShapeFilterObjectElements());
	}
	
	public ParserRule getGeoShapeFilterObjectRule() {
		return getGeoShapeFilterObjectAccess().getRule();
	}

	//GeohashCellFilter:
	//	"\"geohash_cell\"" ":" GeohashCellFilterObject;
	public GeohashCellFilterElements getGeohashCellFilterAccess() {
		return (pGeohashCellFilter != null) ? pGeohashCellFilter : (pGeohashCellFilter = new GeohashCellFilterElements());
	}
	
	public ParserRule getGeohashCellFilterRule() {
		return getGeohashCellFilterAccess().getRule();
	}

	//GeohashCellFilterObject:
	//	"{" "\"pin\"" ":" LatLon "," "\"precision\"" ":" (NUMBER | STRING) ("," "\"neighbors\"" ":" BOOLEAN)? "}";
	public GeohashCellFilterObjectElements getGeohashCellFilterObjectAccess() {
		return (pGeohashCellFilterObject != null) ? pGeohashCellFilterObject : (pGeohashCellFilterObject = new GeohashCellFilterObjectElements());
	}
	
	public ParserRule getGeohashCellFilterObjectRule() {
		return getGeohashCellFilterObjectAccess().getRule();
	}

	//HasChildFilter:
	//	"\"has_child\"" ":" HasChildFilterObject;
	public HasChildFilterElements getHasChildFilterAccess() {
		return (pHasChildFilter != null) ? pHasChildFilter : (pHasChildFilter = new HasChildFilterElements());
	}
	
	public ParserRule getHasChildFilterRule() {
		return getHasChildFilterAccess().getRule();
	}

	//HasChildFilterObject:
	//	"{" "\"\"type\"\"" ":" childType=STRING "," (query=Query | filter=Filter) "}";
	public HasChildFilterObjectElements getHasChildFilterObjectAccess() {
		return (pHasChildFilterObject != null) ? pHasChildFilterObject : (pHasChildFilterObject = new HasChildFilterObjectElements());
	}
	
	public ParserRule getHasChildFilterObjectRule() {
		return getHasChildFilterObjectAccess().getRule();
	}

	//HasParentFilter:
	//	"\"has_parent\"" ":" HasParentFilterObject;
	public HasParentFilterElements getHasParentFilterAccess() {
		return (pHasParentFilter != null) ? pHasParentFilter : (pHasParentFilter = new HasParentFilterElements());
	}
	
	public ParserRule getHasParentFilterRule() {
		return getHasParentFilterAccess().getRule();
	}

	//HasParentFilterObject:
	//	"{" ("\"type\"" | "\"parent_type\"") ":" parentType=STRING "," (query=Query | filter=Filter) "}";
	public HasParentFilterObjectElements getHasParentFilterObjectAccess() {
		return (pHasParentFilterObject != null) ? pHasParentFilterObject : (pHasParentFilterObject = new HasParentFilterObjectElements());
	}
	
	public ParserRule getHasParentFilterObjectRule() {
		return getHasParentFilterObjectAccess().getRule();
	}

	//IdsFilter:
	//	"\"ids\"" ":" IdsObject;
	public IdsFilterElements getIdsFilterAccess() {
		return (pIdsFilter != null) ? pIdsFilter : (pIdsFilter = new IdsFilterElements());
	}
	
	public ParserRule getIdsFilterRule() {
		return getIdsFilterAccess().getRule();
	}

	//IndicesFilter:
	//	"\"indices\"" ":" IndicesFilterObject;
	public IndicesFilterElements getIndicesFilterAccess() {
		return (pIndicesFilter != null) ? pIndicesFilter : (pIndicesFilter = new IndicesFilterElements());
	}
	
	public ParserRule getIndicesFilterRule() {
		return getIndicesFilterAccess().getRule();
	}

	//IndicesFilterObject:
	//	(IndicesParam | IndexParam) filter=Filter ("," "\"no_match_filter\"" ":" noMatchFilter=FilterObject)?;
	public IndicesFilterObjectElements getIndicesFilterObjectAccess() {
		return (pIndicesFilterObject != null) ? pIndicesFilterObject : (pIndicesFilterObject = new IndicesFilterObjectElements());
	}
	
	public ParserRule getIndicesFilterObjectRule() {
		return getIndicesFilterObjectAccess().getRule();
	}

	//LimitFilter:
	//	"\"limit\"" ":" LimitFilterObject;
	public LimitFilterElements getLimitFilterAccess() {
		return (pLimitFilter != null) ? pLimitFilter : (pLimitFilter = new LimitFilterElements());
	}
	
	public ParserRule getLimitFilterRule() {
		return getLimitFilterAccess().getRule();
	}

	//LimitFilterObject:
	//	"{" "\"value\"" ":" INT "}";
	public LimitFilterObjectElements getLimitFilterObjectAccess() {
		return (pLimitFilterObject != null) ? pLimitFilterObject : (pLimitFilterObject = new LimitFilterObjectElements());
	}
	
	public ParserRule getLimitFilterObjectRule() {
		return getLimitFilterObjectAccess().getRule();
	}

	//MatchAllFilter:
	//	"\"match_all\"" ":" MatchAllFilterObject;
	public MatchAllFilterElements getMatchAllFilterAccess() {
		return (pMatchAllFilter != null) ? pMatchAllFilter : (pMatchAllFilter = new MatchAllFilterElements());
	}
	
	public ParserRule getMatchAllFilterRule() {
		return getMatchAllFilterAccess().getRule();
	}

	//MatchAllFilterObject:
	//	"{" "}";
	public MatchAllFilterObjectElements getMatchAllFilterObjectAccess() {
		return (pMatchAllFilterObject != null) ? pMatchAllFilterObject : (pMatchAllFilterObject = new MatchAllFilterObjectElements());
	}
	
	public ParserRule getMatchAllFilterObjectRule() {
		return getMatchAllFilterObjectAccess().getRule();
	}

	//MissingFilter:
	//	"\"missing\"" ":" MissingFilterObject;
	public MissingFilterElements getMissingFilterAccess() {
		return (pMissingFilter != null) ? pMissingFilter : (pMissingFilter = new MissingFilterElements());
	}
	
	public ParserRule getMissingFilterRule() {
		return getMissingFilterAccess().getRule();
	}

	//MissingFilterObject:
	//	"{" FieldParam ("," ExistenceParam)? ("," NullValueParam)? "}";
	public MissingFilterObjectElements getMissingFilterObjectAccess() {
		return (pMissingFilterObject != null) ? pMissingFilterObject : (pMissingFilterObject = new MissingFilterObjectElements());
	}
	
	public ParserRule getMissingFilterObjectRule() {
		return getMissingFilterObjectAccess().getRule();
	}

	//NestedFilter:
	//	"\"nested\"" ":" NestedFilterObject;
	public NestedFilterElements getNestedFilterAccess() {
		return (pNestedFilter != null) ? pNestedFilter : (pNestedFilter = new NestedFilterElements());
	}
	
	public ParserRule getNestedFilterRule() {
		return getNestedFilterAccess().getRule();
	}

	//NestedFilterObject:
	//	"{" "\"\"path\"\"" ":" path=STRING "," filter=Filter ("," CacheParam)? "}";
	public NestedFilterObjectElements getNestedFilterObjectAccess() {
		return (pNestedFilterObject != null) ? pNestedFilterObject : (pNestedFilterObject = new NestedFilterObjectElements());
	}
	
	public ParserRule getNestedFilterObjectRule() {
		return getNestedFilterObjectAccess().getRule();
	}

	//NotFilter:
	//	"\"not\"" ":" NotFilterObject;
	public NotFilterElements getNotFilterAccess() {
		return (pNotFilter != null) ? pNotFilter : (pNotFilter = new NotFilterElements());
	}
	
	public ParserRule getNotFilterRule() {
		return getNotFilterAccess().getRule();
	}

	//NotFilterObject:
	//	"{" Query ("," CacheParam)? "}";
	public NotFilterObjectElements getNotFilterObjectAccess() {
		return (pNotFilterObject != null) ? pNotFilterObject : (pNotFilterObject = new NotFilterObjectElements());
	}
	
	public ParserRule getNotFilterObjectRule() {
		return getNotFilterObjectAccess().getRule();
	}

	//OrFilter:
	//	"\"or\"" ":" OrFilterArray;
	public OrFilterElements getOrFilterAccess() {
		return (pOrFilter != null) ? pOrFilter : (pOrFilter = new OrFilterElements());
	}
	
	public ParserRule getOrFilterRule() {
		return getOrFilterAccess().getRule();
	}

	//OrFilterArray:
	//	"[" subQuery+=QueryObject ("," subQuery+=QueryObject)* "]";
	public OrFilterArrayElements getOrFilterArrayAccess() {
		return (pOrFilterArray != null) ? pOrFilterArray : (pOrFilterArray = new OrFilterArrayElements());
	}
	
	public ParserRule getOrFilterArrayRule() {
		return getOrFilterArrayAccess().getRule();
	}

	//PrefixFilter:
	//	"\"prefix\"" ":" PrefixFilterObject;
	public PrefixFilterElements getPrefixFilterAccess() {
		return (pPrefixFilter != null) ? pPrefixFilter : (pPrefixFilter = new PrefixFilterElements());
	}
	
	public ParserRule getPrefixFilterRule() {
		return getPrefixFilterAccess().getRule();
	}

	//PrefixFilterObject:
	//	"{" fieldName=STRING ":" prefix=STRING ("," CacheParam)? "}";
	public PrefixFilterObjectElements getPrefixFilterObjectAccess() {
		return (pPrefixFilterObject != null) ? pPrefixFilterObject : (pPrefixFilterObject = new PrefixFilterObjectElements());
	}
	
	public ParserRule getPrefixFilterObjectRule() {
		return getPrefixFilterObjectAccess().getRule();
	}

	//QueryFilter:
	//	Query | FQuery;
	public QueryFilterElements getQueryFilterAccess() {
		return (pQueryFilter != null) ? pQueryFilter : (pQueryFilter = new QueryFilterElements());
	}
	
	public ParserRule getQueryFilterRule() {
		return getQueryFilterAccess().getRule();
	}

	//FQuery:
	//	"\"fquery\"" ":" QueryObject ("," CacheParam)?;
	public FQueryElements getFQueryAccess() {
		return (pFQuery != null) ? pFQuery : (pFQuery = new FQueryElements());
	}
	
	public ParserRule getFQueryRule() {
		return getFQueryAccess().getRule();
	}

	//RangeFilter:
	//	"\"range\"" ":" RangeFilterObject;
	public RangeFilterElements getRangeFilterAccess() {
		return (pRangeFilter != null) ? pRangeFilter : (pRangeFilter = new RangeFilterElements());
	}
	
	public ParserRule getRangeFilterRule() {
		return getRangeFilterAccess().getRule();
	}

	//RangeFilterObject:
	//	"{" fieldName=STRING ":" params=RangeQueryParametersObject ("," RangeFilterExecutionParam)? ("," CacheParam)? "}";
	public RangeFilterObjectElements getRangeFilterObjectAccess() {
		return (pRangeFilterObject != null) ? pRangeFilterObject : (pRangeFilterObject = new RangeFilterObjectElements());
	}
	
	public ParserRule getRangeFilterObjectRule() {
		return getRangeFilterObjectAccess().getRule();
	}

	//RangeFilterExecutionParam:
	//	"\"execution\"" ":" ("\"index\"" | "\"fielddata\"");
	public RangeFilterExecutionParamElements getRangeFilterExecutionParamAccess() {
		return (pRangeFilterExecutionParam != null) ? pRangeFilterExecutionParam : (pRangeFilterExecutionParam = new RangeFilterExecutionParamElements());
	}
	
	public ParserRule getRangeFilterExecutionParamRule() {
		return getRangeFilterExecutionParamAccess().getRule();
	}

	//RangeFilterParametersObject:
	//	"{" params+=RangeQueryParameter ("," params+=RangeQueryParameter)* "}";
	public RangeFilterParametersObjectElements getRangeFilterParametersObjectAccess() {
		return (pRangeFilterParametersObject != null) ? pRangeFilterParametersObject : (pRangeFilterParametersObject = new RangeFilterParametersObjectElements());
	}
	
	public ParserRule getRangeFilterParametersObjectRule() {
		return getRangeFilterParametersObjectAccess().getRule();
	}

	//RangeFilterParameter:
	//	GteParam | GtParam | LtParam | LteParam;
	public RangeFilterParameterElements getRangeFilterParameterAccess() {
		return (pRangeFilterParameter != null) ? pRangeFilterParameter : (pRangeFilterParameter = new RangeFilterParameterElements());
	}
	
	public ParserRule getRangeFilterParameterRule() {
		return getRangeFilterParameterAccess().getRule();
	}

	//RegexpFilter:
	//	"\"regexp\"" ":" RegexpFilterObject;
	public RegexpFilterElements getRegexpFilterAccess() {
		return (pRegexpFilter != null) ? pRegexpFilter : (pRegexpFilter = new RegexpFilterElements());
	}
	
	public ParserRule getRegexpFilterRule() {
		return getRegexpFilterAccess().getRule();
	}

	//RegexpFilterObject:
	//	"{" fieldName=STRING ":" (regexp=STRING | params=RegexpFilterParameterObject) "}";
	public RegexpFilterObjectElements getRegexpFilterObjectAccess() {
		return (pRegexpFilterObject != null) ? pRegexpFilterObject : (pRegexpFilterObject = new RegexpFilterObjectElements());
	}
	
	public ParserRule getRegexpFilterObjectRule() {
		return getRegexpFilterObjectAccess().getRule();
	}

	//RegexpFilterParameterObject:
	//	"{" "\"value\"" ":" regexp=STRING ("," params+=RegexpFilterParameter ("," params+=RegexpFilterParameter)*)? "}";
	public RegexpFilterParameterObjectElements getRegexpFilterParameterObjectAccess() {
		return (pRegexpFilterParameterObject != null) ? pRegexpFilterParameterObject : (pRegexpFilterParameterObject = new RegexpFilterParameterObjectElements());
	}
	
	public ParserRule getRegexpFilterParameterObjectRule() {
		return getRegexpFilterParameterObjectAccess().getRule();
	}

	//RegexpFilterParameter:
	//	BoostParam;
	public RegexpFilterParameterElements getRegexpFilterParameterAccess() {
		return (pRegexpFilterParameter != null) ? pRegexpFilterParameter : (pRegexpFilterParameter = new RegexpFilterParameterElements());
	}
	
	public ParserRule getRegexpFilterParameterRule() {
		return getRegexpFilterParameterAccess().getRule();
	}

	//ScriptFilter:
	//	"\"script\"" ":" ScriptFilterObject;
	public ScriptFilterElements getScriptFilterAccess() {
		return (pScriptFilter != null) ? pScriptFilter : (pScriptFilter = new ScriptFilterElements());
	}
	
	public ParserRule getScriptFilterRule() {
		return getScriptFilterAccess().getRule();
	}

	//ScriptFilterObject:
	//	"{" "\"script\"" ":" script=STRING ("," "\"params\"" ":" params=Object)? ("," CacheParam)? "}";
	public ScriptFilterObjectElements getScriptFilterObjectAccess() {
		return (pScriptFilterObject != null) ? pScriptFilterObject : (pScriptFilterObject = new ScriptFilterObjectElements());
	}
	
	public ParserRule getScriptFilterObjectRule() {
		return getScriptFilterObjectAccess().getRule();
	}

	//TermFilter:
	//	"\"term\"" ":" TermFilterObject;
	public TermFilterElements getTermFilterAccess() {
		return (pTermFilter != null) ? pTermFilter : (pTermFilter = new TermFilterElements());
	}
	
	public ParserRule getTermFilterRule() {
		return getTermFilterAccess().getRule();
	}

	//TermFilterObject:
	//	"{" fieldName=STRING ":" term=STRING ("," CacheParam)? "}";
	public TermFilterObjectElements getTermFilterObjectAccess() {
		return (pTermFilterObject != null) ? pTermFilterObject : (pTermFilterObject = new TermFilterObjectElements());
	}
	
	public ParserRule getTermFilterObjectRule() {
		return getTermFilterObjectAccess().getRule();
	}

	//TermsFilter:
	//	("\"in\"" | "\"terms\"") ":" TermsFilterObject;
	public TermsFilterElements getTermsFilterAccess() {
		return (pTermsFilter != null) ? pTermsFilter : (pTermsFilter = new TermsFilterElements());
	}
	
	public ParserRule getTermsFilterRule() {
		return getTermsFilterAccess().getRule();
	}

	//TermsFilterObject:
	//	"{" fieldName=STRING ":" "[" terms+=STRING ("," terms+=STRING)* "]" ("," TermsFilterExecutionParam)? "}";
	public TermsFilterObjectElements getTermsFilterObjectAccess() {
		return (pTermsFilterObject != null) ? pTermsFilterObject : (pTermsFilterObject = new TermsFilterObjectElements());
	}
	
	public ParserRule getTermsFilterObjectRule() {
		return getTermsFilterObjectAccess().getRule();
	}

	//TermsFilterExecutionParam:
	//	"\"execution\"" ":" ("\"plain\"" | "\"fielddata\"" | "\"bool\"" | "\"and\"" | "\"or\"" | "\"bool_nocache\"" |
	//	"\"and_nocache\"" | "\"or_nocache\"");
	public TermsFilterExecutionParamElements getTermsFilterExecutionParamAccess() {
		return (pTermsFilterExecutionParam != null) ? pTermsFilterExecutionParam : (pTermsFilterExecutionParam = new TermsFilterExecutionParamElements());
	}
	
	public ParserRule getTermsFilterExecutionParamRule() {
		return getTermsFilterExecutionParamAccess().getRule();
	}

	//TypeFilter:
	//	"\"type\"" ":" TypeFilterObject;
	public TypeFilterElements getTypeFilterAccess() {
		return (pTypeFilter != null) ? pTypeFilter : (pTypeFilter = new TypeFilterElements());
	}
	
	public ParserRule getTypeFilterRule() {
		return getTypeFilterAccess().getRule();
	}

	//TypeFilterObject:
	//	"{" "\"value\"" ":" type=STRING "}";
	public TypeFilterObjectElements getTypeFilterObjectAccess() {
		return (pTypeFilterObject != null) ? pTypeFilterObject : (pTypeFilterObject = new TypeFilterObjectElements());
	}
	
	public ParserRule getTypeFilterObjectRule() {
		return getTypeFilterObjectAccess().getRule();
	}

	//// Data types:
	//GeoShapeObject:
	//	"{" GeoShape "}";
	public GeoShapeObjectElements getGeoShapeObjectAccess() {
		return (pGeoShapeObject != null) ? pGeoShapeObject : (pGeoShapeObject = new GeoShapeObjectElements());
	}
	
	public ParserRule getGeoShapeObjectRule() {
		return getGeoShapeObjectAccess().getRule();
	}

	//GeoShape:
	//	shape=Shape | indexedShape=IndexedShape;
	public GeoShapeElements getGeoShapeAccess() {
		return (pGeoShape != null) ? pGeoShape : (pGeoShape = new GeoShapeElements());
	}
	
	public ParserRule getGeoShapeRule() {
		return getGeoShapeAccess().getRule();
	}

	//IndexedShape:
	//	"\"indexed_shape\"" ":" "{" "\"id\"" ":" STRING "," "\"type\"" ":" STRING ("," "\"index\"" ":" STRING)? (","
	//	"\"path\"" ":" STRING)? "}";
	public IndexedShapeElements getIndexedShapeAccess() {
		return (pIndexedShape != null) ? pIndexedShape : (pIndexedShape = new IndexedShapeElements());
	}
	
	public ParserRule getIndexedShapeRule() {
		return getIndexedShapeAccess().getRule();
	}

	//Polygon:
	//	"[" points+=LatLon ("," points+=LatLon)* "]";
	public PolygonElements getPolygonAccess() {
		return (pPolygon != null) ? pPolygon : (pPolygon = new PolygonElements());
	}
	
	public ParserRule getPolygonRule() {
		return getPolygonAccess().getRule();
	}

	//BoundingBoxObject:
	//	"{" twoPointBoundingBox=TwoPointBoundingBox | verticesBoundingBox=VerticesBoundingBox "}";
	public BoundingBoxObjectElements getBoundingBoxObjectAccess() {
		return (pBoundingBoxObject != null) ? pBoundingBoxObject : (pBoundingBoxObject = new BoundingBoxObjectElements());
	}
	
	public ParserRule getBoundingBoxObjectRule() {
		return getBoundingBoxObjectAccess().getRule();
	}

	//TwoPointBoundingBox:
	//	"\"top_left\"" ":" topLeft=LatLon "," "\"bottom_right\"" ":" bottomRight=LatLon;
	public TwoPointBoundingBoxElements getTwoPointBoundingBoxAccess() {
		return (pTwoPointBoundingBox != null) ? pTwoPointBoundingBox : (pTwoPointBoundingBox = new TwoPointBoundingBoxElements());
	}
	
	public ParserRule getTwoPointBoundingBoxRule() {
		return getTwoPointBoundingBoxAccess().getRule();
	}

	//VerticesBoundingBox:
	//	"\"top\"" ":" FLOAT "," "\"left\"" ":" FLOAT "," "\"bottom\"" ":" FLOAT "," "\"right\"" ":" FLOAT;
	public VerticesBoundingBoxElements getVerticesBoundingBoxAccess() {
		return (pVerticesBoundingBox != null) ? pVerticesBoundingBox : (pVerticesBoundingBox = new VerticesBoundingBoxElements());
	}
	
	public ParserRule getVerticesBoundingBoxRule() {
		return getVerticesBoundingBoxAccess().getRule();
	}

	//LatLon:
	//	latLonObject=LatLonPropertyObject | latLonArray=LatLonArray | latLonString=LatLonString;
	public LatLonElements getLatLonAccess() {
		return (pLatLon != null) ? pLatLon : (pLatLon = new LatLonElements());
	}
	
	public ParserRule getLatLonRule() {
		return getLatLonAccess().getRule();
	}

	//LatLonPropertyObject:
	//	"{" "\"lat\"" ":" FLOAT "," "\"lon\"" ":" FLOAT "}";
	public LatLonPropertyObjectElements getLatLonPropertyObjectAccess() {
		return (pLatLonPropertyObject != null) ? pLatLonPropertyObject : (pLatLonPropertyObject = new LatLonPropertyObjectElements());
	}
	
	public ParserRule getLatLonPropertyObjectRule() {
		return getLatLonPropertyObjectAccess().getRule();
	}

	//LatLonArray:
	//	"[" lon=FLOAT "," lat=FLOAT "]";
	public LatLonArrayElements getLatLonArrayAccess() {
		return (pLatLonArray != null) ? pLatLonArray : (pLatLonArray = new LatLonArrayElements());
	}
	
	public ParserRule getLatLonArrayRule() {
		return getLatLonArrayAccess().getRule();
	}

	//LatLonString:
	//	latLonOrHash=STRING;
	public LatLonStringElements getLatLonStringAccess() {
		return (pLatLonString != null) ? pLatLonString : (pLatLonString = new LatLonStringElements());
	}
	
	public ParserRule getLatLonStringRule() {
		return getLatLonStringAccess().getRule();
	}

	//ShapeObject:
	//	"{" shape=Shape "}";
	public ShapeObjectElements getShapeObjectAccess() {
		return (pShapeObject != null) ? pShapeObject : (pShapeObject = new ShapeObjectElements());
	}
	
	public ParserRule getShapeObjectRule() {
		return getShapeObjectAccess().getRule();
	}

	//Shape:
	//	"\"shape\"" ":" "{" ShapeType "}";
	public ShapeElements getShapeAccess() {
		return (pShape != null) ? pShape : (pShape = new ShapeElements());
	}
	
	public ParserRule getShapeRule() {
		return getShapeAccess().getRule();
	}

	//ShapeType:
	//	ShapeTypeEnvelope;
	public ShapeTypeElements getShapeTypeAccess() {
		return (pShapeType != null) ? pShapeType : (pShapeType = new ShapeTypeElements());
	}
	
	public ParserRule getShapeTypeRule() {
		return getShapeTypeAccess().getRule();
	}

	//ShapeTypeEnvelope:
	//	"\"type\"" ":" "\"envelope\"" "," "\"coordinates\"" ":" "[" points+=LatLonArray ("," points+=LatLonArray)* "]";
	public ShapeTypeEnvelopeElements getShapeTypeEnvelopeAccess() {
		return (pShapeTypeEnvelope != null) ? pShapeTypeEnvelope : (pShapeTypeEnvelope = new ShapeTypeEnvelopeElements());
	}
	
	public ParserRule getShapeTypeEnvelopeRule() {
		return getShapeTypeEnvelopeAccess().getRule();
	}

	//Object:
	//	"{" {Object} members+=Member? ("," members+=Member)* "}";
	public ObjectElements getObjectAccess() {
		return (pObject != null) ? pObject : (pObject = new ObjectElements());
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}

	//Member:
	//	key=STRING ":" value=Value;
	public MemberElements getMemberAccess() {
		return (pMember != null) ? pMember : (pMember = new MemberElements());
	}
	
	public ParserRule getMemberRule() {
		return getMemberAccess().getRule();
	}

	//Value:
	//	object=Object | string=STRING | array=Array | bool=BOOLEAN | null=NULL | number=NUMBER;
	public ValueElements getValueAccess() {
		return (pValue != null) ? pValue : (pValue = new ValueElements());
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}

	//Array:
	//	"[" {Array} values+=Value? ("," values+=Value)* "]";
	public ArrayElements getArrayAccess() {
		return (pArray != null) ? pArray : (pArray = new ArrayElements());
	}
	
	public ParserRule getArrayRule() {
		return getArrayAccess().getRule();
	}

	//NUMBER:
	//	FLOAT | INT;
	public NUMBERElements getNUMBERAccess() {
		return (pNUMBER != null) ? pNUMBER : (pNUMBER = new NUMBERElements());
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}

	//FLOAT:
	//	"-"? INT? "." INT (("E" | "e") "-"? INT)?;
	public FLOATElements getFLOATAccess() {
		return (pFLOAT != null) ? pFLOAT : (pFLOAT = new FLOATElements());
	}
	
	public ParserRule getFLOATRule() {
		return getFLOATAccess().getRule();
	}

	//terminal BOOLEAN:
	//	"true" | "false";
	public TerminalRule getBOOLEANRule() {
		return (tBOOLEAN != null) ? tBOOLEAN : (tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOOLEAN"));
	} 

	//terminal NULL:
	//	"null";
	public TerminalRule getNULLRule() {
		return (tNULL != null) ? tNULL : (tNULL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NULL"));
	} 

	//terminal NONE_ALL:
	//	"\"none\"" | "\"all\"";
	public TerminalRule getNONE_ALLRule() {
		return (tNONE_ALL != null) ? tNONE_ALL : (tNONE_ALL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NONE_ALL"));
	} 

	//AND_OR:
	//	"\"and\"" | "\"or\"";
	public AND_ORElements getAND_ORAccess() {
		return (pAND_OR != null) ? pAND_OR : (pAND_OR = new AND_ORElements());
	}
	
	public ParserRule getAND_ORRule() {
		return getAND_ORAccess().getRule();
	}

	//terminal BOOL_CLAUSE:
	//	"\"must\"" | "\"must_not\"" | "\"should\"";
	public TerminalRule getBOOL_CLAUSERule() {
		return (tBOOL_CLAUSE != null) ? tBOOL_CLAUSE : (tBOOL_CLAUSE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOOL_CLAUSE"));
	} 

	//terminal SCORE_MODES:
	//	"\"max\"" | "\"sum\"" | "\"avg\"" | "\"none\"";
	public TerminalRule getSCORE_MODESRule() {
		return (tSCORE_MODES != null) ? tSCORE_MODES : (tSCORE_MODES = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SCORE_MODES"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
